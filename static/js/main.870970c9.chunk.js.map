{"version":3,"sources":["firebase.js","img/logo001a.png","components/Register.js","components/Login.js","components/Footer.js","img/logo-nav.png","components/Sidenav.js","components/Classes/ClassNav.js","components/Modules/Ressources/RessourceDetail.js","components/Classes/ClassItem.js","components/Classes/ListClasses.js","components/Assignments/Assignments.js","components/Dashboard.js","components/Modules/Ressources/RessourceItem.js","components/Modules/Ressources/ListRessources.js","components/Modules/ModuleItem.js","components/Modules/ListModules.js","components/Classes/ClassDetails.js","components/Assignments/AssignmentDetails.js","components/DashboardTeacher.js","components/Tools/ColorPicker.js","components/Classes/ManageClasses.js","components/Classes/ClassNew.js","components/Grades/GradesTableRows.js","components/Grades/Grades.js","components/Assignments/ListAssignmentByClass.js","components/Assignments/AssignmentList.js","components/Attendances/PeopleTableRows.js","components/Attendances/PeopleByClass.js","components/Attendances/AttendancesTableRows.js","components/Attendances/AttendanceByClass.js","components/Assignments/ManageAssignment.js","components/Assignments/AssignmentNew.js","components/Modules/ManageModules.js","components/Modules/ModuleNew.js","components/Attendances/RollCall.js","components/App.js","index.js"],"names":["initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Register","createBrowserHistory","props","handleAddUser","errorlist","state","uEuid","length","uFullName","db","getDatabase","bcrypt","hash","uPassword","then","hashpassword","set","ref","euid","fullName","dateofbirth","uDateOfBirth","password","role","history","push","catch","error","console","log","document","getElementById","textContent","handleUserInput","e","name","target","value","setState","validateField","uCPassword","formErrors","dateOfBirth","passwordConfirm","dateOfBirthValid","passwordValid","formValid","fieldName","fieldValidationErrors","this","dbValid","fullNameValid","euidValid","match","validateForm","Container","className","style","maxWidth","src","logo","alt","Card","Body","class","Style","id","Form","Group","errorClass","Label","for","Control","type","required","onChange","Button","size","onClick","disabled","to","Component","LogIn","useState","setuEuid","setuPassword","useHistory","clearErrorMessage","invalidLoginMessage","placeholder","dbRef","get","child","snapshot","exists","compare","val","err","result","backgroundColor","textAlign","padding","position","left","bottom","height","width","phantom","display","Footer","children","Sidenav","classList","assignmentList","dashboardlink","currentuser","forEach","item","itemVal","teacherID","classID","onlyOnce","title","listclasses","map","class_item","NavDropdown","Item","listassignments","assignment_item","assignmentID","teacher","dueDate","Navbar","bg","expand","Brand","Collapse","Nav","Link","ClassNav","defaultActiveKey","classId","isActive","RessourceDetail","description","ressourceID","params","ressourceId","Row","Col","xs","lg","Breadcrumb","moduleId","active","Accordion","flush","eventKey","Header","ClassItem","students","includes","variant","classColor","Title","Text","ListClasses","CardGroup","Assignments","assignmentsList","assignment","Badge","pill","summary","Dashboard","RessourceItem","ressourceList","moduleID","ressource_item","typeID","href","rel","ListRessources","ModuleItem","moduleList","publishedID","module_item","ListModules","ClassDetails","classTitle","classSection","AssignmentDetails","points","DashboardTeacher","Alert","ColorPicker","selectedColour","onSelectcolor","colour","index","setSelectedColour","ManageClasses","openModal","classid","actionType","openedDialog","closeModal","handleColorCode","colorValue","handleClassInput","handleRemoveClass","window","confirm","remove","location","reload","innerText","handleUpdateClass","meetingDates","published","roomNumber","seats","section","session","split","show","nb_classes","showHide","studentList","studentListUI","studentsID","nbclasses","hidefeedback","Table","striped","bordered","hover","DropdownButton","Dropdown","Modal","onHide","closeButton","onSubmit","defaultValue","readOnly","maxLength","ClassNew","handleCheckboxChange","event","newArray","filter","day","handleAddClass","student_item","ListGroup","as","Check","inline","checked","firstname","Select","handleModalShowHide","GradesTableRows","gradesList","gradeList","grade","numA","numB","numC","numF","gradesCount","Grades","md","span","offset","ProgressBar","now","label","ListAssignmentByClass","AssignmentList","PeopleTableRows","peoplesList","peopleList","people","PeopleByClass","AttendancesTableRows","attendsList","attendList","attend","date","status","pres","abs","rec","AttendanceByClass","ManageAssignment","assignmentid","handleAssignmentInput","handleUpdateAssignment","AssignmentNew","handleAddAssignment","duedate","preventDefault","ManageModules","moduleid","handleModuleInput","handleUpdateModule","getRessources","ressourcesList","sel_moduleID","handleAddRessource","ModuleNew","handleAddModule","RollCall","getListofstudents","getstudentFirstName","i","firstName","getElementsByName","innerHTML","handleRollCall","studentID","Date","today","getMonth","getFullYear","getDate","visibility","App","path","component","Login","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.870970c9.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\n\r\n\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyBKrmU5GrPvh5OgcwUkU3dY-tz6na-SFFQ\",\r\n    authDomain: \"studentportal-d9b8c.firebaseapp.com\",\r\n    databaseURL: \"https://studentportal-d9b8c-default-rtdb.firebaseio.com\",\r\n    projectId: \"studentportal-d9b8c\",\r\n    storageBucket: \"studentportal-d9b8c.appspot.com\",\r\n    messagingSenderId: \"544699300970\",\r\n    appId: \"1:544699300970:web:ad86be64ecde5faf915e13\"\r\n  };\r\n  \r\n\r\n\r\n  const app = initializeApp(firebaseConfig);\r\n\r\n\r\nexport default app;","export default __webpack_public_path__ + \"static/media/logo001a.cbd003c7.png\";","import { React, Component } from \"react\";\r\nimport { Form, Button, Card, Container } from \"react-bootstrap\";\r\nimport \"../firebase\";\r\nimport { getDatabase, set, ref } from \"firebase/database\";\r\nimport { Link } from 'react-router-dom';\r\nimport logo from \"../img/logo001a.png\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\nexport default class Register extends Component {\r\n  \r\n  //Props\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      uFullName: \"\",\r\n      uEuid: \"\",\r\n      uDateOfBirth: \"\",\r\n      uPassword: \"\",\r\n      uCPassword: \"\",\r\n      formErrors: {\r\n        dateOfBirth: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        fullName: \"\",\r\n        euid: \"\",\r\n        role:\"student\"\r\n      },\r\n      dateOfBirthValid: false,\r\n      passwordValid: false,\r\n      formValid: false,\r\n    };\r\n  }\r\n\r\n  handleAddUser = () => {\r\n let errorlist =\"\";\r\n    //validate\r\n    if (this.state.uEuid.length < 6) {\r\n     \r\n      errorlist += \"\\n Please enter euid : it is too short.\";\r\n     \r\n    }\r\n    if (this.state.uFullName.length === 0) {\r\n    \r\n      errorlist += \"\\n Please enter FullName : it is too short.\";\r\n    } else {\r\n      const db = getDatabase();\r\n\r\n      //check if the user is already in database, \r\n      \r\n      bcrypt.hash(this.state.uPassword, 12).then((hashpassword) => {\r\n        set(ref(db, \"users/\" + this.state.uEuid), {\r\n          euid: this.state.uEuid,\r\n          fullName: this.state.uFullName,\r\n          dateofbirth: this.state.uDateOfBirth,\r\n          password: hashpassword,\r\n          role:\"student\"\r\n        })\r\n          .then(() => {\r\n          \r\n            this.props.history.push(\"/\",{ state: 'pass'});\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Data failed!\" + error);\r\n          });\r\n      });\r\n    }\r\n    var error = document.getElementById(\"errorMessage\");\r\n    error.textContent = errorlist;\r\n  };\r\n  handleUserInput = (e) => {\r\n    const name = e.target.name;\r\n\r\n    const value = e.target.value;\r\n    // console.log(\"name\" +name + value);\r\n    this.setState({ [name]: value }, () => {\r\n      this.validateField(name, value);\r\n    });\r\n  };\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    let dbValid = this.state.uDateOfBirth;\r\n    let passwordValid = this.state.uPassword;\r\n    let fullNameValid = this.state.uFullName;\r\n    let euidValid = this.state.uEuid;\r\n\r\n    switch (fieldName) {\r\n      case \"uDateOfBirth\":\r\n        dbValid = value.match(\r\n          /^(((19|20)\\d\\d))-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$/\r\n        );\r\n\r\n        fieldValidationErrors.dateOfBirth = dbValid ? \"\" : \" is invalid\";\r\n\r\n        this.setState({\r\n          dateOfBirthValid: fieldValidationErrors.dateOfBirth.length === 0,\r\n        });\r\n        console.log(\"dateOfBirthValid :\" + this.state.dateOfBirthValid);\r\n        break;\r\n      case \"uCPassword\":\r\n        passwordValid = this.state.uPassword === value;\r\n\r\n        fieldValidationErrors.passwordConfirm = passwordValid\r\n          ? \"\"\r\n          : \" password not match\";\r\n        this.setState({ passwordValid: passwordValid });\r\n        break;\r\n      case \"uPassword\":\r\n        passwordValid = value.length >= 6;\r\n        fieldValidationErrors.password = passwordValid ? \"\" : \" is too short\";\r\n        break;\r\n      case \"uFullName\":\r\n        fullNameValid = value.length > 0;\r\n\r\n        fieldValidationErrors.fullName = fullNameValid\r\n          ? \"\"\r\n          : \" can not be empty\";\r\n        break;\r\n      case \"uEuid\":\r\n        euidValid = value.length >= 6;\r\n       // console.log(\"euidValid\" + euidValid);\r\n        fieldValidationErrors.euid = euidValid ? \"\" : \" is too short\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ formErrors: fieldValidationErrors }, this.validateForm);\r\n  }\r\n  validateForm() {\r\n   // console.log( \"validate : \" + this.state.dateOfBirthValid && this.state.passwordValid );\r\n    this.setState({\r\n      formValid: this.state.dateOfBirthValid && this.state.passwordValid,\r\n    });\r\n  }\r\n  errorClass(error) {\r\n    // console.log(error);\r\n    return error.length === 0 ? \"\" : \"has-error\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     <div>\r\n        <Container className=\"d-flex align-item-center justify-content-center\">\r\n          <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n            <img\r\n              src={logo}\r\n              className=\"logo mx-auto d-block mb-3 mt-3\"\r\n              alt=\"Portal logo\"\r\n            ></img>\r\n            <Card className=\"login\">\r\n              <Card.Body>\r\n                <div class=\"shadow p-2 mb-3 bg-primary text-center text-white\">\r\n                  <h1 Style=\"font-size:26px\">Register</h1>\r\n                </div>\r\n                <div className=\"body\">\r\n                <div className=\"w-100 text-center mt-2 text-danger\" id=\"errorMessage\" ></div>\r\n                  <Form>\r\n                    <Form.Group\r\n                      id=\"fullName\"\r\n                      className={`${this.errorClass(\r\n                        this.state.formErrors.fullName\r\n                      )}`}\r\n                    >\r\n                      <Form.Label for=\"uFullName\">Full Name</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        id=\"uFullName\"\r\n                        name=\"uFullName\"\r\n                        required\r\n                        onChange={this.handleUserInput}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                      id=\"euid\"\r\n                      className={`${this.errorClass(\r\n                        this.state.formErrors.euid\r\n                      )}`}\r\n                    >\r\n                      <Form.Label for=\"uEuid\">EUID</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        id=\"uEuid\"\r\n                        name=\"uEuid\"\r\n                        required\r\n                        onChange={this.handleUserInput}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                      id=\"date-of-birth\"\r\n                      className={`${this.errorClass(\r\n                        this.state.formErrors.dateOfBirth\r\n                      )}`}\r\n                    >\r\n                      <Form.Label for=\"uDateOfBirth\">Date of Birth</Form.Label>\r\n                      <Form.Control\r\n                        type=\"date\"\r\n                        id=\"uDateOfBirth\"\r\n                        name=\"uDateOfBirth\"\r\n                        required\r\n                        onChange={this.handleUserInput}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                      id=\"password\"\r\n                      className={`${this.errorClass(\r\n                        this.state.formErrors.password\r\n                      )}`}\r\n                    >\r\n                      <Form.Label for=\"uPassword\">Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        id=\"uPassword\"\r\n                        name=\"uPassword\"\r\n                        required\r\n                        onChange={this.handleUserInput}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                      id=\"password-confirm\"\r\n                      className={`${this.errorClass(\r\n                        this.state.formErrors.passwordConfirm\r\n                      )}`}\r\n                    >\r\n                      <Form.Label for=\"uCPassword\">Password Confirmation</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        id=\"uCPassword\"\r\n                        name=\"uCPassword\"\r\n                        required\r\n                        onChange={this.handleUserInput}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"action\">\r\n                  \r\n                      <Button\r\n                        className=\"w-100 btn-secondary\"\r\n                        size=\"lm\"\r\n                        type=\"Button\"\r\n                        onClick={this.handleAddUser}\r\n                        disabled={!this.state.formValid}\r\n                      >\r\n                        Sign Up\r\n                      </Button>\r\n                    </Form.Group>\r\n                  </Form>\r\n                  <div className=\"w-100 text-center mt-2\">\r\n                    Already have an account?\r\n                    <Link to=\"/\"> Log In </Link>\r\n                  </div>\r\n                \r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </Container>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n","import { React, useState } from \"react\";\r\nimport { Form, Button, Card, Container } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { getDatabase, get, ref, child } from \"firebase/database\";\r\nimport logo from \"../img/logo001a.png\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport default function LogIn() {\r\n  const [uEuid, setuEuid] = useState(\"\");\r\n  const [uPassword, setuPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  function clearErrorMessage() {\r\n    var error = document.getElementById(\"errorMessage\");\r\n    error.textContent = \"\";\r\n  }\r\n\r\n  function invalidLoginMessage(){\r\n    var error = document.getElementById(\"errorMessage\");\r\n    error.textContent = \"Invalid Login\";\r\n    console.log(\"Invalid Login\");\r\n  }\r\n  function handleLoginUser() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    get(child(dbRef, \"users/\" + uEuid))\r\n      .then((snapshot) => {\r\n        // checks if euid is in database\r\n        if (snapshot.exists()) {\r\n          // checks password match, if true then redirects to dashboard\r\n          bcrypt.compare(\r\n            uPassword,\r\n            snapshot.child(\"password\").val(),\r\n            function (err, result) {\r\n              if (result) {\r\n                const role = snapshot.child(\"role\").val();\r\n                const fName = snapshot.child(\"firstname\").val();\r\n                console.log(\"password same \" + result + role );\r\n                \r\n                // redirects to either student or teacher dashboard based on role\r\n                if (role == \"student\" )\r\n                {\r\n                  history.push(\"/Dashboard/\"+ uEuid);\r\n                }\r\n                else if (role == \"teacher\")\r\n                {\r\n                  history.push(\"DashboardTeacher/\" + uEuid);\r\n                }\r\n                \r\n              }// if(result)\r\n              // if password does not match, error messages displayed\r\n              else {\r\n                invalidLoginMessage();\r\n              }\r\n            }\r\n          );\r\n          if (snapshot.child(\"password\").val() === uPassword) {\r\n            history.push(\"/Dashboard\");\r\n            console.log(\"Correct password\");\r\n          }\r\n        }\r\n        // if euid is not found in database, error message is displayed\r\n        else {\r\n          invalidLoginMessage();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  } //function handleLoginUser()\r\n\r\n  return (\r\n    \r\n    <>\r\n    {}\r\n      <Container className=\"d-flex align-item-center justify-content-center\">\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <img\r\n            src={logo}\r\n            className=\"logo mx-auto d-block mb-3 mt-3\"\r\n            alt=\"Portal logo\"\r\n          ></img>\r\n          \r\n          <Card className=\"login\">\r\n            <Card.Body>\r\n              <div class=\"shadow p-2 mb-3 bg-primary text-center text-white\">\r\n                <h1 Style=\"font-size:26px\">Login</h1>\r\n              </div>\r\n              <div className=\"body\">\r\n                <Form.Group id=\"euid\">\r\n                  <Form.Label for=\"uEUID\">EUID</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    id = \"uEUID\"\r\n                    required\r\n                    placeholder=\"EUID\"\r\n                    onChange={(e) => {\r\n                      setuEuid(e.target.value);\r\n                      clearErrorMessage();\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label for=\"uPassword\">Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    id = \"uPassword\"\r\n                    required\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) => {\r\n                      setuPassword(e.target.value);\r\n                      clearErrorMessage();\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button\r\n                    className=\"w-75 mt-2\"\r\n                    type=\"Button\"\r\n                    onClick={handleLoginUser}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n\r\n                <div className=\"w-100 text-center mt-2\">\r\n                  Don't have an account?\r\n                  <Link to=\"/Register\"> Register </Link>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"w-100 text-center mt-2 text-danger\"\r\n                  id=\"errorMessage\"\r\n                ></div>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n                  }\r\n","var style = {\r\n    backgroundColor: \"#F8F8F8\",\r\n  \r\n    textAlign: \"center\",\r\n    padding: \"20px\",\r\n    position: \"fixed\",\r\n    left: \"0\",\r\n    bottom: \"0\",\r\n    height: \"60px\",\r\n    width: \"100%\",\r\n}\r\n\r\nvar phantom = {\r\n  display: 'block',\r\n  padding: '20px',\r\n  height: '60px',\r\n  width: '100%',\r\n}\r\n\r\nfunction Footer({ children }) {\r\n    return (\r\n        <div>\r\n            <div style={phantom} />\r\n            <div style={style}>\r\n              Copyright 2021\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","export default __webpack_public_path__ + \"static/media/logo-nav.2c59ed9d.png\";","import React, { Component } from \"react\";\r\nimport { NavDropdown, Navbar, Container, Nav } from \"react-bootstrap\";\r\nimport \"../firebase\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport logo from \"../img/logo-nav.png\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class Sidenav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      classList: [],\r\n      assignmentList: [],\r\n      dashboardlink: \"\",\r\n      currentuser: this.props.euid,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let classList = [];\r\n    let assignmentList = [];\r\n    let dashboardlink = \"Dashboard\";\r\n    let currentuser = this.state.currentuser;\r\n    //get list of classes\r\n    get(child(dbRef, `classes`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              classList.push(itemVal);\r\n\r\n              if (itemVal.teacherID == currentuser) {\r\n                dashboardlink = \"DashboardTeacher\";\r\n              }\r\n\r\n              console.log(itemVal.classID);\r\n            });\r\n\r\n            this.setState({ dashboardlink: dashboardlink });\r\n            this.setState({ classList: classList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n    //get list of assignments\r\n    get(child(dbRef, `assignments`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              assignmentList.push(itemVal);\r\n              console.log(itemVal.title);\r\n            });\r\n\r\n            this.setState({ assignmentList: assignmentList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  render() {\r\n    //create nav nodes for classes\r\n    const listclasses = this.state.classList.map((class_item) => (\r\n      <NavDropdown.Item key={class_item.classID}>\r\n        {\r\n          <Link\r\n            to={`/classDetails/${class_item.classID}/${class_item.teacherID}`}\r\n          >\r\n            {class_item.classID} - {class_item.name}\r\n            \r\n          </Link>\r\n        }\r\n      </NavDropdown.Item>\r\n    ));\r\n    //create nav nodes for assignments\r\n    const listassignments = this.state.assignmentList.map((assignment_item) => (\r\n      <NavDropdown.Item >\r\n        {\r\n          <Link\r\n            className=\"dropdown-item\"\r\n            to={`/assignmentDetails/${assignment_item.assignmentID}/${assignment_item.classID}/${assignment_item.teacher}`}\r\n          >\r\n            {assignment_item.title} - Due: {assignment_item.dueDate} - {assignment_item.classID}{\" \"}\r\n            \r\n          </Link>\r\n        }\r\n      </NavDropdown.Item>\r\n    ));\r\n    return (\r\n      <div id=\"slide-out\" className=\"side-nav fixed\">\r\n        <Navbar bg=\"light\" expand=\"lg\" className=\"nav-portal\">\r\n          <Container>\r\n            <Navbar.Brand>\r\n              <Link to={`/` + this.state.dashboardlink + `/` + this.props.euid}>\r\n              <img src={logo} alt=\"portal logo\" className=\"nav-logo\"></img>\r\n              </Link>\r\n            </Navbar.Brand>\r\n        \r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"me-auto\">\r\n              <Nav.Link>\r\n                <Link Style=\"text-decoration:none!important\"\r\n                  to={`/` + this.state.dashboardlink + `/` + this.props.euid}\r\n                 \r\n                >\r\n                  Dashboard\r\n                </Link></Nav.Link>\r\n\r\n                <NavDropdown title=\"Classes\" id=\"basic-nav-dropdown\">\r\n                  {listclasses}\r\n                </NavDropdown>\r\n                <NavDropdown title=\"Assignments\" id=\"basic-nav-dropdown2\">\r\n                  {listassignments}\r\n                </NavDropdown>\r\n                <Nav.Link>\r\n                <Link to={`/rollCall/` + this.props.euid} Style=\"text-decoration:none!important\">\r\n                  Attendance\r\n                </Link></Nav.Link>\r\n                <Link to={`/`} className=\"nav-link-logout\">\r\n                  Logout\r\n                </Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Nav} from \"react-bootstrap\";\r\nimport   \"../../firebase\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default class ClassNav extends Component {\r\n\r\n    render() {\r\n  \r\n        return (\r\n        \r\n            <Nav defaultActiveKey=\"/\" className=\"class-nav flex-column\">\r\n        \r\n            <Nav.Link> <Link to={\"/classDetails/\"+ this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive === 1) ?\"active\": \"\"}>Modules </Link></Nav.Link>\r\n            <Nav.Link> <Link to={\"/Grades/\"+ this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive ==2) ?\"active\": \"\"}>Grades </Link></Nav.Link>\r\n            <Nav.Link> <Link to={`/assignmentListsByClass/`+this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive == 3) ?\"active\": \"\"}>Assignments </Link></Nav.Link>\r\n            <Nav.Link>  <Link to={\"/attendances/\"+ this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive == 4) ?\"active\": \"\"}>Attendance </Link></Nav.Link>\r\n            <Nav.Link> <Link to={\"/people/\"+ this.props.classId+\"/\"+this.props.euid}  className={(this.props.isActive ==5) ?\"active\": \"\"}>People </Link></Nav.Link>\r\n          </Nav>\r\n\r\n\r\n            );\r\n        \r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport { Container, Row, Col, Breadcrumb } from \"react-bootstrap\";\r\nimport Footer from \"../../Footer\";\r\nimport Sidenav from \"../../Sidenav\";\r\nimport ClassNav from \"../../Classes/ClassNav\";\r\nimport \"../../../firebase\";\r\n//import \"font-awesome/css/font-awesome.min.css\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class RessourceDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { description: \"\", title: \"\" };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    let title = \"\";\r\n    let description = \"\";\r\n    //get list of ressources\r\n    get(child(dbRef, `ressources`))\r\n      .then(\r\n        (snapshot) => {\r\n          let ressourceID = this.props.match.params.ressourceId;\r\n          console.log(\"searching for ressources\" + ressourceID);\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              //  console.log(\"ressource \"+ressourceID);\r\n              if (itemVal.ressourceID == ressourceID) {\r\n                description = itemVal.description;\r\n                title = itemVal.title;\r\n              }\r\n            });\r\n            this.setState({ description: description });\r\n            this.setState({ title: title });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n   \r\n       <Sidenav euid={this.props.match.params.euid} />\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col xs lg=\"2\">\r\n              <ClassNav  euid={this.props.match.params.euid} classId={this.props.match.params.classId}  isActive=\"1\"></ClassNav>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"ressources\">\r\n                <Breadcrumb>\r\n               \r\n                  <Breadcrumb.Item>\r\n                    <Link\r\n                      to={`/classDetails/${this.props.match.params.classId}/${this.props.match.params.euid}`}\r\n                    >\r\n                      Class\r\n                    </Link>\r\n                  </Breadcrumb.Item>\r\n                  <Breadcrumb.Item>\r\n                    <Link\r\n                      to={`/classDetails/${this.props.match.params.classId}/${this.props.match.params.euid}`}\r\n                    >\r\n                      Module {this.props.match.params.moduleId}\r\n                    </Link>\r\n                  </Breadcrumb.Item>\r\n                  <Breadcrumb.Item active>{this.state.title}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n\r\n                <Accordion defaultActiveKey=\"0\" flush>\r\n                  <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header>{this.state.title}</Accordion.Header>\r\n                    <Accordion.Body>{this.state.description}</Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Card} from \"react-bootstrap\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class ClassItem extends Component {\r\n    constructor(props) {\r\n    \r\n        super(props);\r\n      \r\n        \r\n        this.state = {classList : []}\r\n        }\r\n        componentDidMount() {\r\n            \r\n            const dbRef = ref(getDatabase());\r\n            let classList = [];\r\n           \r\n\r\n    //get list of classes\r\n    get(child(dbRef, `classes`)).then((snapshot) => {\r\n      let euid = this.props.euid;\r\n      console.log(`object list`,   this.props.euid);\r\n      if (snapshot.exists()) {\r\n        snapshot.forEach(function (item) {\r\n          var itemVal = item.val();\r\n          console.log(\" euid:\"+ euid +  itemVal.students+ itemVal.students.includes(euid));\r\n          if(itemVal.teacherID == euid || itemVal.students.includes(euid)){\r\n          classList.push(itemVal);\r\n         \r\n          }\r\n        });\r\n        this.setState({ classList: classList });\r\n      } else {\r\n        console.log(\"No data available\");\r\n      }\r\n    }, {\r\n      onlyOnce: true\r\n    }).catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n            \r\n        \r\n    render() {\r\n        \r\n       \r\n        return (\r\n            \r\n            this.state.classList.map((class_item) =>\r\n                   <div>\r\n                \r\n                <Card style={{ width: '18rem','marginRight': '20px' }}>\r\n                  \r\n  <Card variant=\"top\" alt=\"Class\" className=\"class_img\" Style={\"Background-color:\"+class_item.classColor} />\r\n  <Card.Body>\r\n    <Card.Title>{class_item.name}</Card.Title>\r\n    <Card.Text>\r\n    {class_item.description}\r\n    </Card.Text>\r\n    <Button variant=\"primary class-more-btn\"><Link to={`/classDetails/${class_item.classID}/${this.props.euid}`}>\r\n    <i class=\"fa fa-angle-double-right\"></i>  Access\r\n          </Link></Button>         \r\n  </Card.Body>\r\n</Card>\r\n            </div>\r\n               ));\r\n        \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { CardGroup} from \"react-bootstrap\";\r\nimport   \"../../firebase\";\r\n\r\nimport ClassItem from './ClassItem';\r\n\r\nexport default class ListClasses extends Component {\r\n\r\n    render() {\r\n        \r\n       \r\n        return (\r\n            <CardGroup>\r\n       \r\n                <ClassItem role={this.props.role} euid={this.props.euid}></ClassItem>\r\n            </CardGroup>\r\n\r\n\r\n            );\r\n        \r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\"\r\nimport \"../../css/assignmentStyle.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, Button } from \"react-bootstrap\";\r\n\r\nexport default class Assignments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { assignmentsList: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const dbRef = ref(getDatabase());\r\n        let assignmentList = [];\r\n\r\n        // Get list of assignments\r\n        get(child(dbRef, 'assignments'))\r\n            .then(assignment => {\r\n                if (assignment.exists()) {\r\n                    assignment.forEach(item => {\r\n                        let itemVal = item.val();\r\n                        assignmentList.push(itemVal);\r\n                        console.log(itemVal.title);\r\n                    });\r\n\r\n                    this.setState({ assignmentsList: assignmentList });\r\n                } else {\r\n                    console.log(\"No assignemnts found\");\r\n                }\r\n            }, {\r\n                onlyOnce: true\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        // Creates assignemnts cards\r\n        return (\r\n            this.state.assignmentsList.map(item => \r\n                <div  id=\"card\">\r\n                    <h2 className=\"title card-title h5\">{item.title}</h2>\r\n                    <section>\r\n                    <p> <Badge pill  bg=\"success\">{item.className}</Badge> | \r\n                   <Badge pill  bg=\"danger\">{item.dueDate}</Badge>\r\n                    </p>\r\n                   <p> {item.summary} </p>\r\n                \r\n                      \r\n                    <Button variant=\"secondary class-more-btn\"><Link to={`/assignmentDetails/${item.assignmentID}/${item.classID}/${this.props.euid}`}>+ More</Link></Button>\r\n                    </section>\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport Footer from \"./Footer\";\r\nimport Sidenav from \"./Sidenav\";\r\nimport ListClasses from \"./Classes/ListClasses\";\r\nimport Assignments from \"./Assignments/Assignments\";\r\nexport default class Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n            <Sidenav role=\"student\" euid={this.props.match.params.euid}/>\r\n        <Container>\r\n        \r\n          \r\n        \r\n          <Row className=\"theme_body\">\r\n          <div className=\"big-title\">\r\n\t\t      <h3 className=\"big_title\">Classes</h3>\r\n     \r\n                <div> <ListClasses role=\"student\" euid= {this.props.match.params.euid}></ListClasses></div>\r\n</div>\r\n<div className=\"big-title\">\r\n\t\t      <h3 className=\"big_title\">Assignments</h3>\r\n\t\t\t\r\n                <div className=\"assignment-cards\"> <Assignments euid= {this.props.match.params.euid} /></div>\r\n</div>\r\n          </Row>\r\n          <Row>\r\n              <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ListGroup from \"react-bootstrap/Accordion\";\r\n\r\nimport \"../../../firebase\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class RessourceItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ressourceList: [] };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let ressourceList = [];\r\n\r\n    //get list of ressources\r\n    get(child(dbRef, `ressources`))\r\n      .then(\r\n        (snapshot) => {\r\n          let moduleID = this.props.moduleID;\r\n          console.log(\"searching for ressources\" + moduleID);\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              // console.log(\"found 1\"+itemVal.moduleID);\r\n              if (itemVal.moduleID == moduleID) {\r\n                console.log(\"found :\" + moduleID);\r\n                ressourceList.push(itemVal);\r\n              }\r\n            });\r\n            this.setState({ ressourceList: ressourceList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return this.state.ressourceList.map((ressource_item) => (\r\n      <div className=\"ressources\">\r\n        <ListGroup>\r\n          <ListGroup.Item>\r\n            {\" \"}\r\n            <i\r\n              className={`fa fa-${\r\n                ressource_item.typeID === 1 ? \"file\" : \"external-link\"\r\n              }`}\r\n            ></i>\r\n           {/*if the ressource type is file */}\r\n\r\n            {ressource_item.typeID === 1 ? (\r\n              <Link\r\n                to={`/ressourceDetails/${ressource_item.ressourceID}/${this.props.moduleID}/${this.props.classID}/${this.props.euid}`}\r\n              >\r\n                {ressource_item.title}{\" \"}\r\n              </Link>\r\n            ) : (\r\n                /*if the ressource type is external link */\r\n              <a href={ressource_item.description} target=\"_blank\" rel=\"noreferrer\">\r\n                {ressource_item.title}{\" \"}\r\n              </a>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport   \"../../../firebase\";\r\n\r\nimport Ressourcetem from './RessourceItem';\r\n\r\nexport default class ListRessources extends Component {\r\n\r\n    render() {\r\n        \r\n       \r\n        return (\r\n           <div>\r\n\r\n                <Ressourcetem classID ={this.props.classID} moduleID={this.props.moduleID} euid={this.props.euid}></Ressourcetem>\r\n     \r\n           </div>\r\n          \r\n\r\n\r\n            );\r\n        \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\n\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\n\r\nimport ListRessources from './Ressources/ListRessources';\r\n\r\nexport default class ModuleItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {moduleList : [] };\r\n\r\n        }\r\n        componentDidMount() {\r\n            \r\n            const dbRef = ref(getDatabase());\r\n            let moduleList = [];\r\n           \r\n\r\n    //get list of modules\r\n    get(child(dbRef, `modules`)).then((snapshot) => {\r\n     \r\n      let classID = this.props.classID;\r\n      console.log(\"searching for modules\"+classID);\r\n      if (snapshot.exists()) {\r\n        snapshot.forEach(function (item) {\r\n        \r\n          var itemVal = item.val();\r\n         // console.log(\"found 1\"+itemVal.classID);\r\n          if(itemVal.classID == classID && itemVal.publishedID == 1)\r\n          {\r\n           \r\n            moduleList.push(itemVal);\r\n          }\r\n        \r\n         \r\n        });\r\n        this.setState({ moduleList: moduleList });\r\n      } else {\r\n        console.log(\"No data available\");\r\n      }\r\n    }, {\r\n      onlyOnce: true\r\n    }).catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n            \r\n        \r\n    render() {\r\n        \r\n       \r\n        return (\r\n           \r\n            this.state.moduleList.map((module_item) =>\r\n              <div className=\"modules\">\r\n            <Accordion defaultActiveKey=\"0\" flush>\r\n            <Accordion.Item eventKey=\"0\">\r\n              <Accordion.Header>{module_item.title}</Accordion.Header>\r\n              <Accordion.Body>\r\n            <ListRessources  classID={this.props.classID} moduleID={module_item.moduleID} euid={this.props.euid}></ListRessources>\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n            </Accordion>\r\n            </div>\r\n               ));\r\n        \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport   \"../../firebase\";\r\n\r\nimport ModuleItem from './ModuleItem';\r\n\r\nexport default class ListModules extends Component {\r\n\r\n    render() {\r\n        \r\n       \r\n        return (\r\n           <>\r\n\r\n                <ModuleItem euid={this.props.euid} classID={this.props.classID}></ModuleItem>\r\n     \r\n           </>\r\n          \r\n\r\n\r\n            );\r\n        \r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ClassNav from \"./ClassNav\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport ListModules from \"../Modules/ListModules\";\r\nexport default class ClassDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { classTitle: \"\" ,classSection :\"\" };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    //get  classe title\r\n\r\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n          \r\n            if (\r\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\r\n            ) {\r\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\r\n              this.setState({ classSection: snapshot.child(\"section\").val() });\r\n            }\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n    \r\n       <Sidenav   euid={this.props.match.params.euid} />\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col xs lg=\"2\">\r\n          \r\n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"1\"></ClassNav>\r\n            </Col>\r\n            <Col> <h3 className=\"big_title\">{this.state.classTitle} Section {this.state.classSection}</h3>\r\n           \r\n            <ListModules classID={this.props.match.params.classId} euid={this.props.match.params.euid}></ListModules>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Breadcrumb,\r\n  Badge,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ClassNav from \"../Classes/ClassNav\";\r\nimport \"../../firebase\";\r\n//import \"font-awesome/css/font-awesome.min.css\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class AssignmentDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { description: \"\", title: \"\", dueDate: \"\", className: \"\" };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    let title = \"\";\r\n    let description = \"\";\r\n    let dueDate = \"\";\r\n    let points = \"\";\r\n    let className = \"\";\r\n    //get list of ressources\r\n    get(child(dbRef, `assignments`))\r\n      .then(\r\n        (snapshot) => {\r\n          let assignmentID = this.props.match.params.assignmentID;\r\n          console.log(\"searching for assignments\" + assignmentID);\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              //  console.log(\"ressource \"+ressourceID);\r\n              if (itemVal.assignmentID == assignmentID) {\r\n                description = itemVal.description;\r\n                title = itemVal.title;\r\n                dueDate = itemVal.dueDate;\r\n                points = itemVal.points;\r\n                className = itemVal.className;\r\n              }\r\n            });\r\n            this.setState({ description: description });\r\n            this.setState({ title: title });\r\n            this.setState({ dueDate: dueDate });\r\n            this.setState({ points: points });\r\n            this.setState({ className: className });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Sidenav euid={this.props.match.params.euid} />\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col xs lg=\"2\">\r\n              <ClassNav\r\n                euid={this.props.match.params.euid}\r\n                classId={this.props.match.params.classId}\r\n                isActive=\"3\"\r\n              ></ClassNav>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"assignment\">\r\n                <Breadcrumb>\r\n                  <Breadcrumb.Item>\r\n                    <Link\r\n                      to={`/classDetails/${this.props.match.params.classId}/${this.props.match.params.euid}`}\r\n                    >\r\n                      Class\r\n                    </Link>\r\n                  </Breadcrumb.Item>\r\n                  <Breadcrumb.Item>\r\n                    <Link\r\n                      to={`/assignmentListsByClass/${this.props.match.params.classId}/${this.props.match.params.euid}`}\r\n                    >\r\n                      Assignments {this.props.match.params.moduleId}\r\n                    </Link>\r\n                  </Breadcrumb.Item>\r\n                  <Breadcrumb.Item active>{this.state.title}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n\r\n                <Accordion defaultActiveKey=\"0\" flush>\r\n                  <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header>{this.state.title}</Accordion.Header>\r\n                    <Accordion.Body>\r\n                      <Row>\r\n                        <Col>\r\n                          <span Style=\"font-weight: bold;color: red;\">\r\n                            {\" \"}\r\n                            <i className=\"fa fa-calendar-plus-o\"></i>Due Date :\r\n                          </span>{\" \"}\r\n                          <Badge bg=\"secondary\">{this.state.dueDate}</Badge> |    <Badge bg=\"info\">{this.state.className}</Badge>\r\n                        </Col>\r\n                      </Row>\r\n                    \r\n                      <Row>\r\n                        <p>{this.state.description}</p>\r\n                      </Row>\r\n                      <Button variant=\"primary\">Submit assignment</Button>\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col,Alert,Button } from \"react-bootstrap\";\r\nimport Footer from \"./Footer\";\r\nimport Sidenav from \"./Sidenav\";\r\nimport ListClasses from \"./Classes/ListClasses\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class DashboardTeacher extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n             <Sidenav  role=\"teacher\" euid={this.props.match.params.euid} />\r\n        <Container>\r\n        \r\n        \r\n        \r\n          <Row className=\"theme_body\">\r\n            <div>\r\n            <Col className=\"welcome_box\">\r\n<Alert key=\"welcome\" variant=\"secondary\">\r\n<h1  Style=\"font-size:20px\">Welcome</h1>\r\n<p>\r\n\r\nAww yeah, you successfully read this important alert message.\r\n</p>\r\n<hr/>\r\n<div className=\"d-flex justify-content-end\">\r\n<Button variant=\"primary\"><Link to={`/rollCall/${this.props.match.params.euid}`}  className=\"white\">\r\n<i class=\"fa fa-hand-paper-o\"></i> Roll Call\r\n          </Link></Button> <Button variant=\"primary\"><Link className=\"white\" to={`/newClass/${this.props.match.params.euid}`}>\r\n          <i class=\"fa fa-plus-circle\" ></i> Manage Classes\r\n          </Link></Button>\r\n          <Button variant=\"primary\"><Link className=\"white\" to={`/manageAssignment/${this.props.match.params.euid}`}>\r\n          <i class=\"fa fa-plus-circle\" ></i> Manage Assignments\r\n          </Link></Button>\r\n        </div>\r\n\r\n  </Alert>\r\n\r\n</Col>\r\n\r\n              </div>\r\n          <div className=\"big-title\">\r\n\t\t      <h1 className=\"big_title\">Classes</h1>\r\n\t\t\t\r\n                <div> <ListClasses role=\"teacher\" euid={this.props.match.params.euid}></ListClasses></div>\r\n</div>\r\n\r\n          </Row>\r\n          <Row>\r\n              <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ColorPicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n    this.state = { selectedColour :\"\"\r\n    };\r\n    this.props.onSelectcolor(this.state.selectedColour);\r\n}\r\n    setSelectedColour(colour) {\r\n\t\tthis.setState({ selectedColour: colour });\r\n\t}\r\n    render() {\r\n        const defaultColours = [\r\n            '#FF1654',\r\n            '#247BA0',\r\n            '#70C1B3',\r\n            '#92b300',\r\n            '#CBB1DB',\r\n            '#C1BF70',\r\n            '#add8e6',\r\n            '#ffc1cb',\r\n            '#67d8f3',\r\n            '#f3af67'\r\n        ];\r\n        \r\n        return (\r\n           \r\n         \r\n            <ul className=\"icons\">\r\n                {defaultColours.map((colour, index) => {\r\n                    return (\r\n                        <li key={index} onClick={() =>{ this.setSelectedColour(colour);   this.props.onSelectcolor(colour);}}>\r\n                            <span className={`dot color border-radius ${this.state.selectedColour === colour ? 'selected' : ''}`} style={{ backgroundColor: colour}}></span>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Table,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set, remove } from \"firebase/database\";\r\nimport ColorPicker from \"../Tools/ColorPicker\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class ManageClasses extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      classList: [],\r\n      show: false,\r\n      openedDialog: -1,\r\n      nb_classes: 0,\r\n      actionType: \"\",\r\n      classColor: \"\",\r\n      showHide: false,\r\n      studentList: [],\r\n      studentListUI: [],\r\n      studentsID: [],\r\n      nbclasses: 0,\r\n      classID: \"\",\r\n      description: \"\",\r\n      meetingDates: \"\",\r\n      title: \"\",\r\n      published: 0,\r\n      roomNumber: \"\",\r\n      seats: 0,\r\n      section: \"\",\r\n      session: 2,\r\n      students: [],\r\n      teacherID: this.props.teacherID,\r\n      hidefeedback: \"none\",\r\n    };\r\n  }\r\n\r\n  openModal = (classid, actionType) => {\r\n    this.setState({\r\n      openedDialog: classid,\r\n      actionType: actionType,\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      openedDialog: null,\r\n    });\r\n  };\r\n  handleColorCode = (colorValue) => {\r\n    this.setState({ classColor: colorValue });\r\n  };\r\n  //method to update the state variables with the user inputs\r\n  handleClassInput = (e) => {\r\n    const name = e.target.name;\r\n\r\n    const value = e.target.value;\r\n\r\n    this.setState({ [name]: value });\r\n    console.log(\"Name: \" + name + \"value:\" + value);\r\n  };\r\n  //handle popup\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n\r\n  //method to remove class to the database\r\n  handleRemoveClass = (classID) => {\r\n    const db = getDatabase();\r\n    ///\r\n\r\n    if (window.confirm(\"Are you sure you wish to delete this item?\")) {\r\n      remove(ref(db, \"classes/\" + classID))\r\n        .then(() => {\r\n          window.location.reload(false);\r\n          document.getElementById(\"feedback\").style.display = \"block\";\r\n          document.getElementById(\"feedback\").innerText =\r\n            \"Class \" + classID + \" remove successfully!\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Failed to remove class :\" + classID + \" error :\" + error\r\n          );\r\n        });\r\n    }\r\n\r\n    ///\r\n  };\r\n  //method to update class to the database\r\n  handleUpdateClass = (classID) => {\r\n    const db = getDatabase();\r\n    set(ref(db, \"classes/\" + classID), {\r\n      classID: classID,\r\n      description: document.getElementById(\"description_val\").value,\r\n      meetingDates: document.getElementById(\"meetingDates_val\").value,\r\n      name: document.getElementById(\"name_val\").value,\r\n      published: 1,\r\n      roomNumber: document.getElementById(\"roomNumber_val\").value,\r\n      seats: document.getElementById(\"seats_val\").value,\r\n      section: document.getElementById(\"section_val\").value,\r\n      session: document.getElementById(\"session_val\").value,\r\n      students: document.getElementById(\"studentIDs_val\").value.split(\",\"),\r\n      teacherID: this.props.teacherID,\r\n      classColor: this.state.classColor,\r\n    })\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to save data new class!\" + error);\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let classList = [];\r\n    let teacher = this.props.teacherID;\r\n\r\n    //get list of classes\r\n    get(child(dbRef, `classes`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              console.log(\"Teacher ID\" + itemVal.teacherID + \"---\" + teacher);\r\n              if (itemVal.teacherID == teacher) {\r\n                console.log(\"Teacher ID\" + itemVal.teacherID);\r\n                classList.push(itemVal);\r\n              }\r\n            });\r\n            // this.setState({nb_classes: nb_classes});\r\n            this.setState({ classList: classList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Alert\r\n          key=\"feedback\"\r\n          id=\"feedback\"\r\n          variant=\"\"\r\n          Style=\"display :\"\r\n          {...this.state.hidefeedback}\r\n        ></Alert>\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Class</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.classList.map((class_item) => (\r\n              <tr>\r\n                <td>{class_item.classID}</td>\r\n                <td>{class_item.name}</td>\r\n                <td width=\"37%\">\r\n                  {\" \"}\r\n                  <Button\r\n                    variant=\"primary class-more-btn\"\r\n                    onClick={() =>\r\n                      this.openModal(class_item.classID, \"details\")\r\n                    }\r\n                  >\r\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\r\n                    Details\r\n                  </Button>{\" \"}\r\n                  <DropdownButton title=\"Manage\" id=\"bg-nested-dropdown\">\r\n                    <Dropdown.Item\r\n                      eventKey=\"1\"\r\n                      onClick={() =>\r\n                        this.openModal(class_item.classID, \"update\")\r\n                      }\r\n                    >\r\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\r\n                      Update\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">\r\n                      <i class=\"fa fa-address-book\" aria-hidden=\"true\"></i> Add\r\n                      Student\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">\r\n                      <i class=\"fa fa-address-book\" aria-hidden=\"true\"></i>\r\n                      <Link to={`/manageModules/`+class_item.classID+`/`+this.props.teacherID}>\r\n                      Manage Modules\r\n </Link> \r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      eventKey=\"2\"\r\n                      onClick={() => this.handleRemoveClass(class_item.classID)}\r\n                    >\r\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\r\n                    </Dropdown.Item>\r\n                  </DropdownButton>\r\n                </td>\r\n                <Modal\r\n                  show={this.state.openedDialog === class_item.classID}\r\n                  onHide={this.closeModal}\r\n                >\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>{class_item.name}</Modal.Title>\r\n                  </Modal.Header>\r\n\r\n                  <Modal.Body>\r\n                    <Form\r\n                      onSubmit={() =>\r\n                        this.handleUpdateClass(class_item.classID)\r\n                      }\r\n                    >\r\n                      <Form.Group id=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"name_val\"\r\n                          defaultValue={class_item.name}\r\n                          required\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"description\">\r\n                        <Form.Label>Description</Form.Label>\r\n\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"description_val\"\r\n                          defaultValue={class_item.description}\r\n                          maxLength =\"124\"\r\n                          required\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"section\">\r\n                        <Form.Label>Section</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"section_val\"\r\n                          defaultValue={class_item.section}\r\n                          required\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"session\">\r\n                        <Form.Label>Session</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"session_val\"\r\n                          required\r\n                          defaultValue={class_item.session}\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"roomNumber\">\r\n                        <Form.Label>Room Number</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"roomNumber_val\"\r\n                          required\r\n                          defaultValue={class_item.roomNumber}\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"seats\">\r\n                        <Form.Label>Seats</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"seats_val\"\r\n                          required\r\n                          defaultValue={class_item.seats}\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"meetingDates\">\r\n                        <Form.Label>Meeting Day</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"meetingDates_val\"\r\n                          required\r\n                          defaultValue={class_item.meetingDates}\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <input\r\n                        type=\"hidden\"\r\n                        id=\"studentIDs_val\"\r\n                        defaultValue={class_item.students}\r\n                      ></input>\r\n                      <Form.Group\r\n                        id=\"class-color\"\r\n                        Style={\r\n                          this.state.actionType === \"update\"\r\n                            ? \"display:block\"\r\n                            : \"display:none\"\r\n                        }\r\n                      >\r\n                        <Form.Label>Pick a color</Form.Label>\r\n\r\n                        <ColorPicker\r\n                          onSelectcolor={this.handleColorCode}\r\n                        ></ColorPicker>\r\n                      </Form.Group>\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        disabled={\r\n                          this.state.actionType === \"update\" ? false : true\r\n                        }\r\n                        type=\"submit\"\r\n                      >\r\n                        Save Changes\r\n                      </Button>\r\n                    </Form>\r\n                  </Modal.Body>\r\n                </Modal>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ManageClasses from \"./ManageClasses\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set, } from \"firebase/database\";\r\nimport ColorPicker from \"../Tools/ColorPicker\";\r\n\r\nexport default class ClassNew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      studentList: [],\r\n      studentListUI: [],\r\n      studentsID: [],\r\n      classList: [],\r\n      showHide: false,\r\n      openedDialog: -1,\r\n      nbclasses:0,\r\n      classID: \"\",\r\n      description: \"\",\r\n      meetingDates: \"\",\r\n      title: \"\",\r\n      published: 0,\r\n      roomNumber: \"\",\r\n      seats: 0,\r\n      section: \"\",\r\n      session: 2,\r\n      classColor:\"\",\r\n      students: [],\r\n      teacherID: this.props.match.params.euid,\r\n    };\r\n  }\r\n\r\n  //handle the student list popup\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n  //if student is selected, add it to the studentsID array\r\n  handleCheckboxChange = (event) => {\r\n    let newArray = [...this.state.studentsID, event.target.id];\r\n\r\n    if (this.state.studentsID.includes(event.target.id)) {\r\n      newArray = newArray.filter((day) => day !== event.target.id);\r\n    }\r\n    this.setState({\r\n      studentsID: newArray,\r\n    });\r\n  };\r\n\r\n  //method to update the state variables with the user inputs\r\n  handleClassInput = (e) => {\r\n    const name = e.target.name;\r\n\r\n    const value = e.target.value;\r\n\r\n    this.setState({ [name]: value });\r\n    console.log(\"Name: \" + name + \"value:\" + value);\r\n  };\r\n  //method to add class to the database\r\n  handleAddClass= () => {\r\n    const db = getDatabase();\r\n    set(ref(db, \"classes/\"+this.state.classID), {\r\n      classID: this.state.classID,\r\n      description: this.state.description,\r\n      meetingDates: this.state.meetingDates,\r\n      name: this.state.title,\r\n      published: this.state.published,\r\n      roomNumber: this.state.roomNumber,\r\n      seats: this.state.seats,\r\n      section: this.state.section,\r\n      session: this.state.session,\r\n      students: this.state.studentsID,\r\n      teacherID: this.props.match.params.euid,\r\n      classColor:this.state.classColor\r\n    }).then(() => {\r\n          \r\n      window.location.reload(false);\r\n    }).catch((error) => {\r\n      console.log(\"Failed to save data new class!\" + error);\r\n    });\r\n  }\r\n  handleColorCode =(colorValue)  =>{\r\n    this.setState({classColor: colorValue});\r\n}\r\n  //get List of students\r\n\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let studentList = [];\r\n\r\n    //get list of students\r\n    get(child(dbRef, `users`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              studentList.push(itemVal);\r\n            });\r\n            this.setState({ studentList: studentList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n      \r\n  }\r\n  \r\n  render() {\r\n    //create UI to list list of students\r\n    const studentListUI = this.state.studentList.map((student_item) => (\r\n      <ListGroup.Item as=\"li\">\r\n        <Form.Check\r\n          inline\r\n          type=\"checkbox\"\r\n          onChange={this.handleCheckboxChange}\r\n          id={student_item.euid}\r\n          checked={this.state.studentsID.includes(student_item.euid)}\r\n        />\r\n        {student_item.firstname} -- {student_item.euid}\r\n      </ListGroup.Item>\r\n    ));\r\n    //\r\n    return (\r\n      <div>\r\n        <Sidenav role=\"teacher\"  euid={this.props.match.params.euid}/>\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col>\r\n              {\" \"}\r\n              <div className=\"big-title\">\r\n                <h3 className=\"big_title\">Classes</h3>\r\n\r\n                <div>\r\n               \r\n                  <ManageClasses teacherID={this.state.teacherID}></ManageClasses>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col Style=\"Background:#eee\">\r\n              {\" \"}\r\n              <div className=\"big-title\">\r\n                <h3 className=\"big_title\">New Classes</h3>\r\n              \r\n                <Form    onSubmit={this.handleAddClass}>\r\n                <Form.Group id=\"classID\">\r\n                    <Form.Label for=\"classCode\">Class Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"classID\"\r\n                      id = \"classCode\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"title\">\r\n                    <Form.Label for=\"title\">Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      id = \"title\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"description\">\r\n                    <Form.Label for=\"description\">Description</Form.Label>\r\n                    <Form.Control\r\n                      id = \"description\"\r\n                      as=\"textarea\"\r\n                      style={{ height: '70px' }}\r\n                      name=\"description\"\r\n                      maxLength= \"124\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"section\">\r\n                    <Form.Label for=\"section\">Section</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"section\"\r\n                      id = \"section\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"session\">\r\n                    <Form.Label for=\"session\">Session</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      name=\"session\"\r\n                      id=\"session\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"roomNumber\">\r\n                    <Form.Label for=\"roomNumber\">Room Number</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"roomNumber\"\r\n                      id = \"roomNumber\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"seats\">\r\n                    <Form.Label for=\"seats\">Seats</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      name=\"seats\"\r\n                      id =\"seats\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"meetingDates\">\r\n                    <Form.Label for=\"meetingDay\">Meeting Day</Form.Label>\r\n                 \r\n                    <Form.Select   name=\"meetingDay\" defaultValue=\"\"  required id=\"meetingDay\"\r\n                      onChange={this.handleClassInput}>\r\n        <option>Choose...</option>\r\n        <option value=\"MWF\">MWF</option>\r\n        <option value=\"TTH\">TTH</option>\r\n      </Form.Select>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"class-color\">\r\n                    <Form.Label>Pick a color</Form.Label>\r\n                \r\n                   <ColorPicker onSelectcolor={this.handleColorCode}></ColorPicker>\r\n              \r\n                   <Button\r\n                      variant=\"outline-secondary\" className=\"add-student-btn\"\r\n                      onClick={() => this.handleModalShowHide()}\r\n                    >\r\n                      Add Students\r\n                    </Button>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"action\"  Style=\"padding-left: 15px\">                   \r\n                    <Button\r\n                      className=\"w-100 btn-secondary\"\r\n                      size=\"lm\"\r\n                      type=\"submit\"\r\n                   \r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n            <Modal show={this.state.showHide}>\r\n              <Modal.Header\r\n                closeButton\r\n                onClick={() => this.handleModalShowHide()}\r\n              >\r\n                <Modal.Title>Students</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>{studentListUI}</Modal.Body>\r\n              <Modal.Footer>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => this.handleModalShowHide()}\r\n                >\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => this.handleModalShowHide()}\r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { React, useState, Component }  from \"react\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport \"../../firebase\";\r\nimport \"../../css/style.css\";\r\n\r\n\r\nexport default class GradesTableRows extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { gradesList : [] };\r\n      }\r\n      componentDidMount() {\r\n        const dbRef = ref(getDatabase());\r\n        let gradeList = [];\r\n        let classId = this.props.classID;\r\n        let euid = this.props.euid;\r\n\r\n          // get grades\r\n          get(child(dbRef, \"grades/\" + classId + \"/\" + euid))\r\n            .then(grade => {\r\n                if (grade.exists()) {\r\n                    grade.forEach(item => {\r\n                        let itemVal = item.val();\r\n                        gradeList.push(itemVal);\r\n                        console.log(itemVal.title);\r\n                        console.log(itemVal.dueDate);\r\n                        console.log(itemVal.points);\r\n                    });\r\n                    \r\n                    this.setState({ gradesList: gradeList });\r\n                } \r\n                else {\r\n                    console.log(\"No grades found\");\r\n                }\r\n            }, {\r\n                onlyOnce: true\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n      }\r\n\r\n    render() {\r\n    // Creates grade items\r\n    return (\r\n        this.state.gradesList.map(item => \r\n            <tr>\r\n                <td>{item.title}</td>\r\n                <td>{item.dueDate}</td>\r\n                <td>{item.points}</td>\r\n            </tr>\r\n        )\r\n    );\r\n}\r\n}","import { React, useState, Component }  from \"react\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport Footer from \"../Footer\";\r\nimport ClassNav from \"../Classes/ClassNav\";\r\nimport { Container, Row, Col , Table, Card, ProgressBar} from \"react-bootstrap\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport \"../../firebase\";\r\nimport \"../../css/style.css\";\r\nimport GradesTableRows from \"./GradesTableRows\";\r\nlet numA = 0;\r\nlet numB = 0;\r\nlet numC = 0;\r\nlet numF = 0;\r\nlet gradesCount = 0;\r\n\r\nexport default class Grades extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { classTitle: \"\" ,classSection :\"\" };\r\n        this.state = { gradesList : [] };\r\n        \r\n    }\r\n      componentDidMount() {\r\n        const dbRef = ref(getDatabase());\r\n        let gradeList = [];\r\n        \r\n    \r\n        //get  class title\r\n        get(child(dbRef, \"classes/\" + this.props.match.params.classId))\r\n          .then(\r\n            (snapshot) => {\r\n              if (snapshot.exists()) {\r\n              \r\n                if (\r\n                  this.props.match.params.classId == snapshot.child(\"classID\").val()\r\n                ) {\r\n                  this.setState({ classTitle: snapshot.child(\"name\").val() });\r\n                  this.setState({ classSection: snapshot.child(\"section\").val() });\r\n                }\r\n              } else {\r\n                console.log(\"No data available\");\r\n              }\r\n            },\r\n            {\r\n              onlyOnce: true,\r\n            }\r\n          )\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n\r\n          // get grades\r\n          get(child(dbRef, \"grades/\" + this.props.match.params.classId + \"/\" + this.props.match.params.euid))\r\n            .then(grade => {\r\n                if (grade.exists()) {\r\n                  numA = 0;\r\n                  numB = 0;\r\n                  numC = 0;\r\n                  numF = 0;\r\n                  gradesCount = 0;\r\n                    grade.forEach(item => {\r\n                        let itemVal = item.val();\r\n                        gradeList.push(itemVal);\r\n                        console.log(itemVal.title);\r\n                        console.log(itemVal.dueDate);\r\n                        console.log(itemVal.points);\r\n                        if(itemVal.points >= 90 ){ \r\n                          numA++;\r\n                        }\r\n                        else if (itemVal.points >= 80){\r\n                          numB++;\r\n                        }\r\n                        else if(itemVal.points >= 70)\r\n                        {\r\n                          numC++;\r\n                        }\r\n                        else if(itemVal.points < 70)\r\n                        {\r\n                          numF++;\r\n                        }\r\n                        gradesCount++;\r\n                    });\r\n                    \r\n                    this.setState({ gradesList: gradeList });\r\n                } \r\n                else {\r\n                    console.log(\"No grades found\");\r\n                }\r\n            }, {\r\n                onlyOnce: true\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n      }\r\n\r\n    render() {\r\n    return(\r\n        <>\r\n        <Sidenav euid={this.props.match.params.euid} isActive=\"2\"/>\r\n        <Container>\r\n\r\n          <Row className=\"theme_body\">\r\n\r\n            <Col xs lg=\"2\">\r\n            <ClassNav   euid={this.props.match.params.euid} classId={this.props.match.params.classId} isActive=\"2\"></ClassNav>\r\n            </Col>\r\n\r\n            <Col>\r\n            <h3 className=\"big_title\"> Grades for {this.state.classTitle} Section {this.state.classSection}</h3>\r\n            <Row>\r\n            <Col lg= {6} md ={12}>\r\n              \r\n            <Table striped hover size =\"sm\" className=\"gradesTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Assignment Name</th>\r\n                            <th>Due Date</th>\r\n                            <th>Score</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <GradesTableRows classID={this.props.match.params.classId} euid={this.props.match.params.euid}></GradesTableRows>\r\n                    </tbody>\r\n            </Table>\r\n\r\n            </Col>\r\n            <Col lg={{ span: 4 , offset: 1 }} md={12}>\r\n                <Card>\r\n                <h4 className=\"mb-2 mt-2\">Grade Distribution</h4>\r\n                  <h5>A</h5>\r\n                  <ProgressBar now={(numA/gradesCount) * 100} label={numA} className=\"mb-2\"/>\r\n                  <h5>B</h5>\r\n                  <ProgressBar now={(numB/gradesCount) * 100} label={numB} className=\"mb-2\"/>\r\n                  <h5>C</h5>\r\n                  <ProgressBar now={(numC/gradesCount) * 100} label={numC} className=\"mb-2\"/>\r\n                  <h5>F</h5>\r\n                  <ProgressBar now={(numF/gradesCount) * 100} label={numF} className=\"mb-4\"/>\r\n                </Card>\r\n            </Col>\r\n            </Row>\r\n            \r\n            </Col>\r\n\r\n          </Row>\r\n\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n\r\n        </Container>\r\n        \r\n        </>\r\n    );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport ListGroup from \"react-bootstrap/Accordion\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ListAssignmentByClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {assignmentList : [] };\r\n\r\n        }\r\n        componentDidMount() {\r\n            \r\n            const dbRef = ref(getDatabase());\r\n            let assignmentList = [];\r\n           \r\n\r\n    //get list of assignments\r\n    get(child(dbRef, `assignments`)).then((snapshot) => {\r\n     \r\n      let classID = this.props.classID;\r\n      console.log(\"searching for assignments\"+classID);\r\n      if (snapshot.exists()) {\r\n        snapshot.forEach(function (item) {\r\n        \r\n          var itemVal = item.val();\r\n         // console.log(\"found 1\"+itemVal.classID);\r\n         //itemVal.published == 1\r\n          if(itemVal.classID == classID )\r\n          {\r\n           \r\n            assignmentList.push(itemVal);\r\n          }\r\n        \r\n         \r\n        });\r\n        this.setState({ assignmentList: assignmentList });\r\n      } else {\r\n        console.log(\"No data available\");\r\n      }\r\n    }, {\r\n      onlyOnce: true\r\n    }).catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n            \r\n        \r\n    render() {\r\n        \r\n       \r\n        return (\r\n           \r\n            this.state.assignmentList.map((assignment_item) =>\r\n              <div className=\"assignments-list\">\r\n       \r\n        <ListGroup>\r\n          <ListGroup.Item>\r\n          <i className=\"fa fa-pencil-square-o\"></i>\r\n              <Link\r\n                to={`/assignmentDetails/${assignment_item.assignmentID}/${this.props.classID}/${this.props.euid}`}\r\n              >\r\n                {assignment_item.title}\r\n         </Link>\r\n         <br/>\r\n         <i className=\"fa fa-calendar-plus-o\"></i> Due Date :  <span Style=\"color:black;\">{assignment_item.dueDate}</span>|  Possible points :{assignment_item.points} \r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n            </div>\r\n               ));\r\n        \r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ClassNav from \"../Classes/ClassNav\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\n\r\nimport ListAssignmentByClass from \"./ListAssignmentByClass\";\r\nexport default class AssignmentList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { classTitle: \"\" ,classSection :\"\" };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    //get  classe title\r\n\r\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n          \r\n            if (\r\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\r\n            ) {\r\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\r\n              this.setState({ classSection: snapshot.child(\"section\").val() });\r\n            }\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n    \r\n       <Sidenav euid={this.props.match.params.euid}/>\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col xs lg=\"2\">\r\n          \r\n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"3\"></ClassNav>\r\n            </Col>\r\n            <Col> <h3 className=\"big_title\">Assignments for {this.state.classTitle} Section {this.state.classSection}</h3>\r\n           \r\n            <ListAssignmentByClass classID={this.props.match.params.classId} euid={this.props.match.params.euid}></ListAssignmentByClass>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { React, useState, Component }  from \"react\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport \"../../firebase\";\r\nimport \"../../css/style.css\";\r\n\r\n\r\nexport default class PeopleTableRows extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { peoplesList : [] };\r\n      }\r\n      componentDidMount() {\r\n        const dbRef = ref(getDatabase());\r\n        let peopleList = [];\r\n        let classId = this.props.classID;\r\n\r\n          // get people\r\n          get(child(dbRef, \"classes/\" + classId + \"/students\"))\r\n            .then(people => {\r\n                if (people.exists()) {\r\n                    people.forEach(item => {\r\n                        let itemVal = item.val();\r\n                        peopleList.push(itemVal);\r\n                        console.log(itemVal);\r\n                    });\r\n                    \r\n                    this.setState({ peoplesList: peopleList });\r\n                } \r\n                else {\r\n                    console.log(\"No people found\");\r\n                }\r\n            }, {\r\n                onlyOnce: true\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n      }\r\n\r\n    render() {\r\n    // Creates person items\r\n    return (\r\n        \r\n        this.state.peoplesList.map(item => \r\n            <tr>\r\n                <td>{item}</td>\r\n            </tr>\r\n        )\r\n    );\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ClassNav from \"../Classes/ClassNav\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport PeopleTableRows from \"./PeopleTableRows\";\r\n\r\nexport default class PeopleByClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { classTitle: \"\" ,classSection :\"\" };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    //get  classe title\r\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n          \r\n            if (\r\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\r\n            ) {\r\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\r\n              this.setState({ classSection: snapshot.child(\"section\").val() });\r\n            }\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n    \r\n       <Sidenav euid={this.props.match.params.euid}/>\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col xs lg=\"2\">\r\n          \r\n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"5\"></ClassNav>\r\n            </Col>\r\n            <Col> <h3 className=\"big_title\">People for {this.state.classTitle} Section {this.state.classSection}</h3>\r\n            <Table striped hover size =\"sm\" className=\"gradesTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Role</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <PeopleTableRows classID={this.props.match.params.classId}></PeopleTableRows>\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { React, useState, Component }  from \"react\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport \"../../firebase\";\r\nimport \"../../css/style.css\";\r\n\r\n\r\nexport default class AttendancesTableRows extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { attendsList : [] };\r\n      }\r\n      componentDidMount() {\r\n        const dbRef = ref(getDatabase());\r\n        let attendList = [];\r\n        let classId = this.props.classID;\r\n        let euid = this.props.euid;\r\n\r\n          // get grades\r\n          get(child(dbRef, \"attendances/\" + classId + \"/\" + euid))\r\n            .then(attend => {\r\n                if (attend.exists()) {\r\n                    attend.forEach(item => {\r\n                        let itemVal = item.val();\r\n                        attendList.push(itemVal);\r\n                        console.log(itemVal.title);\r\n                        console.log(itemVal.dueDate);\r\n                        console.log(itemVal.points);\r\n                    });\r\n                    \r\n                    this.setState({ attendsList: attendList });\r\n                } \r\n                else {\r\n                    console.log(\"No attendances found\");\r\n                }\r\n            }, {\r\n                onlyOnce: true\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n      }\r\n\r\n    render() {\r\n    // Creates attendance items\r\n    return (\r\n        \r\n        this.state.attendsList.map(item => \r\n            <tr>\r\n                <td>{item.date}</td>\r\n                <td>{item.status}</td>\r\n            </tr>\r\n        )\r\n    );\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Table, Card, ProgressBar } from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ClassNav from \"../Classes/ClassNav\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport AttendancesTableRows from \"./AttendancesTableRows\";\r\nlet pres = 0;\r\nlet abs = 0;\r\nlet rec = 0;\r\n\r\nexport default class AttendanceByClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { classTitle: \"\" ,classSection :\"\" };\r\n    this.state = { attendsList : [] };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let attendList = [];\r\n\r\n    //get  classe title\r\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n          \r\n            if (\r\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\r\n            ) {\r\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\r\n              this.setState({ classSection: snapshot.child(\"section\").val() });\r\n            }\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n      // get attendances\r\n      get(child(dbRef, \"attendances/\" + this.props.match.params.classId + \"/\" + this.props.match.params.euid))\r\n      .then(attend => {\r\n          if (attend.exists()) {\r\n              pres = 0;\r\n              abs = 0;\r\n              rec = 0;\r\n              attend.forEach(item => {\r\n                  let itemVal = item.val();\r\n                  attendList.push(itemVal);\r\n                  console.log(itemVal);\r\n                  \r\n                  if(itemVal.status == \"Present\" ){ \r\n                    pres++;\r\n                  }\r\n                  else{\r\n                    abs++;\r\n                  }\r\n                  rec++;\r\n              });\r\n              \r\n              this.setState({ attendsList: attendList });\r\n          } \r\n          else {\r\n              console.log(\"No attendances found\");\r\n          }\r\n      }, {\r\n          onlyOnce: true\r\n      }).catch(error => {\r\n          console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n    \r\n       <Sidenav euid={this.props.match.params.euid}/>\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col xs lg=\"2\">\r\n          \r\n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"4\"></ClassNav>\r\n            </Col>\r\n            <Col> <h3 className=\"big_title\">Attendances for {this.state.classTitle} Section {this.state.classSection}</h3>\r\n           \r\n            <Row>\r\n            <Col lg= {6} md ={12}>\r\n                <Table striped hover size =\"sm\" className=\"gradesTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date</th>\r\n                            <th>Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <AttendancesTableRows classID={this.props.match.params.classId} euid={this.props.match.params.euid}></AttendancesTableRows>\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n            <Col lg={{ span: 4 , offset: 1 }} md={12}>\r\n                <Card>\r\n                <h4 className=\"mb-2 mt-2\">Attendance Count</h4>\r\n                  <h5>Present</h5>\r\n                  <ProgressBar now={(pres/rec) * 100} label={pres} className=\"mb-2\"/>\r\n                  <h5>Absent</h5>\r\n                  <ProgressBar now={(abs/rec) * 100} label={abs} className=\"mb-2\"/>\r\n                </Card>\r\n            </Col>\r\n            </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Table,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set, remove } from \"firebase/database\";\r\n\r\n\r\nexport default class ManageAssignment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      assignmentList : [],\r\n      showHide: false,\r\n      openedDialog: -1,\r\n      actionType: \"\",\r\n      assignmentID: \"\",\r\n      classID: \"\",\r\n      className: \"\",\r\n      description: \"\",\r\n      dueDate: \"\",\r\n      points: \"\",\r\n      published: 0,\r\n      summary: \"\",\r\n      title: \"\",\r\n      classList: [],\r\n      teacherID: this.props.teacherID,\r\n    };\r\n  }\r\n\r\n  openModal = (assignmentid, actionType) => {\r\n    this.setState({\r\n      openedDialog: assignmentid,\r\n      actionType: actionType,\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      openedDialog: null,\r\n    });\r\n  };\r\n  handleColorCode = (colorValue) => {\r\n    this.setState({ classColor: colorValue });\r\n  };\r\n    //method to update the state variables with the user inputs\r\n    handleAssignmentInput = (e) => {\r\n      const name = e.target.name;\r\n  \r\n      const value = e.target.value;\r\n  \r\n      this.setState({ [name]: value });\r\n      console.log(\"Name: \" + name + \"value:\" + value);\r\n    };\r\n  //handle popup\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n\r\n   //method to remove class to the database\r\n   handleRemoveClass = (assignmentID) => {\r\n    const db = getDatabase();\r\n    ///\r\n\r\n    if (window.confirm(\"Are you sure you wish to delete this item?\")) {\r\n      remove(ref(db, \"assignments/\" + assignmentID))\r\n        .then(() => {\r\n          window.location.reload(false);\r\n          document.getElementById(\"feedback\").style.display = \"block\";\r\n          document.getElementById(\"feedback\").innerText =\r\n            \"Assignment \" + assignmentID + \" remove successfully!\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Failed to remove class :\" + assignmentID + \" error :\" + error\r\n          );\r\n        });\r\n    }\r\n\r\n    ///\r\n  };\r\n  //method to update assignment to the database\r\n  handleUpdateAssignment = (assignmentid) => {\r\n   //alert(document.getElementById('duedate_Val').value);\r\n    const db = getDatabase();\r\n    set(ref(db, \"assignments/\" + assignmentid), {\r\n      assignmentID:assignmentid,\r\n      description: document.getElementById('description_Val').value,\r\n      dueDate:document.getElementById('duedate_Val').value,\r\n      title:document.getElementById('title_Val').value,\r\n      published:1,\r\n      points: document.getElementById('points_Val').value,\r\n      summary: document.getElementById('summary_Val').value,\r\n      classID: document.getElementById('classID_Val').value,\r\n      teacher: this.props.teacherID\r\n    })\r\n      .then(() => {\r\n       // window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to save data new class!\" + error);\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let classList = [];\r\n    let assignmentList = [];\r\n    let teacher = this.props.teacherID;\r\n   \r\n    //get list of classes\r\n    get(child(dbRef, `classes`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n          \r\n              var itemVal = item.val();\r\n              console.log(\"Teacher ID\" + itemVal.teacherID + \"---\" + teacher);\r\n              if (itemVal.teacherID == teacher) {\r\n                console.log(\"Teacher ID\" + itemVal.teacherID);\r\n                classList.push(itemVal);\r\n              }\r\n            });\r\n            // this.setState({nb_classes: nb_classes});\r\n            this.setState({ classList: classList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n     //get list of assignments\r\n     get(child(dbRef, `assignments`))\r\n     .then(\r\n       (snapshot) => {\r\n         if (snapshot.exists()) {\r\n           snapshot.forEach(function (item) {\r\n         \r\n             var itemVal = item.val();\r\n            \r\n             if (itemVal.teacher == teacher) {\r\n            \r\n               assignmentList.push(itemVal);\r\n             }\r\n           });\r\n           // this.setState({nb_classes: nb_classes});\r\n           this.setState({ assignmentList: assignmentList });\r\n         } else {\r\n           console.log(\"No data available\");\r\n         }\r\n       },\r\n       {\r\n         onlyOnce: true,\r\n       }\r\n     )\r\n     .catch((error) => {\r\n       console.error(error);\r\n     });\r\n\r\n  \r\n  }\r\n\r\n  render() {\r\n  \r\n    return (\r\n      <div>\r\n      \r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Class</th>\r\n              <th>Assignment</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.assignmentList.map((assignment_item) => (\r\n              <tr>\r\n                 \r\n                <td>{assignment_item.assignmentID}</td>\r\n                <td>{assignment_item.classID}</td>\r\n                <td>{assignment_item.title}</td>\r\n                <td width=\"37%\">\r\n                  {\" \"}\r\n                  <Button\r\n                    variant=\"secondary class-more-btn\"\r\n                    onClick={() =>\r\n                      this.openModal(assignment_item.assignmentID, \"details\")\r\n                    }\r\n                  >\r\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\r\n                    Details\r\n                  </Button>{\" \"}\r\n                  <DropdownButton title=\"Manage\" >\r\n                    <Dropdown.Item\r\n                      eventKey=\"1\"\r\n                      onClick={() =>\r\n                        this.openModal(assignment_item.assignmentID, \"update\")\r\n                      }\r\n                    >\r\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\r\n                      Update\r\n                    </Dropdown.Item>\r\n                   \r\n                    <Dropdown.Item eventKey=\"2\"    onClick={() => this.handleRemoveClass(assignment_item.assignmentID)}>\r\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\r\n                    </Dropdown.Item>\r\n                  </DropdownButton>\r\n                </td>\r\n                <Modal\r\n                  show={this.state.openedDialog === assignment_item.assignmentID}\r\n                  onHide={this.closeModal}\r\n                >\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>{assignment_item.title}</Modal.Title>\r\n                  </Modal.Header>\r\n\r\n                  <Modal.Body>\r\n                  <Form  onSubmit={() => this.handleUpdateAssignment(assignment_item.assignmentID)}>\r\n                <Form.Group id=\"classID\">\r\n                  \r\n                  <Form.Label>Class Name</Form.Label>\r\n                  <Form.Control\r\n                      type=\"text\"\r\n                      name=\"classID\"\r\n                      id= \"classID_Val\"\r\n                      defaultValue= {assignment_item.classID}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                      readOnly=\"true\"\r\n                    ></Form.Control>                  \r\n                    </Form.Group>\r\n           \r\n                  <Form.Group id=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      id= \"title_Val\"\r\n                      defaultValue= {assignment_item.title}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      id= \"description_Val\"\r\n                      defaultValue= {assignment_item.description}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"summary\">\r\n                    <Form.Label>Summary</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      name=\"summary\"\r\n                      id= \"summary_Val\"\r\n                      style={{ height: '100px' }}\r\n                      defaultValue= {assignment_item.summary}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"duedate\">\r\n                    <Form.Label>Due Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      name=\"duedate\"\r\n                      id= \"duedate_Val\"\r\n                      defaultValue= {assignment_item.dueDate}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"points\">\r\n                    <Form.Label>Points</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"points\"\r\n                      id= \"points_Val\"\r\n                      defaultValue= {assignment_item.points}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n<Form.Group id=\"published\">\r\n\r\n<Form.Check\r\n        type=\"checkbox\"\r\n        id= \"published\"\r\n        className=\"mb-2\"\r\n        label=\"Published\"\r\n      />\r\n  </Form.Group>\r\n  <Form.Group>\r\n  <Button    disabled={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                      variant=\"primary\"\r\n                     type = \"submit\"\r\n                    >\r\n                      Save Changes\r\n                    </Button>\r\n  </Form.Group>\r\n                \r\n                </Form>\r\n                  </Modal.Body>\r\n                \r\n                </Modal>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ManageAssignments from \"./ManageAssignment\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\r\n\r\nexport default class AssignmentNew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showHide: false,\r\n      openedDialog: -1,\r\n      assignmentID: \"\",\r\n      classID: \"\",\r\n      className: \"\",\r\n      description: \"\",\r\n      duedate: \"\",\r\n      points: \"\",\r\n      published: 0,\r\n      summary: \"\",\r\n      title: \"\",\r\n      classList: [],\r\n      teacherID: this.props.match.params.euid,\r\n    };\r\n  }\r\n\r\n  //handle the student list popup\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n  \r\n  //method to update the state variables with the user inputs\r\n  handleAssignmentInput = (e) => {\r\n    const name = e.target.name;\r\n\r\n    const value = e.target.value;\r\n\r\n    this.setState({ [name]: value });\r\n   // console.log(\"Name: \" + name + \"value:\" + value);\r\n  };\r\n  //method to add Assignment to the database\r\n  handleAddAssignment = (event) => {\r\n    const db = getDatabase();\r\n    set(ref(db, \"assignments/\" + this.state.assignmentID), {\r\n      assignmentID: this.state.assignmentID,\r\n      description: this.state.description,\r\n      title: this.state.title,\r\n      classID: this.state.classID,\r\n      dueDate: this.state.duedate,\r\n      published: this.state.published,\r\n      points: this.state.points,\r\n      summary: this.state.summary,\r\n      teacher: this.props.match.params.euid,\r\n    })\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to save data new Assignment!\" + error);\r\n      });\r\n      event.preventDefault();\r\n  };\r\n\r\n  //get List of classes\r\n\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let classList = [];\r\n\r\n    //get list of classes\r\n    get(child(dbRef, `classes`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              classList.push(itemVal);\r\n            });\r\n            this.setState({ classList: classList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n          //create nav nodes for classes\r\n          const listclasses = this.state.classList.map((class_item) =>\r\n        \r\n          <option value={class_item.classID}>\r\n            {class_item.classID} -- {class_item.name} </option>\r\n      );\r\n    return (\r\n      <div>\r\n        <Sidenav role=\"teacher\" euid={this.props.match.params.euid} />\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col>\r\n              {\" \"}\r\n              <div className=\"big-title\">\r\n                <h3 className=\"big_title\">Assignments</h3>\r\n\r\n                <div>\r\n                  <ManageAssignments\r\n                    teacherID={this.state.teacherID}\r\n                  ></ManageAssignments>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col Style=\"Background:#eee\">\r\n              {\" \"}\r\n              <div className=\"big-title\">\r\n                <h3 className=\"big_title\">New Assignments</h3>\r\n         \r\n                <Form  onSubmit={this.handleAddAssignment}>\r\n                <Form.Group id=\"classID\">\r\n                  \r\n                  <Form.Label>Class Name</Form.Label>\r\n                <Form.Select  name= \"classID\" aria-label=\"dropdown list of classes\"   onChange={this.handleAssignmentInput} required>\r\n                <option value=\"\">\r\n         Select Class</option>\r\n                  {listclasses}\r\n                  </Form.Select>\r\n                  </Form.Group>\r\n                <Form.Group id=\"assignmentID\">\r\n                  \r\n                    <Form.Label>Assignment Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"assignmentID\"\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"summary\">\r\n                    <Form.Label>Summary</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      name=\"summary\"\r\n                      style={{ height: '100px' }}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"duedate\">\r\n                    <Form.Label>Due Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      name=\"duedate\"\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"points\">\r\n                    <Form.Label>Points</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      name=\"points\"\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n<Form.Group id=\"published\">\r\n\r\n<Form.Check\r\n        type=\"checkbox\"\r\n        id=\"published\"\r\n        className=\"mb-2\"\r\n        label=\"Published\"\r\n      />\r\n  </Form.Group>\r\n                  <Form.Group id=\"action\" Style=\"padding-left: 15px\">\r\n                    <Button\r\n                      className=\"w-100 btn-secondary\"\r\n                      size=\"lm\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Table,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\r\n\r\n\r\nexport default class ManageModules extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      moduleList : [],\r\n      showHide: false,\r\n      openedDialog: -1,\r\n      actionType: \"\",\r\n      moduleID: \"\",\r\n      classID: \"\",\r\n      description: \"\",\r\n      published: 0,\r\n      title: \"\",\r\n      ressourcesList: [],\r\n      teacherID: this.props.teacherID,\r\n      sel_moduleID : \"\"\r\n    };\r\n  }\r\n\r\n  openModal = (moduleid, actionType) => {\r\n    this.setState({\r\n      openedDialog: moduleid,\r\n      actionType: actionType\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      openedDialog: null,\r\n    });\r\n  };\r\n  handleColorCode = (colorValue) => {\r\n    this.setState({ classColor: colorValue });\r\n  };\r\n    //method to update the state variables with the user inputs\r\n    handleModuleInput = (e) => {\r\n      const name = e.target.name;\r\n  \r\n      const value = e.target.value;\r\n  \r\n      this.setState({ [name]: value });\r\n      console.log(\"Name: \" + name + \"value:\" + value);\r\n    };\r\n  //handle popup\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n  //method to update module to the database\r\n  handleUpdateModule = (moduleid) => {\r\n    const db = getDatabase();\r\n    set(ref(db, \"modules/\" + moduleid), {\r\n      moduleID:moduleid,\r\n      description: document.getElementById('description_Val'+moduleid).value,\r\n    \r\n      title:document.getElementById('title_Val'+moduleid).value,\r\n      published:1,\r\n      classID:this.props.classID\r\n    })\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to save data new class!\" + error);\r\n      });\r\n  };\r\n  //method to get list of ressources by module\r\n  getRessources= (moduleid) => {\r\n    let ressourcesList = [];\r\n    const db = getDatabase();\r\n       //get list of ressources\r\n       get(ref(db, \"ressources/\" + moduleid))\r\n       .then(\r\n         (snapshot) => {\r\n           if (snapshot.exists()) {\r\n             snapshot.forEach(function (item) {\r\n               var itemVal = item.val();\r\n                ressourcesList.push(itemVal);\r\n             });\r\n           \r\n             this.setState({ ressourcesList: ressourcesList });\r\n           } else {\r\n             console.log(\"No data available\");\r\n           }\r\n         },\r\n         {\r\n           onlyOnce: true,\r\n         }\r\n       )\r\n       .catch((error) => {\r\n         console.error(error);\r\n       });\r\n \r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let moduleList = [];\r\n    let classID = this.props.classID;\r\n   \r\n \r\n     //get list of modules\r\n     get(child(dbRef, `modules`))\r\n     .then(\r\n       (snapshot) => {\r\n         if (snapshot.exists()) {\r\n           snapshot.forEach(function (item) {\r\n         \r\n             var itemVal = item.val();\r\n            \r\n             if (itemVal.classID == classID) {\r\n            \r\n               moduleList.push(itemVal);\r\n             }\r\n           });\r\n           // this.setState({nb_classes: nb_classes});\r\n           this.setState({ moduleList: moduleList });\r\n         } else {\r\n           console.log(\"No data available\");\r\n         }\r\n       },\r\n       {\r\n         onlyOnce: true,\r\n       }\r\n     )\r\n     .catch((error) => {\r\n       console.error(error);\r\n     });\r\n\r\n  \r\n  }\r\n\r\n  render() {\r\n  \r\n    return (\r\n      <div>\r\n      \r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Class</th>\r\n              <th>Module</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.moduleList.map((module_item) => (\r\n              <tr>\r\n                 \r\n                <td>{module_item.moduleID}</td>\r\n                <td>{module_item.classID}</td>\r\n                <td>{module_item.title}</td>\r\n                <td width=\"37%\">\r\n                  {\" \"}\r\n                  <Button\r\n                    variant=\"secondary class-more-btn\"\r\n                    onClick={() =>\r\n                      this.openModal(module_item.moduleID, \"details\")\r\n                    }\r\n                  >\r\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\r\n                    Details\r\n                  </Button>{\" \"}\r\n                  <DropdownButton title=\"Manage\" >\r\n                    <Dropdown.Item\r\n                      eventKey=\"1\"\r\n                      onClick={() =>\r\n                        this.openModal(module_item.moduleID, \"update\")\r\n                      }\r\n                    >\r\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\r\n                      Update\r\n                    </Dropdown.Item>\r\n                   \r\n                    <Dropdown.Item eventKey=\"2\">\r\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      eventKey=\"3\"\r\n                      \r\n                    >\r\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\r\n                      Add new ressource\r\n                    </Dropdown.Item>\r\n                   \r\n                  </DropdownButton>\r\n                </td>\r\n                <Modal\r\n                  show={this.state.openedDialog === module_item.moduleID}\r\n                  onHide={this.closeModal}\r\n                >\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>{module_item.title}</Modal.Title>\r\n                  </Modal.Header>\r\n\r\n                  <Modal.Body>\r\n                  <Form  onSubmit={() => this.handleUpdateModule(module_item.moduleID)}>\r\n                <Form.Group id=\"moduleID\">\r\n                  \r\n                  <Form.Label>Module Code</Form.Label>\r\n                  <Form.Control\r\n                      type=\"text\"\r\n                      name=\"moduleID\"\r\n                      id= \"moduleID_Val\"{...module_item.moduleID}\r\n                      value= {module_item.moduleID}\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                      readOnly=\"true\"\r\n                    ></Form.Control>                  \r\n                    </Form.Group>\r\n           \r\n                  <Form.Group id=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      id= \"title_Val\"{...module_item.moduleID}\r\n                      value= {module_item.title}\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      id= \"description_Val\"{...module_item.moduleID}\r\n                      value= {module_item.description}\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n               \r\n<Form.Group id=\"published\">\r\n\r\n<Form.Check\r\n        type=\"checkbox\"\r\n        id= \"published\"{...module_item.moduleID}\r\n        className=\"mb-2\"\r\n        label=\"Published\"\r\n      />\r\n  </Form.Group>\r\n                \r\n                </Form>\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <Button    disabled={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                      variant=\"primary\"\r\n                     type = \"submit\"\r\n                    >\r\n                      Save Changes\r\n                    </Button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n\r\n        <Modal\r\n                  show={this.state.openedDialog === this.state.sel_moduleID}\r\n                  onHide={this.closeModal}\r\n                >\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>New Ressources</Modal.Title>\r\n                  </Modal.Header>\r\n\r\n                  <Modal.Body>\r\n                  <Form  onSubmit={() => this.handleAddRessource(this.state.moduleID)}>\r\n                <Form.Group id=\"ressourceID\">\r\n                  \r\n                  <Form.Label>Ressource Code</Form.Label>\r\n                  <Form.Control\r\n                      type=\"text\"\r\n                      name=\"ressourceID\"\r\n                      id= \"ressourceID_Val\"{...this.state.moduleID}\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                   \r\n                    ></Form.Control>                  \r\n                    </Form.Group>\r\n           \r\n                  <Form.Group id=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      id= \"title_Val_res\"{...this.state.moduleID}\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      id= \"description_Val_res\"{...this.state.moduleID}\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                   \r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n               \r\n<Form.Group id=\"published\">\r\n\r\n<Form.Check\r\n        type=\"checkbox\"\r\n        id= \"published_res\"{...this.state.moduleID}\r\n        className=\"mb-2\"\r\n        label=\"Published\"\r\n      />\r\n  </Form.Group>\r\n                \r\n                </Form>\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <Button   \r\n                      variant=\"primary\"\r\n                     type = \"submit\"\r\n                    >\r\n                      Save Changes\r\n                    </Button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ManageModules from \"./ManageModules\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\r\n\r\nexport default class ModuleNew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showHide: false,\r\n      openedDialog: -1,\r\n      moduleID: \"\",\r\n      classID: \"\",\r\n      description: \"\",\r\n      published: 0,\r\n      title: \"\",\r\n      teacherID: this.props.match.params.teacherID,\r\n    };\r\n  }\r\n\r\n  //handle the student list popup\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n\r\n  //method to update the state variables with the user inputs\r\n  handleModuleInput = (e) => {\r\n    const name = e.target.name;\r\n\r\n    const value = e.target.value;\r\n\r\n    this.setState({ [name]: value });\r\n    // console.log(\"Name: \" + name + \"value:\" + value);\r\n  };\r\n  //method to add Module to the database\r\n  handleAddModule = (event) => {\r\n    const db = getDatabase();\r\n    set(ref(db, \"modules/\" + this.state.moduleID), {\r\n      moduleID: this.state.moduleID,\r\n      description: this.state.description,\r\n      title: this.state.title,\r\n      published: this.state.published,\r\n      classID: this.props.match.params.classID,\r\n    })\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to save data new Module!\" + error);\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  //get List of classes\r\n\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let classList = [];\r\n\r\n    //get list of classes\r\n    get(child(dbRef, `classes`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              classList.push(itemVal);\r\n            });\r\n            this.setState({ classList: classList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <Sidenav role=\"teacher\" euid={this.props.match.params.teacherID} />\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col>\r\n              {\" \"}\r\n              <div className=\"big-title\">\r\n                <h3 className=\"big_title\">Modules</h3>\r\n\r\n                <div>\r\n                  <ManageModules\r\n                    teacherID={this.props.match.params.teacherID}\r\n                    classID={this.props.match.params.classID}\r\n                  ></ManageModules>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              {\" \"}\r\n              <div className=\"big-title\">\r\n                <h3 className=\"big_title\">New Modules</h3>\r\n                {this.state.description}\r\n                <Form onSubmit={this.handleAddModule}>\r\n                  <Form.Group id=\"moduleID\">\r\n                    <Form.Label>Module Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"moduleID\"\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group id=\"published\">\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      id=\"published\"\r\n                      className=\"mb-2\"\r\n                      label=\"Published\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group id=\"action\">\r\n                    <Button\r\n                      className=\"w-100 btn-secondary\"\r\n                      size=\"lm\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Table,\r\n  Card, ProgressBar,\r\n  Button,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"react-bootstrap\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\r\nimport Sidenav from \"../Sidenav\";\r\n\r\nexport default class RollCall extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      actionType: \"\",\r\n      studentList: [],\r\n      classID: \"\",\r\n      teacherID: this.props.match.params.teacherID,\r\n      hidefeedback: \"none\",\r\n      classList:[],\r\n      firstName :\"\",\r\n      pres : 0,\r\n      abs: 0,\r\n      rec :0\r\n    };\r\n  }\r\n //method to update the state variables with the user selection\r\n getListofstudents = (e) => {\r\n \r\n\r\n  const classID = e.target.value;\r\n\r\n  this.setState({ classID: classID });\r\n  this.setState({studentList: [] });\r\nconsole.log(\"get student of  :\"+classID);\r\n  //get list of student of the selected class\r\n  const dbRef = ref(getDatabase());\r\n  let studentList = [];\r\n  get(child(dbRef, \"classes/\"+classID+\"/students\"))\r\n  .then(\r\n    (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        snapshot.forEach(function (item) {\r\n          var itemVal = item.val();\r\n          studentList.push(itemVal);\r\n        });\r\n        this.setState({ studentList: studentList });\r\n      } else {\r\n        console.log(\"No data available\");\r\n      }\r\n    },\r\n    {\r\n      onlyOnce: true,\r\n    }\r\n  )\r\n  .catch((error) => {\r\n    console.error(error);\r\n  });\r\n // console.log(\"Name: \" + name + \"value:\" + value);\r\n};\r\n\r\ngetstudentFirstName = (euid,i) => {\r\n\r\n  const dbRef = ref(getDatabase());\r\n  let firstName = \"\";\r\n\r\n  get(child(dbRef, \"users/\"+euid))\r\n  .then(\r\n    (snapshot) => {\r\n      if (snapshot.exists()) {\r\n     \r\n        firstName = snapshot.child(\"firstname\").val();\r\ndocument.getElementsByName(\"firstnames\")[i].innerHTML = firstName;\r\n      console.log(firstName);\r\n      } else {\r\n        console.log(\"No data available\");\r\n      }\r\n    },\r\n    {\r\n      onlyOnce: false,\r\n    \r\n\r\n    },\r\n   \r\n  )\r\n  .catch((error) => {\r\n    console.error(error);\r\n  });\r\n\r\nreturn firstName;\r\n};\r\n  //method to roll call \r\n  handleRollCall = (studentID,status) => {\r\n    const db = getDatabase();\r\n    const date = new Date();\r\n    let today = date.getMonth() +\"-\" +date.getFullYear() + \"-\" +date.getDate()  ;\r\n    set(ref(db, \"attendances/\" + this.state.classID+ \"/\"+studentID + \"/\" + today), {\r\n    \r\n     \"status\": status,\r\n     \"teacherID\":this.state.teacherID,\r\n    \r\n    })\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to save data new class!\" + error);\r\n      });\r\n  };\r\n \r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let classList = [];\r\n    let teacher = this.state.teacherID;\r\n\r\n    //get list of classes\r\n    get(child(dbRef, `classes`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              console.log(\"Teacher ID\" + itemVal.teacherID + \"---\" + teacher);\r\n              if (itemVal.teacherID == teacher) {\r\n                console.log(\"Teacher ID\" + itemVal.teacherID);\r\n                classList.push(itemVal);\r\n              }\r\n            });\r\n            // this.setState({nb_classes: nb_classes});\r\n            this.setState({ classList: classList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n\r\n       // get attendances\r\n       let pres = 0;\r\nlet abs = 0;\r\nlet rec = 0;\r\nthis.setState({ pres: 0 });\r\nthis.setState({ abs: 0 });\r\nthis.setState({ rec: 0 });\r\n       get(child(dbRef, \"attendances/\" +  this.state.classID ))\r\n       .then(attend => {\r\n           if (attend.exists()) {\r\n               pres = 0;\r\n               abs = 0;\r\n               rec = 0;\r\n               attend.forEach(item => {\r\n                   let itemVal = item.val();\r\n                 //  attendList.push(itemVal);\r\n                   console.log(itemVal);\r\n                   \r\n                   if(itemVal.status == \"Present\" ){ \r\n                     pres++;\r\n                   }\r\n                   else{\r\n                     abs++;\r\n                   }\r\n                   rec++;\r\n               });\r\n               \r\n               this.setState({ pres: pres });\r\n               this.setState({ abs: abs });\r\n               this.setState({ rec: rec });\r\n           } \r\n           else {\r\n               console.log(\"No attendances found\");\r\n           }\r\n       }, {\r\n           onlyOnce: true\r\n       }).catch(error => {\r\n           console.log(error);\r\n       });\r\n    \r\n  }\r\n\r\n  render() {\r\n    //create nav nodes for classes\r\n    const listclasses = this.state.classList.map((class_item) =>\r\n        \r\n    <option value={class_item.classID}>\r\n      {class_item.classID} -- {class_item.name} </option>\r\n         );\r\n    return (\r\n      <div>\r\n     \r\n      <Sidenav role=\"teacher\"  euid={this.props.match.params.teacherID}/>\r\n      <Container>\r\n        <Row className=\"theme_body\">\r\n          <Col>\r\n            {\" \"}\r\n            <div className=\"big-title\">\r\n              <h3 className=\"big_title\">Classes</h3>\r\n             \r\n\r\n      <div>\r\n        \r\n\r\n<Form.Group id=\"classID\" Style=\" margin-bottom: 14px;\">\r\n                  \r\n                \r\n                <Form.Select  name= \"classID\" aria-label=\"dropdown list of classes\"   onChange={this.getListofstudents} required>\r\n                <option value=\"\">\r\n         Select Class</option>\r\n                  {listclasses}\r\n                  </Form.Select>\r\n                  </Form.Group>\r\n                  \r\n               \r\n        <Table striped bordered hover size=\"sm\" style={{visibility: this.state.classID ? 'visible' : 'hidden' }}>\r\n          <thead>\r\n            <tr>\r\n          \r\n              <th>Student ID</th>\r\n              <th>First Name</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.studentList.map((student_item,index) => (\r\n              <tr>\r\n                <td>{student_item}</td>\r\n                <td>{ this.getstudentFirstName(student_item,index)} <label name=\"firstnames\"></label></td>\r\n                <td width=\"37%\">\r\n                  {\" \"}\r\n                  <Button\r\n                    variant=\"success class-more-btn\"\r\n                    onClick={() =>\r\n                      this.handleRollCall(student_item, \"Present\")\r\n                    }\r\n                  >\r\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\r\n                    Present\r\n                  </Button>{\" \"}\r\n                  <Button\r\n                    variant=\"danger class-more-btn\"\r\n                    onClick={() =>\r\n                      this.handleRollCall(student_item, \"Absent\")\r\n                    }\r\n                  >\r\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\r\n                    Absent\r\n                  </Button>{\" \"}\r\n                  \r\n                </td>\r\n                            </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      </div>\r\n      {this.state.classID}\r\n      <Card style={{visibility: this.state.classID ? 'visible' : 'hidden' }}>\r\n                <h4 className=\"mb-2 mt-2\">Attendance Count</h4>\r\n                  <h5>Present</h5>\r\n                  <ProgressBar now={(this.state.pres/this.state.rec) * 100} label={this.state.pres} className=\"mb-2\"/>\r\n                  <h5>Absent</h5>\r\n                  <ProgressBar now={(this.state.abs/this.state.rec) * 100} label={this.state.abs} className=\"mb-2\"/>\r\n                </Card>\r\n      </Col>\r\n      </Row>\r\n     \r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React  from \"react\";\r\nimport Register from \"./Register\";\r\nimport Login from \"./Login\";\r\nimport RessourceDetail from \"./Modules/Ressources/RessourceDetail\";\r\nimport {Switch, Route, HashRouter  as Router} from 'react-router-dom';\r\nimport Dashboard from \"./Dashboard\";\r\nimport ClassDetails from \"./Classes/ClassDetails\";\r\nimport AssignmentDetails from \"./Assignments/AssignmentDetails\";\r\nimport DashboardTeacher from \"./DashboardTeacher\";\r\nimport ClassNew from \"./Classes/ClassNew\";\r\nimport Grades from \"./Grades/Grades\";\r\nimport AssignmentList from \"./Assignments/AssignmentList\";\r\nimport PeopleByClass from \"./Attendances/PeopleByClass\";\r\nimport AttendanceByClass from \"./Attendances/AttendanceByClass\";\r\nimport AssignmentNew from \"./Assignments/AssignmentNew\";\r\nimport ModuleNew from \"./Modules/ModuleNew\";\r\nimport RollCall from \"./Attendances/RollCall\";\r\n\r\nfunction App() {\r\n  return (\r\n<main>\r\n    <div className=\"App\">\r\n      \r\n      <Router>\r\n <Switch>\r\n      <Route path=\"/\" component={Login} exact/>\r\n      <Route path=\"/Register\" component={Register}/>\r\n      <Route path=\"/Dashboard/:euid\" component={Dashboard}/>\r\n      <Route path=\"/DashboardTeacher/:euid\" component={DashboardTeacher}/>\r\n      <Route path=\"/ressourceDetails/:ressourceId/:moduleId/:classId/:euid\" component={RessourceDetail}/>\r\n      <Route path=\"/classDetails/:classId/:euid\" component={ClassDetails}/>\r\n      <Route path=\"/newClass/:euid/\" component={ClassNew}/>\r\n      <Route path=\"/manageAssignment/:euid/\" component={AssignmentNew}/>\r\n      <Route path=\"/manageModules/:classID/:teacherID/\" component={ModuleNew}/>\r\n      <Route path=\"/assignmentDetails/:assignmentID/:classId/:euid\" component={AssignmentDetails} />\r\n      <Route path=\"/assignmentListsByClass/:classId/:euid\" component={AssignmentList} />\r\n      <Route path=\"/attendances/:classId/:euid\" component={AttendanceByClass} />\r\n      <Route path=\"/people/:classId/:euid\" component={PeopleByClass} />\r\n      <Route path=\"/Grades/:classId/:euid\" component={Grades}/>\r\n      <Route path=\"/rollCall/:teacherID/\" component={RollCall}/>\r\n   \r\n    </Switch>\r\n</Router>\r\n    </div>\r\n    </main>\r\n \r\n    \r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport App from './components/App';\r\nimport './css/style.css'; \r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  \r\n    <App />,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}