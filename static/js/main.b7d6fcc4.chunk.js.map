{"version":3,"sources":["firebase.js","img/logo001a.png","components/Register.js","components/Login.js","components/Footer.js","img/logo-nav.png","components/Sidenav.js","components/Classes/ClassNav.js","components/Modules/Ressources/RessourceDetail.js","components/Classes/ClassItem.js","components/Classes/ListClasses.js","components/Assignments/Assignments.js","components/Dashboard.js","components/Modules/Ressources/RessourceItem.js","components/Modules/Ressources/ListRessources.js","components/Modules/ModuleItem.js","components/Modules/ListModules.js","components/Classes/ClassDetails.js","components/Assignments/AssignmentDetails.js","components/DashboardTeacher.js","components/Tools/ColorPicker.js","components/Classes/ManageClasses.js","components/Classes/ClassNew.js","components/Grades/Grades.js","components/Assignments/ListAssignmentByClass.js","components/Assignments/AssignmentList.js","components/Attendances/PeopleByClass.js","components/Attendances/AttendanceByClass.js","components/Assignments/ManageAssignment.js","components/Assignments/AssignmentNew.js","components/App.js","index.js"],"names":["initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Register","createBrowserHistory","props","handleAddUser","errorlist","state","uEuid","length","uFullName","db","getDatabase","bcrypt","hash","uPassword","then","hashpassword","set","ref","euid","fullName","dateofbirth","uDateOfBirth","password","history","push","catch","error","console","log","document","getElementById","textContent","handleUserInput","e","name","target","value","setState","validateField","uCPassword","formErrors","dateOfBirth","passwordConfirm","dateOfBirthValid","passwordValid","formValid","fieldName","fieldValidationErrors","this","dbValid","fullNameValid","euidValid","match","validateForm","Container","className","style","maxWidth","src","logo","alt","Card","Body","class","id","Form","Group","errorClass","Label","Control","type","required","onChange","Button","size","onClick","disabled","to","Component","LogIn","useState","setuEuid","setuPassword","useHistory","clearErrorMessage","invalidLoginMessage","dbRef","get","child","snapshot","exists","compare","val","err","result","role","backgroundColor","textAlign","padding","position","left","bottom","height","width","phantom","display","Footer","children","Sidenav","classList","assignmentList","dashboardlink","currentuser","forEach","item","itemVal","teacherID","classID","onlyOnce","title","listclasses","map","class_item","NavDropdown","Item","section","courseName","listassignments","assignment_item","assignmentID","teacher","Navbar","bg","expand","Brand","href","Toggle","Collapse","Nav","Link","ClassNav","defaultActiveKey","classId","isActive","eventKey","RessourceDetail","description","ressourceID","params","ressourceId","Row","Col","xs","lg","Breadcrumb","moduleId","active","Accordion","flush","Header","ClassItem","students","includes","Img","variant","Style","classColor","Title","Text","ListClasses","CardGroup","Assignments","assignmentsList","assignment","Badge","pill","dueDate","summary","Dashboard","RessourceItem","ressourceList","moduleID","ressource_item","typeID","rel","ListRessources","ModuleItem","moduleList","publishedID","module_item","ListModules","ClassDetails","classTitle","classSection","AssignmentDetails","points","DashboardTeacher","Alert","ColorPicker","selectedColour","onSelectcolor","colour","index","setSelectedColour","ManageClasses","openModal","classid","actionType","openedDialog","closeModal","handleColorCode","colorValue","handleClassInput","handleRemoveClass","window","confirm","remove","location","reload","innerText","handleUpdateClass","meetingDates","published","roomNumber","seats","session","split","show","nb_classes","showHide","studentList","studentListUI","studentsID","nbclasses","hidefeedback","Table","striped","bordered","hover","DropdownButton","Dropdown","Modal","onHide","closeButton","onSubmit","defaultValue","readOnly","maxLength","ClassNew","handleCheckboxChange","event","newArray","filter","day","handleAddClass","student_item","ListGroup","as","Check","inline","checked","firstname","Select","handleModalShowHide","Grades","md","span","offset","ListAssignmentByClass","AssignmentList","PeopleByClass","AttendanceByClass","ManageAssignment","assignmentid","handleAssignmentInput","handleUpdateAssignment","label","AssignmentNew","handleAddAssignment","duedate","preventDefault","App","path","component","Login","exact","Error","ReactDOM","render"],"mappings":"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","file":"static/js/main.b7d6fcc4.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\n\n\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyDXkzLfPAgUllqviplE_qiQOO06EhCf1tU\",\n    authDomain: \"student-portal-prod-7827d.firebaseapp.com\",\n    databaseURL: \"https://student-portal-prod-7827d-default-rtdb.firebaseio.com\",\n    projectId: \"student-portal-prod-7827d\",\n    storageBucket: \"student-portal-prod-7827d.appspot.com\",\n    messagingSenderId: \"672147118793\",\n    appId: \"1:672147118793:web:e2317e9719656541c84b18\"\n  };\n  \n\n\n  const app = initializeApp(firebaseConfig);\n\n\nexport default app;","export default __webpack_public_path__ + \"static/media/logo001a.cbd003c7.png\";","import { React, Component } from \"react\";\nimport { Form, Button, Card, Container } from \"react-bootstrap\";\nimport \"../firebase\";\nimport { getDatabase, set, ref } from \"firebase/database\";\nimport { Link } from 'react-router-dom';\nimport logo from \"../img/logo001a.png\";\nimport bcrypt from \"bcryptjs\";\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default class Register extends Component {\n  \n  //Props\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uFullName: \"\",\n      uEuid: \"\",\n      uDateOfBirth: \"\",\n      uPassword: \"\",\n      uCPassword: \"\",\n      formErrors: {\n        dateOfBirth: \"\",\n        password: \"\",\n        passwordConfirm: \"\",\n        fullName: \"\",\n        euid: \"\",\n      },\n      dateOfBirthValid: false,\n      passwordValid: false,\n      formValid: false,\n    };\n  }\n\n  handleAddUser = () => {\n let errorlist =\"\";\n    //validate\n    if (this.state.uEuid.length < 6) {\n     \n      errorlist += \"\\n Please enter euid : it is too short.\";\n     \n    }\n    if (this.state.uFullName.length === 0) {\n    \n      errorlist += \"\\n Please enter FullName : it is too short.\";\n    } else {\n      const db = getDatabase();\n      bcrypt.hash(this.state.uPassword, 12).then((hashpassword) => {\n        set(ref(db, \"users/\" + this.state.uEuid), {\n          euid: this.state.uEuid,\n          fullName: this.state.uFullName,\n          dateofbirth: this.state.uDateOfBirth,\n          password: hashpassword,\n        })\n          .then(() => {\n          \n            this.props.history.push(\"/\",{ state: 'pass'});\n          })\n          .catch((error) => {\n            console.log(\"Data failed!\" + error);\n          });\n      });\n    }\n    var error = document.getElementById(\"errorMessage\");\n    error.textContent = errorlist;\n  };\n  handleUserInput = (e) => {\n    const name = e.target.name;\n\n    const value = e.target.value;\n    // console.log(\"name\" +name + value);\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let dbValid = this.state.uDateOfBirth;\n    let passwordValid = this.state.uPassword;\n    let fullNameValid = this.state.uFullName;\n    let euidValid = this.state.uEuid;\n\n    switch (fieldName) {\n      case \"uDateOfBirth\":\n        dbValid = value.match(\n          /^(((19|20)\\d\\d))-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$/\n        );\n\n        fieldValidationErrors.dateOfBirth = dbValid ? \"\" : \" is invalid\";\n\n        this.setState({\n          dateOfBirthValid: fieldValidationErrors.dateOfBirth.length === 0,\n        });\n        console.log(\"dateOfBirthValid :\" + this.state.dateOfBirthValid);\n        break;\n      case \"uCPassword\":\n        passwordValid = this.state.uPassword === value;\n\n        fieldValidationErrors.passwordConfirm = passwordValid\n          ? \"\"\n          : \" password not match\";\n        this.setState({ passwordValid: passwordValid });\n        break;\n      case \"uPassword\":\n        passwordValid = value.length >= 6;\n        fieldValidationErrors.password = passwordValid ? \"\" : \" is too short\";\n        break;\n      case \"uFullName\":\n        fullNameValid = value.length > 0;\n\n        fieldValidationErrors.fullName = fullNameValid\n          ? \"\"\n          : \" can not be empty\";\n        break;\n      case \"uEuid\":\n        euidValid = value.length >= 6;\n       // console.log(\"euidValid\" + euidValid);\n        fieldValidationErrors.euid = euidValid ? \"\" : \" is too short\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors: fieldValidationErrors }, this.validateForm);\n  }\n  validateForm() {\n   // console.log( \"validate : \" + this.state.dateOfBirthValid && this.state.passwordValid );\n    this.setState({\n      formValid: this.state.dateOfBirthValid && this.state.passwordValid,\n    });\n  }\n  errorClass(error) {\n    // console.log(error);\n    return error.length === 0 ? \"\" : \"has-error\";\n  }\n\n  render() {\n    return (\n      <>\n        <Container className=\"d-flex align-item-center justify-content-center\">\n          <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n            <img\n              src={logo}\n              className=\"logo mx-auto d-block mb-3 mt-3\"\n              alt=\"Portal logo\"\n            ></img>\n            <Card className=\"login\">\n              <Card.Body>\n                <div class=\"shadow p-2 mb-3 bg-primary text-center text-white\">\n                  <h2>Register</h2>\n                </div>\n                <div className=\"body\">\n                <div className=\"w-100 text-center mt-2 text-danger\" id=\"errorMessage\" ></div>\n                  <Form>\n                    <Form.Group\n                      id=\"fullName\"\n                      className={`${this.errorClass(\n                        this.state.formErrors.fullName\n                      )}`}\n                    >\n                      <Form.Label>Full Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"uFullName\"\n                        required\n                        onChange={this.handleUserInput}\n                      ></Form.Control>\n                    </Form.Group>\n                    <Form.Group\n                      id=\"euid\"\n                      className={`${this.errorClass(\n                        this.state.formErrors.euid\n                      )}`}\n                    >\n                      <Form.Label>EUID</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"uEuid\"\n                        required\n                        onChange={this.handleUserInput}\n                      ></Form.Control>\n                    </Form.Group>\n                    <Form.Group\n                      id=\"date-of-birth\"\n                      className={`${this.errorClass(\n                        this.state.formErrors.dateOfBirth\n                      )}`}\n                    >\n                      <Form.Label>Date of Birth</Form.Label>\n                      <Form.Control\n                        type=\"date\"\n                        name=\"uDateOfBirth\"\n                        required\n                        onChange={this.handleUserInput}\n                      ></Form.Control>\n                    </Form.Group>\n                    <Form.Group\n                      id=\"password\"\n                      className={`${this.errorClass(\n                        this.state.formErrors.password\n                      )}`}\n                    >\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"uPassword\"\n                        required\n                        onChange={this.handleUserInput}\n                      ></Form.Control>\n                    </Form.Group>\n                    <Form.Group\n                      id=\"password-confirm\"\n                      className={`${this.errorClass(\n                        this.state.formErrors.passwordConfirm\n                      )}`}\n                    >\n                      <Form.Label>Password Confirmation</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"uCPassword\"\n                        required\n                        onChange={this.handleUserInput}\n                      ></Form.Control>\n                    </Form.Group>\n                    <Form.Group id=\"action\">\n                  \n                      <Button\n                        className=\"w-100 btn-secondary\"\n                        size=\"lm\"\n                        type=\"Button\"\n                        onClick={this.handleAddUser}\n                        disabled={!this.state.formValid}\n                      >\n                        Sign Up\n                      </Button>\n                    </Form.Group>\n                  </Form>\n                  <div className=\"w-100 text-center mt-2\">\n                    Already have an account?\n                    <Link to=\"/\"> Log In </Link>\n                  </div>\n                \n                </div>\n              </Card.Body>\n            </Card>\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n","import { React, useState } from \"react\";\r\nimport { Form, Button, Card, Container } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { getDatabase, get, ref, child } from \"firebase/database\";\r\nimport logo from \"../img/logo001a.png\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport default function LogIn() {\r\n  const [uEuid, setuEuid] = useState(\"\");\r\n  const [uPassword, setuPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  function clearErrorMessage() {\r\n    var error = document.getElementById(\"errorMessage\");\r\n    error.textContent = \"\";\r\n  }\r\n\r\n  function invalidLoginMessage(){\r\n    var error = document.getElementById(\"errorMessage\");\r\n    error.textContent = \"Invalid Login\";\r\n    console.log(\"Invalid Login\");\r\n  }\r\n  function handleLoginUser() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    get(child(dbRef, \"users/\" + uEuid))\r\n      .then((snapshot) => {\r\n        // checks if euid is in database\r\n        if (snapshot.exists()) {\r\n          // checks password match, if true then redirects to dashboard\r\n          bcrypt.compare(\r\n            uPassword,\r\n            snapshot.child(\"password\").val(),\r\n            function (err, result) {\r\n              if (result) {\r\n                const role = snapshot.child(\"role\").val();\r\n                const fName = snapshot.child(\"firstname\").val();\r\n                console.log(\"password same \" + result + role );\r\n                \r\n                // redirects to either student or teacher dashboard based on role\r\n                if (role == \"student\" )\r\n                {\r\n                  history.push(\"/Dashboard/\"+ uEuid);\r\n                }\r\n                else if (role == \"teacher\")\r\n                {\r\n                  history.push(\"DashboardTeacher/\" + uEuid);\r\n                }\r\n                \r\n              }// if(result)\r\n              // if password does not match, error messages displayed\r\n              else {\r\n                invalidLoginMessage();\r\n              }\r\n            }\r\n          );\r\n          if (snapshot.child(\"password\").val() === uPassword) {\r\n            history.push(\"/Dashboard\");\r\n            console.log(\"Correct password\");\r\n          }\r\n        }\r\n        // if euid is not found in database, error message is displayed\r\n        else {\r\n          invalidLoginMessage();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  } //function handleLoginUser()\r\n\r\n  return (\r\n\r\n    <>\r\n    {}\r\n      <Container className=\"d-flex align-item-center justify-content-center\">\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <img\r\n            src={logo}\r\n            className=\"logo mx-auto d-block mb-3 mt-3\"\r\n            alt=\"Portal logo\"\r\n          ></img>\r\n\r\n          <Card className=\"login\">\r\n            <Card.Body>\r\n              <div class=\"shadow p-2 mb-3 bg-primary text-center text-white\">\r\n                <h2>Login</h2>\r\n              </div>\r\n              <div className=\"body\">\r\n                <Form.Group id=\"euid\">\r\n                  <Form.Label>EUID</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    required\r\n                    onChange={(e) => {\r\n                      setuEuid(e.target.value);\r\n                      clearErrorMessage();\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    required\r\n                    onChange={(e) => {\r\n                      setuPassword(e.target.value);\r\n                      clearErrorMessage();\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button\r\n                    className=\"w-75 mt-2\"\r\n                    type=\"Button\"\r\n                    onClick={handleLoginUser}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n\r\n                <div className=\"w-100 text-center mt-2\">\r\n                  Don't have an account?\r\n                  <Link to=\"/Register\"> Register </Link>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"w-100 text-center mt-2 text-danger\"\r\n                  id=\"errorMessage\"\r\n                ></div>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n                  }\r\n","var style = {\n    backgroundColor: \"#F8F8F8\",\n  \n    textAlign: \"center\",\n    padding: \"20px\",\n    position: \"fixed\",\n    left: \"0\",\n    bottom: \"0\",\n    height: \"60px\",\n    width: \"100%\",\n}\n\nvar phantom = {\n  display: 'block',\n  padding: '20px',\n  height: '60px',\n  width: '100%',\n}\n\nfunction Footer({ children }) {\n    return (\n        <div>\n            <div style={phantom} />\n            <div style={style}>\n              Copyright 2021\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","export default __webpack_public_path__ + \"static/media/logo-nav.2c59ed9d.png\";","import React, { Component } from 'react'\nimport { NavDropdown, Navbar, Container,Nav } from \"react-bootstrap\";\nimport   \"../firebase\";\nimport { getDatabase, ref,get,child } from \"firebase/database\";\nimport logo from \"../img/logo-nav.png\"\nimport {Link} from 'react-router-dom';\nexport default class Sidenav extends Component {\n   \n    constructor(props) {\n    \n        super(props);\n       \n        \n        this.state = {classList : [],assignmentList : [],dashboardlink :\"\",currentuser : this.props.euid}\n        }\n        componentDidMount() {\n            \n            const dbRef = ref(getDatabase());\n            let classList = [];\n            let assignmentList = [];\nlet dashboardlink =\"Dashboard\";\nlet currentuser =this.state.currentuser;\n            //get list of classes\n            get(child(dbRef, `classes`)).then((snapshot) => {\n              if (snapshot.exists()) {\n                snapshot.forEach(function(item) {\n                    var itemVal = item.val();\n                    classList.push(itemVal);\n               \n                if(itemVal.teacherID == currentuser)\n                {\n                  dashboardlink = \"DashboardTeacher\";\n                }\n               \n                   console.log(itemVal.classID);\n                });\n               \n                this.setState({ dashboardlink:dashboardlink });\n               this.setState({ classList:classList });\n    \n              } else {\n                console.log(\"No data available\");\n              }\n            }, {\n                onlyOnce: true\n              }).catch((error) => {\n              console.error(error);\n            }); \n          \n\n              //get list of assignments\n              get(child(dbRef, `assignments`)).then((snapshot) => {\n                if (snapshot.exists()) {\n                  snapshot.forEach(function(item) {\n                      var itemVal = item.val();\n                      assignmentList.push(itemVal);\n                     console.log(itemVal.title);\n                  });\n                 \n                 \n                 this.setState({ assignmentList:assignmentList });\n              \n                } else {\n                  console.log(\"No data available\");\n                }\n              }, {\n                  onlyOnce: true\n                }).catch((error) => {\n                console.error(error);\n              }); \n            \n        }\n    render() {\n        \n        //create nav nodes for classes\n        const listclasses = this.state.classList.map((class_item) =>\n        \n        <NavDropdown.Item key={class_item.classID}>\n       \n          {<Link to={`/classDetails/${class_item.classID}/${class_item.teacherID}`}>\n          {class_item.name} Section {class_item.section} - {class_item.courseName}\n     </Link>}\n          \n          </NavDropdown.Item>\n    );  \n //create nav nodes for assignments\n const listassignments = this.state.assignmentList.map((assignment_item) =>\n <NavDropdown.Item \n \n   key={assignment_item.assignmentID}>\n     {<Link to={`/assignmentDetails/${assignment_item.assignmentID}/${assignment_item.classID}/${assignment_item.teacher}`}>\n       {assignment_item.title} -- Section {assignment_item.className} {assignment_item.section} - {assignment_item.courseName}\n     </Link>}\n </NavDropdown.Item>\n \n);\n        return (\n         \n             \n       \n<div id=\"slide-out\" className=\"side-nav fixed\">\n<Navbar bg=\"light\" expand=\"lg\" className=\"nav-portal\">\n  <Container>\n    \n    <Navbar.Brand href=\"#\"><img src={logo} alt=\"logo\" className=\"nav-logo\"></img></Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"me-auto\">\n       \n        <Nav.Link href=\"#\"><Link to={`/`+this.state.dashboardlink+`/`+this.props.euid}>\n   Dashboard\n </Link></Nav.Link>\n    \n        \n         \n        \n         \n     \n       \n        <NavDropdown title=\"Classes\" id=\"basic-nav-dropdown\">\n           {listclasses} \n        </NavDropdown>\n        <NavDropdown title=\"Assignments\" id=\"basic-nav-dropdown\">\n           {listassignments} \n        </NavDropdown>\n        <Nav.Link href=\"#home\">Attendance</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Container>\n</Navbar>\n</div>\n\n           \n        )\n    }\n}\n","\n\n\nimport React, { Component } from 'react'\nimport { Nav} from \"react-bootstrap\";\nimport   \"../../firebase\";\n\n\n\nexport default class ClassNav extends Component {\n\n    render() {\n  \n        return (\n        \n            <Nav defaultActiveKey=\"/\" className=\"class-nav flex-column\">\n        \n            <Nav.Link href={ \"/classDetails/\"+ this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive == 1) ?\"active\": \"\"}>Modules</Nav.Link>\n            <Nav.Link href={\"/Grades/\"+ this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive ==2) ?\"active\": \"\"}>Grades</Nav.Link>\n            <Nav.Link href={`/assignmentListsByClass/`+this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive == 3) ?\"active\": \"\"}>Assignments</Nav.Link>\n            <Nav.Link eventKey=\"link-4\" href={ \"/attendances/\"+ this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive == 4) ?\"active\": \"\"}>Attendance</Nav.Link>\n            <Nav.Link eventKey=\"link-5\"  href={ \"/people/\"+ this.props.classId+\"/\"+this.props.euid}  className={(this.props.isActive ==5) ?\"active\": \"\"}>People</Nav.Link>\n          </Nav>\n\n\n            );\n        \n    }\n}\n","import React, { Component } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport { Container, Row, Col, Breadcrumb } from \"react-bootstrap\";\nimport Footer from \"../../Footer\";\nimport Sidenav from \"../../Sidenav\";\nimport ClassNav from \"../../Classes/ClassNav\";\nimport \"../../../firebase\";\n//import \"font-awesome/css/font-awesome.min.css\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport { Link } from \"react-router-dom\";\n\nexport default class RessourceDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { description: \"\", title: \"\" };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n\n    let title = \"\";\n    let description = \"\";\n    //get list of ressources\n    get(child(dbRef, `ressources`))\n      .then(\n        (snapshot) => {\n          let ressourceID = this.props.match.params.ressourceId;\n          console.log(\"searching for ressources\" + ressourceID);\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              //  console.log(\"ressource \"+ressourceID);\n              if (itemVal.ressourceID == ressourceID) {\n                description = itemVal.description;\n                title = itemVal.title;\n              }\n            });\n            this.setState({ description: description });\n            this.setState({ title: title });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div >\n   \n       <Sidenav euid={this.props.match.params.euid} />\n        <Container>\n          <Row className=\"theme_body\">\n            <Col xs lg=\"2\">\n              <ClassNav  euid={this.props.match.params.euid} classId={this.props.match.params.classId}  isActive=\"1\"></ClassNav>\n            </Col>\n            <Col>\n              <div className=\"ressources\">\n                <Breadcrumb>\n               \n                  <Breadcrumb.Item>\n                    <Link\n                      to={`/classDetails/${this.props.match.params.classId}/${this.props.match.params.euid}`}\n                    >\n                      Class\n                    </Link>\n                  </Breadcrumb.Item>\n                  <Breadcrumb.Item>\n                    <Link\n                      to={`/classDetails/${this.props.match.params.classId}/${this.props.match.params.euid}`}\n                    >\n                      Module {this.props.match.params.moduleId}\n                    </Link>\n                  </Breadcrumb.Item>\n                  <Breadcrumb.Item active>{this.state.title}</Breadcrumb.Item>\n                </Breadcrumb>\n\n                <Accordion defaultActiveKey=\"0\" flush>\n                  <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>{this.state.title}</Accordion.Header>\n                    <Accordion.Body>{this.state.description}</Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Button, Card} from \"react-bootstrap\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport {Link} from 'react-router-dom';\n\nexport default class ClassItem extends Component {\n    constructor(props) {\n    \n        super(props);\n      \n        \n        this.state = {classList : []}\n        }\n        componentDidMount() {\n            \n            const dbRef = ref(getDatabase());\n            let classList = [];\n           \n\n    //get list of classes\n    get(child(dbRef, `classes`)).then((snapshot) => {\n      let euid = this.props.euid;\n      console.log(`object list`,   this.props.euid);\n      if (snapshot.exists()) {\n        snapshot.forEach(function (item) {\n          var itemVal = item.val();\n          console.log(\" euid:\"+ euid +  itemVal.students+ itemVal.students.includes(euid));\n          if(itemVal.teacherID == euid || itemVal.students.includes(euid)){\n          classList.push(itemVal);\n         \n          }\n        });\n        this.setState({ classList: classList });\n      } else {\n        console.log(\"No data available\");\n      }\n    }, {\n      onlyOnce: true\n    }).catch((error) => {\n      console.error(error);\n    });\n  }\n\n            \n        \n    render() {\n        \n       \n        return (\n            \n            this.state.classList.map((class_item) =>\n                   <div>\n                \n                <Card style={{ width: '18rem','marginRight': '20px' }}>\n                  \n  <Card.Img variant=\"top\" className=\"class_img\" Style={\"Background-color:\"+class_item.classColor}  />\n  <Card.Body>\n    <Card.Title>{class_item.name}</Card.Title>\n    <Card.Text>\n    {class_item.description}\n    </Card.Text>\n    <Button variant=\"primary class-more-btn\"><Link to={`/classDetails/${class_item.classID}/${this.props.euid}`}>\n    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>  Access\n          </Link></Button>         \n  </Card.Body>\n</Card>\n            </div>\n               ));\n        \n    }\n}\n","import React, { Component } from 'react'\nimport { CardGroup} from \"react-bootstrap\";\nimport   \"../../firebase\";\n\nimport ClassItem from './ClassItem';\n\nexport default class ListClasses extends Component {\n\n    render() {\n        \n       \n        return (\n            <CardGroup>\n       \n                <ClassItem role={this.props.role} euid={this.props.euid}></ClassItem>\n            </CardGroup>\n\n\n            );\n        \n    }\n}\n","import React, { Component } from 'react';\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child } from \"firebase/database\"\nimport \"../../css/assignmentStyle.css\";\nimport { Link } from 'react-router-dom';\nimport { Badge, Button } from \"react-bootstrap\";\n\nexport default class Assignments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { assignmentsList: [] };\n    }\n\n    componentDidMount() {\n        const dbRef = ref(getDatabase());\n        let assignmentList = [];\n\n        // Get list of assignments\n        get(child(dbRef, 'assignments'))\n            .then(assignment => {\n                if (assignment.exists()) {\n                    assignment.forEach(item => {\n                        let itemVal = item.val();\n                        assignmentList.push(itemVal);\n                        console.log(itemVal.title);\n                    });\n\n                    this.setState({ assignmentsList: assignmentList });\n                } else {\n                    console.log(\"No assignemnts found\");\n                }\n            }, {\n                onlyOnce: true\n            }).catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        // Creates assignemnts cards\n        return (\n            this.state.assignmentsList.map(item => \n                <div  id=\"card\">\n                    <h2 className=\"title card-title h5\">{item.title}</h2>\n                    <section>\n                    <p> <Badge pill  bg=\"success\">{item.className}</Badge> | \n                   <Badge pill  bg=\"danger\">{item.dueDate}</Badge>\n                    </p>\n                   <p> {item.summary} </p>\n                \n                      \n                    <Button variant=\"secondary class-more-btn\"><Link to={`/assignmentDetails/${item.assignmentID}/${item.classID}/${this.props.euid}`}>+ More</Link></Button>\n                    </section>\n                </div>\n            )\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport Footer from \"./Footer\";\nimport Sidenav from \"./Sidenav\";\nimport ListClasses from \"./Classes/ListClasses\";\nimport Assignments from \"./Assignments/Assignments\";\nexport default class Dashboard extends Component {\n  render() {\n    return (\n      <div>\n            <Sidenav role=\"student\" euid={this.props.match.params.euid}/>\n        <Container>\n        \n          \n        \n          <Row className=\"theme_body\">\n          <div className=\"big-title\">\n\t\t      <h3 className=\"big_title\">Classes</h3>\n     \n                <div> <ListClasses role=\"student\" euid= {this.props.match.params.euid}></ListClasses></div>\n</div>\n<div className=\"big-title\">\n\t\t      <h3 className=\"big_title\">Assignments</h3>\n\t\t\t\n                <div className=\"assignment-cards\"> <Assignments euid= {this.props.match.params.euid} /></div>\n</div>\n          </Row>\n          <Row>\n              <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/Accordion\";\n\nimport \"../../../firebase\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport { Link } from \"react-router-dom\";\n\nexport default class RessourceItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ressourceList: [] };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let ressourceList = [];\n\n    //get list of ressources\n    get(child(dbRef, `ressources`))\n      .then(\n        (snapshot) => {\n          let moduleID = this.props.moduleID;\n          console.log(\"searching for ressources\" + moduleID);\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              // console.log(\"found 1\"+itemVal.moduleID);\n              if (itemVal.moduleID == moduleID) {\n                console.log(\"found :\" + moduleID);\n                ressourceList.push(itemVal);\n              }\n            });\n            this.setState({ ressourceList: ressourceList });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return this.state.ressourceList.map((ressource_item) => (\n      <div className=\"ressources\">\n        <ListGroup>\n          <ListGroup.Item>\n            {\" \"}\n            <i\n              className={`fa fa-${\n                ressource_item.typeID === 1 ? \"file\" : \"external-link\"\n              }`}\n            ></i>\n           {/*if the ressource type is file */}\n\n            {ressource_item.typeID === 1 ? (\n              <Link\n                to={`/ressourceDetails/${ressource_item.ressourceID}/${this.props.moduleID}/${this.props.classID}/${this.props.euid}`}\n              >\n                {ressource_item.title}{\" \"}\n              </Link>\n            ) : (\n                /*if the ressource type is external link */\n              <a href={ressource_item.description} target=\"_blank\" rel=\"noreferrer\">\n                {ressource_item.title}{\" \"}\n              </a>\n            )}\n          </ListGroup.Item>\n        </ListGroup>\n      </div>\n    ));\n  }\n}\n","import React, { Component } from 'react'\nimport   \"../../../firebase\";\n\nimport Ressourcetem from './RessourceItem';\n\nexport default class ListRessources extends Component {\n\n    render() {\n        \n       \n        return (\n           <div>\n\n                <Ressourcetem classID ={this.props.classID} moduleID={this.props.moduleID} euid={this.props.euid}></Ressourcetem>\n     \n           </div>\n          \n\n\n            );\n        \n    }\n}\n","import React, { Component } from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\n\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\n\nimport ListRessources from './Ressources/ListRessources';\n\nexport default class ModuleItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {moduleList : [] };\n\n        }\n        componentDidMount() {\n            \n            const dbRef = ref(getDatabase());\n            let moduleList = [];\n           \n\n    //get list of modules\n    get(child(dbRef, `modules`)).then((snapshot) => {\n     \n      let classID = this.props.classID;\n      console.log(\"searching for modules\"+classID);\n      if (snapshot.exists()) {\n        snapshot.forEach(function (item) {\n        \n          var itemVal = item.val();\n         // console.log(\"found 1\"+itemVal.classID);\n          if(itemVal.classID == classID && itemVal.publishedID == 1)\n          {\n           \n            moduleList.push(itemVal);\n          }\n        \n         \n        });\n        this.setState({ moduleList: moduleList });\n      } else {\n        console.log(\"No data available\");\n      }\n    }, {\n      onlyOnce: true\n    }).catch((error) => {\n      console.error(error);\n    });\n  }\n\n            \n        \n    render() {\n        \n       \n        return (\n           \n            this.state.moduleList.map((module_item) =>\n              <div className=\"modules\">\n            <Accordion defaultActiveKey=\"0\" flush>\n            <Accordion.Item eventKey=\"0\">\n              <Accordion.Header>{module_item.title}</Accordion.Header>\n              <Accordion.Body>\n            <ListRessources  classID={this.props.classID} moduleID={module_item.moduleID} euid={this.props.euid}></ListRessources>\n              </Accordion.Body>\n            </Accordion.Item>\n            </Accordion>\n            </div>\n               ));\n        \n    }\n}\n","import React, { Component } from 'react'\n\nimport   \"../../firebase\";\n\nimport ModuleItem from './ModuleItem';\n\nexport default class ListModules extends Component {\n\n    render() {\n        \n       \n        return (\n           <>\n\n                <ModuleItem euid={this.props.euid} classID={this.props.classID}></ModuleItem>\n     \n           </>\n          \n\n\n            );\n        \n    }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ClassNav from \"./ClassNav\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport ListModules from \"../Modules/ListModules\";\nexport default class ClassDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { classTitle: \"\" ,classSection :\"\" };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n\n    //get  classe title\n\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n          \n            if (\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\n            ) {\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\n              this.setState({ classSection: snapshot.child(\"section\").val() });\n            }\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n    \n       <Sidenav   euid={this.props.match.params.euid} />\n        <Container>\n          <Row className=\"theme_body\">\n            <Col xs lg=\"2\">\n          \n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"1\"></ClassNav>\n            </Col>\n            <Col> <h3 className=\"big_title\">{this.state.classTitle} Section {this.state.classSection}</h3>\n           \n            <ListModules classID={this.props.match.params.classId} euid={this.props.match.params.euid}></ListModules>\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport {\n  Container,\n  Row,\n  Col,\n  Breadcrumb,\n  Badge,\n  Button,\n} from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ClassNav from \"../Classes/ClassNav\";\nimport \"../../firebase\";\n//import \"font-awesome/css/font-awesome.min.css\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport { Link } from \"react-router-dom\";\n\nexport default class AssignmentDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { description: \"\", title: \"\", dueDate: \"\", className: \"\" };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n\n    let title = \"\";\n    let description = \"\";\n    let dueDate = \"\";\n    let points = \"\";\n    let className = \"\";\n    //get list of ressources\n    get(child(dbRef, `assignments`))\n      .then(\n        (snapshot) => {\n          let assignmentID = this.props.match.params.assignmentID;\n          console.log(\"searching for assignments\" + assignmentID);\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              //  console.log(\"ressource \"+ressourceID);\n              if (itemVal.assignmentID == assignmentID) {\n                description = itemVal.description;\n                title = itemVal.title;\n                dueDate = itemVal.dueDate;\n                points = itemVal.points;\n                className = itemVal.className;\n              }\n            });\n            this.setState({ description: description });\n            this.setState({ title: title });\n            this.setState({ dueDate: dueDate });\n            this.setState({ points: points });\n            this.setState({ className: className });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Sidenav euid={this.props.match.params.euid} />\n        <Container>\n          <Row className=\"theme_body\">\n            <Col xs lg=\"2\">\n              <ClassNav\n                euid={this.props.match.params.euid}\n                classId={this.props.match.params.classId}\n                isActive=\"3\"\n              ></ClassNav>\n            </Col>\n            <Col>\n              <div className=\"assignment\">\n                <Breadcrumb>\n                  <Breadcrumb.Item>\n                    <Link\n                      to={`/classDetails/${this.props.match.params.classId}/${this.props.match.params.euid}`}\n                    >\n                      Class\n                    </Link>\n                  </Breadcrumb.Item>\n                  <Breadcrumb.Item>\n                    <Link\n                      to={`/assignmentListsByClass/${this.props.match.params.classId}/${this.props.match.params.euid}`}\n                    >\n                      Assignments {this.props.match.params.moduleId}\n                    </Link>\n                  </Breadcrumb.Item>\n                  <Breadcrumb.Item active>{this.state.title}</Breadcrumb.Item>\n                </Breadcrumb>\n\n                <Accordion defaultActiveKey=\"0\" flush>\n                  <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>{this.state.title}</Accordion.Header>\n                    <Accordion.Body>\n                      <Row>\n                        <Col>\n                          <span Style=\"font-weight: bold;color: red;\">\n                            {\" \"}\n                            <i className=\"fa fa-calendar-plus-o\"></i>Due Date :\n                          </span>{\" \"}\n                          <Badge bg=\"secondary\">{this.state.dueDate}</Badge> |    <Badge bg=\"info\">{this.state.className}</Badge>\n                        </Col>\n                      </Row>\n                    \n                      <Row>\n                        <p>{this.state.description}</p>\n                      </Row>\n                      <Button variant=\"primary\">Submit assignment</Button>\n                    </Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row, Col,Alert,Button } from \"react-bootstrap\";\nimport Footer from \"./Footer\";\nimport Sidenav from \"./Sidenav\";\nimport ListClasses from \"./Classes/ListClasses\";\nimport { Link } from \"react-router-dom\";\nexport default class DashboardTeacher extends Component {\n  render() {\n    return (\n      <div>\n             <Sidenav  role=\"teacher\" euid={this.props.match.params.euid} />\n        <Container>\n        \n        \n        \n          <Row className=\"theme_body\">\n            <div>\n            <Col className=\"welcome_box\">\n<Alert key=\"welcome\" variant=\"secondary\">\n<h4>Welcome</h4>\n<p>\n\nAww yeah, you successfully read this important alert message.\n</p>\n<hr/>\n<div className=\"d-flex justify-content-end\">\n<Button variant=\"primary\"><Link to={`/rollCall}`}  className=\"white\">\n<i class=\"fa fa-hand-paper-o\" aria-hidden=\"true\"></i> Roll Call\n          </Link></Button> <Button variant=\"primary\"><Link className=\"white\" to={`/newClass/${this.props.match.params.euid}`}>\n          <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Manage Classes\n          </Link></Button>\n          <Button variant=\"primary\"><Link className=\"white\" to={`/manageAssignment/${this.props.match.params.euid}`}>\n          <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Manage Assignments\n          </Link></Button>\n        </div>\n\n  </Alert>\n\n</Col>\n\n              </div>\n          <div className=\"big-title\">\n\t\t      <h3 className=\"big_title\">Classes</h3>\n\t\t\t\n                <div> <ListClasses role=\"teacher\" euid={this.props.match.params.euid}></ListClasses></div>\n</div>\n\n          </Row>\n          <Row>\n              <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class ColorPicker extends Component {\n    constructor(props) {\n        super(props);\n       \n    this.state = { selectedColour :\"\"\n    };\n    this.props.onSelectcolor(this.state.selectedColour);\n}\n    setSelectedColour(colour) {\n\t\tthis.setState({ selectedColour: colour });\n\t}\n    render() {\n        const defaultColours = [\n            '#FF1654',\n            '#247BA0',\n            '#70C1B3',\n            '#92b300',\n            '#CBB1DB',\n            '#C1BF70',\n            '#add8e6',\n            '#ffc1cb',\n            '#67d8f3',\n            '#f3af67'\n        ];\n        \n        return (\n           \n         \n            <ul className=\"icons\">\n                {defaultColours.map((colour, index) => {\n                    return (\n                        <li key={index} onClick={() =>{ this.setSelectedColour(colour);   this.props.onSelectcolor(colour);}}>\n                            <span className={`dot color border-radius ${this.state.selectedColour === colour ? 'selected' : ''}`} style={{ backgroundColor: colour}}></span>\n                        </li>\n                    );\n                })}\n            </ul>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport {\n  Table,\n  DropdownButton,\n  Dropdown,\n  Button,\n  Modal,\n  Form,\n  Alert,\n} from \"react-bootstrap\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child, set, remove } from \"firebase/database\";\nimport ColorPicker from \"../Tools/ColorPicker\";\n\nexport default class ManageClasses extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      classList: [],\n      show: false,\n      openedDialog: -1,\n      nb_classes: 0,\n      actionType: \"\",\n      classColor: \"\",\n      showHide: false,\n      studentList: [],\n      studentListUI: [],\n      studentsID: [],\n      nbclasses: 0,\n      classID: \"\",\n      description: \"\",\n      meetingDates: \"\",\n      title: \"\",\n      published: 0,\n      roomNumber: \"\",\n      seats: 0,\n      section: \"\",\n      session: 2,\n      students: [],\n      teacherID: this.props.teacherID,\n      hidefeedback: \"none\",\n    };\n  }\n\n  openModal = (classid, actionType) => {\n    this.setState({\n      openedDialog: classid,\n      actionType: actionType,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      openedDialog: null,\n    });\n  };\n  handleColorCode = (colorValue) => {\n    this.setState({ classColor: colorValue });\n  };\n  //method to update the state variables with the user inputs\n  handleClassInput = (e) => {\n    const name = e.target.name;\n\n    const value = e.target.value;\n\n    this.setState({ [name]: value });\n    console.log(\"Name: \" + name + \"value:\" + value);\n  };\n  //handle popup\n  handleModalShowHide() {\n    this.setState({ showHide: !this.state.showHide });\n  }\n\n  //method to remove class to the database\n  handleRemoveClass = (classID) => {\n    const db = getDatabase();\n    ///\n\n    if (window.confirm(\"Are you sure you wish to delete this item?\")) {\n      remove(ref(db, \"classes/\" + classID))\n        .then(() => {\n          window.location.reload(false);\n          document.getElementById(\"feedback\").style.display = \"block\";\n          document.getElementById(\"feedback\").innerText =\n            \"Class \" + classID + \" remove successfully!\";\n        })\n        .catch((error) => {\n          console.log(\n            \"Failed to remove class :\" + classID + \" error :\" + error\n          );\n        });\n    }\n\n    ///\n  };\n  //method to update class to the database\n  handleUpdateClass = (classID) => {\n    const db = getDatabase();\n    set(ref(db, \"classes/\" + classID), {\n      classID: classID,\n      description: document.getElementById(\"description_val\").value,\n      meetingDates: document.getElementById(\"meetingDates_val\").value,\n      name: document.getElementById(\"name_val\").value,\n      published: 1,\n      roomNumber: document.getElementById(\"roomNumber_val\").value,\n      seats: document.getElementById(\"seats_val\").value,\n      section: document.getElementById(\"section_val\").value,\n      session: document.getElementById(\"session_val\").value,\n      students: document.getElementById(\"studentIDs_val\").value.split(\",\"),\n      teacherID: this.props.teacherID,\n      classColor: this.state.classColor,\n    })\n      .then(() => {\n        window.location.reload(false);\n      })\n      .catch((error) => {\n        console.log(\"Failed to save data new class!\" + error);\n      });\n  };\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let classList = [];\n    let teacher = this.props.teacherID;\n\n    //get list of classes\n    get(child(dbRef, `classes`))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              console.log(\"Teacher ID\" + itemVal.teacherID + \"---\" + teacher);\n              if (itemVal.teacherID == teacher) {\n                console.log(\"Teacher ID\" + itemVal.teacherID);\n                classList.push(itemVal);\n              }\n            });\n            // this.setState({nb_classes: nb_classes});\n            this.setState({ classList: classList });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Alert\n          key=\"feedback\"\n          id=\"feedback\"\n          variant=\"\"\n          Style=\"display :\"\n          {...this.state.hidefeedback}\n        ></Alert>\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Class</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.classList.map((class_item) => (\n              <tr>\n                <td>{class_item.classID}</td>\n                <td>{class_item.name}</td>\n                <td width=\"37%\">\n                  {\" \"}\n                  <Button\n                    variant=\"primary class-more-btn\"\n                    onClick={() =>\n                      this.openModal(class_item.classID, \"details\")\n                    }\n                  >\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\n                    Details\n                  </Button>{\" \"}\n                  <DropdownButton title=\"Manage\" id=\"bg-nested-dropdown\">\n                    <Dropdown.Item\n                      eventKey=\"1\"\n                      onClick={() =>\n                        this.openModal(class_item.classID, \"update\")\n                      }\n                    >\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\n                      Update\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"1\">\n                      <i class=\"fa fa-address-book\" aria-hidden=\"true\"></i> Add\n                      Student\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      eventKey=\"2\"\n                      onClick={() => this.handleRemoveClass(class_item.classID)}\n                    >\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\n                    </Dropdown.Item>\n                  </DropdownButton>\n                </td>\n                <Modal\n                  show={this.state.openedDialog === class_item.classID}\n                  onHide={this.closeModal}\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>{class_item.name}</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                    <Form\n                      onSubmit={() =>\n                        this.handleUpdateClass(class_item.classID)\n                      }\n                    >\n                      <Form.Group id=\"name\">\n                        <Form.Label>Name</Form.Label>\n\n                        <Form.Control\n                          type=\"text\"\n                          id=\"name_val\"\n                          defaultValue={class_item.name}\n                          required\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Form.Group id=\"description\">\n                        <Form.Label>Description</Form.Label>\n\n                        <Form.Control\n                          type=\"text\"\n                          id=\"description_val\"\n                          defaultValue={class_item.description}\n                          maxLength =\"124\"\n                          required\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Form.Group id=\"section\">\n                        <Form.Label>Section</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          id=\"section_val\"\n                          defaultValue={class_item.section}\n                          required\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Form.Group id=\"session\">\n                        <Form.Label>Session</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          id=\"session_val\"\n                          required\n                          defaultValue={class_item.session}\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Form.Group id=\"roomNumber\">\n                        <Form.Label>Room Number</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          id=\"roomNumber_val\"\n                          required\n                          defaultValue={class_item.roomNumber}\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Form.Group id=\"seats\">\n                        <Form.Label>Seats</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          id=\"seats_val\"\n                          required\n                          defaultValue={class_item.seats}\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Form.Group id=\"meetingDates\">\n                        <Form.Label>Meeting Day</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          id=\"meetingDates_val\"\n                          required\n                          defaultValue={class_item.meetingDates}\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <input\n                        type=\"hidden\"\n                        id=\"studentIDs_val\"\n                        defaultValue={class_item.students}\n                      ></input>\n                      <Form.Group\n                        id=\"class-color\"\n                        Style={\n                          this.state.actionType === \"update\"\n                            ? \"display:block\"\n                            : \"display:none\"\n                        }\n                      >\n                        <Form.Label>Pick a color</Form.Label>\n\n                        <ColorPicker\n                          onSelectcolor={this.handleColorCode}\n                        ></ColorPicker>\n                      </Form.Group>\n                      <Button\n                        variant=\"primary\"\n                        disabled={\n                          this.state.actionType === \"update\" ? false : true\n                        }\n                        type=\"submit\"\n                      >\n                        Save Changes\n                      </Button>\n                    </Form>\n                  </Modal.Body>\n                </Modal>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Container,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ListGroup,\n} from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ManageClasses from \"./ManageClasses\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child, set, } from \"firebase/database\";\nimport ColorPicker from \"../Tools/ColorPicker\";\n\nexport default class ClassNew extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      studentList: [],\n      studentListUI: [],\n      studentsID: [],\n      classList: [],\n      showHide: false,\n      openedDialog: -1,\n      nbclasses:0,\n      classID: \"\",\n      description: \"\",\n      meetingDates: \"\",\n      title: \"\",\n      published: 0,\n      roomNumber: \"\",\n      seats: 0,\n      section: \"\",\n      session: 2,\n      classColor:\"\",\n      students: [],\n      teacherID: this.props.match.params.euid,\n    };\n  }\n\n  //handle the student list popup\n  handleModalShowHide() {\n    this.setState({ showHide: !this.state.showHide });\n  }\n  //if student is selected, add it to the studentsID array\n  handleCheckboxChange = (event) => {\n    let newArray = [...this.state.studentsID, event.target.id];\n\n    if (this.state.studentsID.includes(event.target.id)) {\n      newArray = newArray.filter((day) => day !== event.target.id);\n    }\n    this.setState({\n      studentsID: newArray,\n    });\n  };\n\n  //method to update the state variables with the user inputs\n  handleClassInput = (e) => {\n    const name = e.target.name;\n\n    const value = e.target.value;\n\n    this.setState({ [name]: value });\n    console.log(\"Name: \" + name + \"value:\" + value);\n  };\n  //method to add class to the database\n  handleAddClass= () => {\n    const db = getDatabase();\n    set(ref(db, \"classes/\"+this.state.classID), {\n      classID: this.state.classID,\n      description: this.state.description,\n      meetingDates: this.state.meetingDates,\n      name: this.state.title,\n      published: this.state.published,\n      roomNumber: this.state.roomNumber,\n      seats: this.state.seats,\n      section: this.state.section,\n      session: this.state.session,\n      students: this.state.studentsID,\n      teacherID: this.props.match.params.euid,\n      classColor:this.state.classColor\n    }).then(() => {\n          \n      window.location.reload(false);\n    }).catch((error) => {\n      console.log(\"Failed to save data new class!\" + error);\n    });\n  }\n  handleColorCode =(colorValue)  =>{\n    this.setState({classColor: colorValue});\n}\n  //get List of students\n\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let studentList = [];\n\n    //get list of students\n    get(child(dbRef, `users`))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              studentList.push(itemVal);\n            });\n            this.setState({ studentList: studentList });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n      \n  }\n  \n  render() {\n    //create UI to list list of students\n    const studentListUI = this.state.studentList.map((student_item) => (\n      <ListGroup.Item as=\"li\">\n        <Form.Check\n          inline\n          type=\"checkbox\"\n          onChange={this.handleCheckboxChange}\n          id={student_item.euid}\n          checked={this.state.studentsID.includes(student_item.euid)}\n        />\n        {student_item.firstname} -- {student_item.euid}\n      </ListGroup.Item>\n    ));\n    //\n    return (\n      <div>\n        <Sidenav role=\"teacher\"  euid={this.props.match.params.euid}/>\n        <Container>\n          <Row className=\"theme_body\">\n            <Col>\n              {\" \"}\n              <div className=\"big-title\">\n                <h3 className=\"big_title\">Classes</h3>\n\n                <div>\n               \n                  <ManageClasses teacherID={this.state.teacherID}></ManageClasses>\n                </div>\n              </div>\n            </Col>\n            <Col>\n              {\" \"}\n              <div className=\"big-title\">\n                <h3 className=\"big_title\">New Classes</h3>\n              \n                <Form    onSubmit={this.handleAddClass}>\n                <Form.Group id=\"classID\">\n                    <Form.Label>Class Code</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"classID\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"title\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"title\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                       as=\"textarea\"\n                    \n                       style={{ height: '70px' }}\n                      name=\"description\"\n                      maxLength= \"124\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"section\">\n                    <Form.Label>Section</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"section\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"session\">\n                    <Form.Label>Session</Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      name=\"session\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"roomNumber\">\n                    <Form.Label>Room Number</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"roomNumber\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"seats\">\n                    <Form.Label>Seats</Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      name=\"seats\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"meetingDates\">\n                    <Form.Label>Meeting Day</Form.Label>\n                 \n                    <Form.Select   name=\"meetingDay\" defaultValue=\"\"  required\n                      onChange={this.handleClassInput}>\n        <option>Choose...</option>\n        <option value=\"MWF\">MWF</option>\n        <option value=\"TTH\">TTH</option>\n      </Form.Select>\n                  </Form.Group>\n                  <Form.Group id=\"class-color\">\n                    <Form.Label>Pick a color</Form.Label>\n                \n                   <ColorPicker onSelectcolor={this.handleColorCode}></ColorPicker>\n              \n                   <Button\n                      variant=\"outline-secondary\" className=\"add-student-btn\"\n                      onClick={() => this.handleModalShowHide()}\n                    >\n                      Add Students\n                    </Button>\n                  </Form.Group>\n                  <Form.Group id=\"action\">\n                   \n                    <Button\n                      className=\"w-100 btn-secondary\"\n                      size=\"lm\"\n                      type=\"submit\"\n                   \n                    >\n                      Save\n                    </Button>\n                  </Form.Group>\n                </Form>\n              </div>\n            </Col>\n            <Modal show={this.state.showHide}>\n              <Modal.Header\n                closeButton\n                onClick={() => this.handleModalShowHide()}\n              >\n                <Modal.Title>Students</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>{studentListUI}</Modal.Body>\n              <Modal.Footer>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => this.handleModalShowHide()}\n                >\n                  Close\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={() => this.handleModalShowHide()}\n                >\n                  Save Changes\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import { React, useState, Component }  from \"react\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport Footer from \"../Footer\";\r\nimport ClassNav from \"../Classes/ClassNav\";\r\nimport { Container, Row, Col , Table, Card} from \"react-bootstrap\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\n//import { Link, useHistory } from \"react-router-dom\";\r\nimport \"../../css/style.css\";\r\n\r\n\r\nexport default class Grades extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { classTitle: \"\" ,classSection :\"\" };\r\n      }\r\n      componentDidMount() {\r\n        const dbRef = ref(getDatabase());\r\n    \r\n        //get  class title\r\n        get(child(dbRef, \"classes/\" + this.props.match.params.classId))\r\n          .then(\r\n            (snapshot) => {\r\n              if (snapshot.exists()) {\r\n              \r\n                if (\r\n                  this.props.match.params.classId == snapshot.child(\"classID\").val()\r\n                ) {\r\n                  this.setState({ classTitle: snapshot.child(\"name\").val() });\r\n                  this.setState({ classSection: snapshot.child(\"section\").val() });\r\n                }\r\n              } else {\r\n                console.log(\"No data available\");\r\n              }\r\n            },\r\n            {\r\n              onlyOnce: true,\r\n            }\r\n          )\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      }\r\n\r\n    render() {\r\n    return(\r\n        <>\r\n        <Sidenav euid={this.props.match.params.euid} isActive=\"2\"/>\r\n\r\n        <Container>\r\n\r\n          <Row className=\"theme_body\">\r\n\r\n            <Col xs lg=\"2\">\r\n            <ClassNav   euid={this.props.match.params.euid} classId={this.props.match.params.classId} isActive=\"2\"></ClassNav>\r\n            </Col>\r\n\r\n            <Col>\r\n            <h3 className=\"big_title\">{this.state.classTitle} Section {this.state.classSection}</h3>\r\n            <Row>\r\n            <Col lg= {6} md ={12}>\r\n                <Table striped hover size =\"sm\" className=\"gradesTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Assignment Name</th>\r\n                            <th>Due Date</th>\r\n                            <th>Score</th>\r\n                            <th>Out of</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>One</td>\r\n                            <td>12/12/1212</td>\r\n                            <td>1</td>\r\n                            <td>1</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Two</td>\r\n                            <td>temp</td>\r\n                            <td>1</td>\r\n                            <td>1</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Three</td>\r\n                            <td>temp</td>\r\n                            <td>1</td>\r\n                            <td>1</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n            <Col lg={{ span: 4 , offset: 1 }} md={12}>\r\n                <Card>\r\n                <h4>Grade Distribution</h4>\r\n                \r\n                </Card>\r\n            </Col>\r\n            </Row>\r\n            \r\n            </Col>\r\n\r\n          </Row>\r\n\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n\r\n        </Container>\r\n        \r\n        </>\r\n    );\r\n    }\r\n}","import React, { Component } from 'react'\nimport \"font-awesome/css/font-awesome.min.css\";\nimport ListGroup from \"react-bootstrap/Accordion\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport { Link } from \"react-router-dom\";\n\nexport default class ListAssignmentByClass extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {assignmentList : [] };\n\n        }\n        componentDidMount() {\n            \n            const dbRef = ref(getDatabase());\n            let assignmentList = [];\n           \n\n    //get list of assignments\n    get(child(dbRef, `assignments`)).then((snapshot) => {\n     \n      let classID = this.props.classID;\n      console.log(\"searching for assignments\"+classID);\n      if (snapshot.exists()) {\n        snapshot.forEach(function (item) {\n        \n          var itemVal = item.val();\n         // console.log(\"found 1\"+itemVal.classID);\n         //itemVal.published == 1\n          if(itemVal.classID == classID )\n          {\n           \n            assignmentList.push(itemVal);\n          }\n        \n         \n        });\n        this.setState({ assignmentList: assignmentList });\n      } else {\n        console.log(\"No data available\");\n      }\n    }, {\n      onlyOnce: true\n    }).catch((error) => {\n      console.error(error);\n    });\n  }\n\n            \n        \n    render() {\n        \n       \n        return (\n           \n            this.state.assignmentList.map((assignment_item) =>\n              <div className=\"assignments-list\">\n       \n        <ListGroup>\n          <ListGroup.Item>\n          <i className=\"fa fa-pencil-square-o\"></i>\n              <Link\n                to={`/assignmentDetails/${assignment_item.assignmentID}/${this.props.classID}/${this.props.euid}`}\n              >\n                {assignment_item.title}\n         </Link>\n         <br/>\n         <i className=\"fa fa-calendar-plus-o\"></i> Due Date :  <span Style=\"color:red\">{assignment_item.dueDate}</span>|  Possible points :{assignment_item.points} \n          </ListGroup.Item>\n        </ListGroup>\n            </div>\n               ));\n        \n    }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ClassNav from \"../Classes/ClassNav\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\n\nimport ListAssignmentByClass from \"./ListAssignmentByClass\";\nexport default class AssignmentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { classTitle: \"\" ,classSection :\"\" };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n\n    //get  classe title\n\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n          \n            if (\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\n            ) {\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\n              this.setState({ classSection: snapshot.child(\"section\").val() });\n            }\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n    \n       <Sidenav euid={this.props.match.params.euid}/>\n        <Container>\n          <Row className=\"theme_body\">\n            <Col xs lg=\"2\">\n          \n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"3\"></ClassNav>\n            </Col>\n            <Col> <h3 className=\"big_title\">Assignments for {this.state.classTitle} Section {this.state.classSection}</h3>\n           \n            <ListAssignmentByClass classID={this.props.match.params.classId} euid={this.props.match.params.euid}></ListAssignmentByClass>\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ClassNav from \"../Classes/ClassNav\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\n\nexport default class PeopleByClass extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { classTitle: \"\" ,classSection :\"\" };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n\n    //get  classe title\n\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n          \n            if (\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\n            ) {\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\n              this.setState({ classSection: snapshot.child(\"section\").val() });\n            }\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n    \n       <Sidenav euid={this.props.match.params.euid}/>\n        <Container>\n          <Row className=\"theme_body\">\n            <Col xs lg=\"2\">\n          \n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"5\"></ClassNav>\n            </Col>\n            <Col> <h3 className=\"big_title\">People for {this.state.classTitle} Section {this.state.classSection}</h3>\n           \n         TODO\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ClassNav from \"../Classes/ClassNav\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\n\nexport default class AttendanceByClass extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { classTitle: \"\" ,classSection :\"\" };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n\n    //get  classe title\n\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n          \n            if (\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\n            ) {\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\n              this.setState({ classSection: snapshot.child(\"section\").val() });\n            }\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n    \n       <Sidenav euid={this.props.match.params.euid}/>\n        <Container>\n          <Row className=\"theme_body\">\n            <Col xs lg=\"2\">\n          \n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"4\"></ClassNav>\n            </Col>\n            <Col> <h3 className=\"big_title\">Attendances for {this.state.classTitle} Section {this.state.classSection}</h3>\n           \n         TODO\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Table,\n  DropdownButton,\n  Dropdown,\n  Button,\n  Modal,\n  Form,\n} from \"react-bootstrap\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\n\n\nexport default class ManageAssignment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      assignmentList : [],\n      showHide: false,\n      openedDialog: -1,\n      actionType: \"\",\n      assignmentID: \"\",\n      classID: \"\",\n      className: \"\",\n      description: \"\",\n      dueDate: \"\",\n      points: \"\",\n      published: 0,\n      summary: \"\",\n      title: \"\",\n      classList: [],\n      teacherID: this.props.teacherID,\n    };\n  }\n\n  openModal = (assignmentid, actionType) => {\n    this.setState({\n      openedDialog: assignmentid,\n      actionType: actionType,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      openedDialog: null,\n    });\n  };\n  handleColorCode = (colorValue) => {\n    this.setState({ classColor: colorValue });\n  };\n    //method to update the state variables with the user inputs\n    handleAssignmentInput = (e) => {\n      const name = e.target.name;\n  \n      const value = e.target.value;\n  \n      this.setState({ [name]: value });\n      console.log(\"Name: \" + name + \"value:\" + value);\n    };\n  //handle popup\n  handleModalShowHide() {\n    this.setState({ showHide: !this.state.showHide });\n  }\n  //method to update assignment to the database\n  handleUpdateAssignment = (assignmentid) => {\n    const db = getDatabase();\n    set(ref(db, \"assignments/\" + assignmentid), {\n      assignmentID:assignmentid,\n      description: document.getElementById('description_Val'+assignmentid).value,\n      dueDate:document.getElementById('duedate_Val'+assignmentid).innerText,\n      title:document.getElementById('title_Val'+assignmentid).value,\n      published:1,\n      points: document.getElementById('points_Val'+assignmentid).value,\n      summary: document.getElementById('summary_Val'+assignmentid).value,\n      classID: document.getElementById('classID_val'+assignmentid).value,\n      teacherID: this.props.teacherID\n    })\n      .then(() => {\n        window.location.reload(false);\n      })\n      .catch((error) => {\n        console.log(\"Failed to save data new class!\" + error);\n      });\n  };\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let classList = [];\n    let assignmentList = [];\n    let teacher = this.props.teacherID;\n   \n    //get list of classes\n    get(child(dbRef, `classes`))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n          \n              var itemVal = item.val();\n              console.log(\"Teacher ID\" + itemVal.teacherID + \"---\" + teacher);\n              if (itemVal.teacherID == teacher) {\n                console.log(\"Teacher ID\" + itemVal.teacherID);\n                classList.push(itemVal);\n              }\n            });\n            // this.setState({nb_classes: nb_classes});\n            this.setState({ classList: classList });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n\n     //get list of assignments\n     get(child(dbRef, `assignments`))\n     .then(\n       (snapshot) => {\n         if (snapshot.exists()) {\n           snapshot.forEach(function (item) {\n         \n             var itemVal = item.val();\n            \n             if (itemVal.teacher == teacher) {\n            \n               assignmentList.push(itemVal);\n             }\n           });\n           // this.setState({nb_classes: nb_classes});\n           this.setState({ assignmentList: assignmentList });\n         } else {\n           console.log(\"No data available\");\n         }\n       },\n       {\n         onlyOnce: true,\n       }\n     )\n     .catch((error) => {\n       console.error(error);\n     });\n\n  \n  }\n\n  render() {\n  \n    return (\n      <div>\n      \n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Class</th>\n              <th>Assignment</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.assignmentList.map((assignment_item) => (\n              <tr>\n                 \n                <td>{assignment_item.assignmentID}</td>\n                <td>{assignment_item.classID}</td>\n                <td>{assignment_item.title}</td>\n                <td width=\"37%\">\n                  {\" \"}\n                  <Button\n                    variant=\"secondary class-more-btn\"\n                    onClick={() =>\n                      this.openModal(assignment_item.assignmentID, \"details\")\n                    }\n                  >\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\n                    Details\n                  </Button>{\" \"}\n                  <DropdownButton title=\"Manage\" >\n                    <Dropdown.Item\n                      eventKey=\"1\"\n                      onClick={() =>\n                        this.openModal(assignment_item.assignmentID, \"update\")\n                      }\n                    >\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\n                      Update\n                    </Dropdown.Item>\n                   \n                    <Dropdown.Item eventKey=\"2\">\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\n                    </Dropdown.Item>\n                  </DropdownButton>\n                </td>\n                <Modal\n                  show={this.state.openedDialog === assignment_item.assignmentID}\n                  onHide={this.closeModal}\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>{assignment_item.title}</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                  <Form  onSubmit={() => this.handleUpdateAssignment(assignment_item.assignmentID)}>\n                <Form.Group id=\"classID\">\n                  \n                  <Form.Label>Class Name</Form.Label>\n                  <Form.Control\n                      type=\"text\"\n                      name=\"classID\"\n                      id= \"classID_Val\"{...assignment_item.assignmentID}\n                      value= {assignment_item.classID}\n                      required\n                      onChange={this.handleAssignmentInput}\n                      readOnly=\"true\"\n                    ></Form.Control>                  \n                    </Form.Group>\n           \n                  <Form.Group id=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"title\"\n                      id= \"title_Val\"{...assignment_item.assignmentID}\n                      value= {assignment_item.title}\n                      required\n                      onChange={this.handleAssignmentInput}\n                      readOnly={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"description\"\n                      id= \"description_Val\"{...assignment_item.assignmentID}\n                      value= {assignment_item.description}\n                      required\n                      onChange={this.handleAssignmentInput}\n                      readOnly={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"summary\">\n                    <Form.Label>Summary</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      name=\"summary\"\n                      id= \"summary_Val\"{...assignment_item.assignmentID}\n                      style={{ height: '100px' }}\n                      value= {assignment_item.summary}\n                      required\n                      onChange={this.handleAssignmentInput}\n                      readOnly={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"duedate\">\n                    <Form.Label>Due Date</Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      name=\"duedate\"\n                      id= \"duedate_Val\"{...assignment_item.assignmentID}\n                      value= {assignment_item.dueDate}\n                      required\n                      onChange={this.handleAssignmentInput}\n                      readOnly={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"points\">\n                    <Form.Label>Points</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"points\"\n                      id= \"points_Val\"{...assignment_item.assignmentID}\n                      value= {assignment_item.points}\n                      required\n                      onChange={this.handleAssignmentInput}\n                      readOnly={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                    ></Form.Control>\n                  </Form.Group>\n<Form.Group id=\"published\">\n\n<Form.Check\n        type=\"checkbox\"\n        id= \"published\"{...assignment_item.assignmentID}\n        className=\"mb-2\"\n        label=\"Published\"\n      />\n  </Form.Group>\n                \n                </Form>\n                  </Modal.Body>\n                  <Modal.Footer>\n                    <Button    disabled={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                      variant=\"primary\"\n                     type = \"submit\"\n                    >\n                      Save Changes\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Container,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ListGroup,\n} from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ManageAssignments from \"./ManageAssignment\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\n\nexport default class AssignmentNew extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showHide: false,\n      openedDialog: -1,\n      assignmentID: \"\",\n      classID: \"\",\n      className: \"\",\n      description: \"\",\n      duedate: \"\",\n      points: \"\",\n      published: 0,\n      summary: \"\",\n      title: \"\",\n      classList: [],\n      teacherID: this.props.match.params.euid,\n    };\n  }\n\n  //handle the student list popup\n  handleModalShowHide() {\n    this.setState({ showHide: !this.state.showHide });\n  }\n  \n  //method to update the state variables with the user inputs\n  handleAssignmentInput = (e) => {\n    const name = e.target.name;\n\n    const value = e.target.value;\n\n    this.setState({ [name]: value });\n   // console.log(\"Name: \" + name + \"value:\" + value);\n  };\n  //method to add Assignment to the database\n  handleAddAssignment = (event) => {\n    const db = getDatabase();\n    set(ref(db, \"assignments/\" + this.state.assignmentID), {\n      assignmentID: this.state.assignmentID,\n      description: this.state.description,\n      title: this.state.title,\n      classID: this.state.classID,\n      dueDate: this.state.duedate,\n      published: this.state.published,\n      points: this.state.points,\n      summary: this.state.summary,\n      teacher: this.props.match.params.euid,\n    })\n      .then(() => {\n        window.location.reload(false);\n      })\n      .catch((error) => {\n        console.log(\"Failed to save data new Assignment!\" + error);\n      });\n      event.preventDefault();\n  };\n\n  //get List of classes\n\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let classList = [];\n\n    //get list of classes\n    get(child(dbRef, `classes`))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              classList.push(itemVal);\n            });\n            this.setState({ classList: classList });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n          //create nav nodes for classes\n          const listclasses = this.state.classList.map((class_item) =>\n        \n          <option value={class_item.classID}>\n            {class_item.classID} -- {class_item.name} </option>\n      );\n    return (\n      <div>\n        <Sidenav role=\"teacher\" euid={this.props.match.params.euid} />\n        <Container>\n          <Row className=\"theme_body\">\n            <Col>\n              {\" \"}\n              <div className=\"big-title\">\n                <h3 className=\"big_title\">Assignments</h3>\n\n                <div>\n                  <ManageAssignments\n                    teacherID={this.state.teacherID}\n                  ></ManageAssignments>\n                </div>\n              </div>\n            </Col>\n            <Col>\n              {\" \"}\n              <div className=\"big-title\">\n                <h3 className=\"big_title\">New Assignments</h3>\n                {this.state.description}\n                <Form  onSubmit={this.handleAddAssignment}>\n                <Form.Group id=\"classID\">\n                  \n                  <Form.Label>Class Name</Form.Label>\n                <Form.Select  name= \"classID\" aria-label=\"dropdown list of classes\"   onChange={this.handleAssignmentInput} required>\n                <option value=\"\">\n         Select Class</option>\n                  {listclasses}\n                  </Form.Select>\n                  </Form.Group>\n                <Form.Group id=\"assignmentID\">\n                  \n                    <Form.Label>Assignment Code</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"assignmentID\"\n                      required\n                      onChange={this.handleAssignmentInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"title\"\n                      required\n                      onChange={this.handleAssignmentInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"description\"\n                      required\n                      onChange={this.handleAssignmentInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"summary\">\n                    <Form.Label>Summary</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      name=\"summary\"\n                      style={{ height: '100px' }}\n                      required\n                      onChange={this.handleAssignmentInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"duedate\">\n                    <Form.Label>Due Date</Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      name=\"duedate\"\n                      required\n                      onChange={this.handleAssignmentInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"points\">\n                    <Form.Label>Points</Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      name=\"points\"\n                      required\n                      onChange={this.handleAssignmentInput}\n                    ></Form.Control>\n                  </Form.Group>\n<Form.Group id=\"published\">\n\n<Form.Check\n        type=\"checkbox\"\n        id=\"published\"\n        className=\"mb-2\"\n        label=\"Published\"\n      />\n  </Form.Group>\n                  <Form.Group id=\"action\">\n                    <Button\n                      className=\"w-100 btn-secondary\"\n                      size=\"lm\"\n                      type=\"submit\"\n                    >\n                      Save\n                    </Button>\n                  </Form.Group>\n                </Form>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React  from \"react\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport RessourceDetail from \"./Modules/Ressources/RessourceDetail\";\nimport {Switch, Route} from 'react-router-dom';\nimport Dashboard from \"./Dashboard\";\nimport ClassDetails from \"./Classes/ClassDetails\";\nimport AssignmentDetails from \"./Assignments/AssignmentDetails\";\nimport DashboardTeacher from \"./DashboardTeacher\";\nimport ClassNew from \"./Classes/ClassNew\";\nimport Grades from \"./Grades/Grades\";\nimport AssignmentList from \"./Assignments/AssignmentList\";\nimport PeopleByClass from \"./Attendances/PeopleByClass\";\nimport AttendanceByClass from \"./Attendances/AttendanceByClass\";\nimport AssignmentNew from \"./Assignments/AssignmentNew\";\n\nfunction App() {\n  return (\n\n  \n    <Switch>\n      <Route path=\"/\" component={Login} exact/>\n      <Route path=\"/Register\" component={Register}/>\n      <Route path=\"/Dashboard/:euid\" component={Dashboard}/>\n      <Route path=\"/DashboardTeacher/:euid\" component={DashboardTeacher}/>\n      <Route path=\"/ressourceDetails/:ressourceId/:moduleId/:classId/:euid\" component={RessourceDetail}/>\n      <Route path=\"/classDetails/:classId/:euid\" component={ClassDetails}/>\n      <Route path=\"/newClass/:euid/\" component={ClassNew}/>\n      <Route path=\"/manageAssignment/:euid/\" component={AssignmentNew}/>\n\n      <Route path=\"/assignmentDetails/:assignmentID/:classId/:euid\" component={AssignmentDetails} />\n      <Route path=\"/assignmentListsByClass/:classId/:euid\" component={AssignmentList} />\n      <Route path=\"/attendances/:classId/:euid\" component={AttendanceByClass} />\n      <Route path=\"/people/:classId/:euid\" component={PeopleByClass} />\n      <Route path=\"/Grades/:classId/:euid\" component={Grades}/>\n      <Route component={Error} />\n    </Switch>\n\n \n    \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport App from './components/App';\nimport './css/style.css'; \nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}