{"version":3,"sources":["firebase.js","img/logo001a.png","components/Register.js","components/Login.js","components/Footer.js","img/logo-nav.png","components/Sidenav.js","components/Classes/ClassNav.js","components/Modules/Ressources/RessourceDetail.js","components/Classes/ClassItem.js","components/Classes/ListClasses.js","components/Assignments/Assignments.js","components/Dashboard.js","components/Modules/Ressources/RessourceItem.js","components/Modules/Ressources/ListRessources.js","components/Modules/ModuleItem.js","components/Modules/ListModules.js","components/Classes/ClassDetails.js","components/Assignments/AssignmentDetails.js","components/DashboardTeacher.js","components/Tools/ColorPicker.js","components/Classes/ManageClasses.js","components/Classes/ClassNew.js","components/Grades/Grades.js","components/Assignments/ListAssignmentByClass.js","components/Assignments/AssignmentList.js","components/Attendances/PeopleByClass.js","components/Attendances/AttendanceByClass.js","components/Assignments/ManageAssignment.js","components/Assignments/AssignmentNew.js","components/Modules/ManageModules.js","components/Modules/ModuleNew.js","components/Attendances/RollCall.js","components/App.js","index.js"],"names":["initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Register","createBrowserHistory","props","handleAddUser","errorlist","state","uEuid","length","uFullName","db","getDatabase","bcrypt","hash","uPassword","then","hashpassword","set","ref","euid","fullName","dateofbirth","uDateOfBirth","password","history","push","catch","error","console","log","document","getElementById","textContent","handleUserInput","e","name","target","value","setState","validateField","uCPassword","formErrors","dateOfBirth","passwordConfirm","dateOfBirthValid","passwordValid","formValid","fieldName","fieldValidationErrors","this","dbValid","fullNameValid","euidValid","match","validateForm","Container","className","style","maxWidth","src","logo","alt","Card","Body","class","Style","id","Form","Group","errorClass","Label","for","Control","type","required","onChange","Button","size","onClick","disabled","to","Component","LogIn","useState","setuEuid","setuPassword","useHistory","clearErrorMessage","invalidLoginMessage","placeholder","dbRef","get","child","snapshot","exists","compare","val","err","result","role","backgroundColor","textAlign","padding","position","left","bottom","height","width","phantom","display","Footer","children","Sidenav","classList","assignmentList","dashboardlink","currentuser","forEach","item","itemVal","teacherID","classID","onlyOnce","title","listclasses","map","class_item","NavDropdown","Item","section","courseName","listassignments","assignment_item","href","assignmentID","teacher","Navbar","bg","expand","Brand","Toggle","Collapse","Nav","ClassNav","defaultActiveKey","Link","classId","isActive","RessourceDetail","description","ressourceID","params","ressourceId","Row","Col","xs","lg","Breadcrumb","moduleId","active","Accordion","flush","eventKey","Header","ClassItem","students","includes","Img","variant","classColor","Title","Text","ListClasses","CardGroup","Assignments","assignmentsList","assignment","Badge","pill","dueDate","summary","Dashboard","RessourceItem","ressourceList","moduleID","ressource_item","typeID","rel","ListRessources","ModuleItem","moduleList","publishedID","module_item","ListModules","ClassDetails","classTitle","classSection","AssignmentDetails","points","DashboardTeacher","Alert","ColorPicker","selectedColour","onSelectcolor","colour","index","setSelectedColour","ManageClasses","openModal","classid","actionType","openedDialog","closeModal","handleColorCode","colorValue","handleClassInput","handleRemoveClass","window","confirm","remove","location","reload","innerText","handleUpdateClass","meetingDates","published","roomNumber","seats","session","split","show","nb_classes","showHide","studentList","studentListUI","studentsID","nbclasses","hidefeedback","Table","striped","bordered","hover","DropdownButton","Dropdown","Modal","onHide","closeButton","onSubmit","defaultValue","readOnly","maxLength","ClassNew","handleCheckboxChange","event","newArray","filter","day","handleAddClass","student_item","ListGroup","as","Check","inline","checked","firstname","Select","handleModalShowHide","Grades","gradesList","md","span","offset","ProgressBar","now","label","ListAssignmentByClass","AssignmentList","PeopleByClass","AttendanceByClass","ManageAssignment","assignmentid","handleAssignmentInput","handleUpdateAssignment","AssignmentNew","handleAddAssignment","duedate","preventDefault","ManageModules","moduleid","handleModuleInput","handleUpdateModule","getRessources","ressourcesList","sel_moduleID","handleAddRessource","ModuleNew","handleAddModule","RollCall","getListofstudents","getstudentFirstName","i","firstName","getElementsByName","innerHTML","handleRollCall","studentID","status","date","Date","today","getMonth","getFullYear","getDate","App","path","component","Login","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.0ce01326.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\n\n\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyBKrmU5GrPvh5OgcwUkU3dY-tz6na-SFFQ\",\n    authDomain: \"studentportal-d9b8c.firebaseapp.com\",\n    databaseURL: \"https://studentportal-d9b8c-default-rtdb.firebaseio.com\",\n    projectId: \"studentportal-d9b8c\",\n    storageBucket: \"studentportal-d9b8c.appspot.com\",\n    messagingSenderId: \"544699300970\",\n    appId: \"1:544699300970:web:ad86be64ecde5faf915e13\"\n  };\n  \n\n\n  const app = initializeApp(firebaseConfig);\n\n\nexport default app;","export default __webpack_public_path__ + \"static/media/logo001a.cbd003c7.png\";","import { React, Component } from \"react\";\nimport { Form, Button, Card, Container } from \"react-bootstrap\";\nimport \"../firebase\";\nimport { getDatabase, set, ref } from \"firebase/database\";\nimport { Link } from 'react-router-dom';\nimport logo from \"../img/logo001a.png\";\nimport bcrypt from \"bcryptjs\";\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default class Register extends Component {\n  \n  //Props\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uFullName: \"\",\n      uEuid: \"\",\n      uDateOfBirth: \"\",\n      uPassword: \"\",\n      uCPassword: \"\",\n      formErrors: {\n        dateOfBirth: \"\",\n        password: \"\",\n        passwordConfirm: \"\",\n        fullName: \"\",\n        euid: \"\",\n      },\n      dateOfBirthValid: false,\n      passwordValid: false,\n      formValid: false,\n    };\n  }\n\n  handleAddUser = () => {\n let errorlist =\"\";\n    //validate\n    if (this.state.uEuid.length < 6) {\n     \n      errorlist += \"\\n Please enter euid : it is too short.\";\n     \n    }\n    if (this.state.uFullName.length === 0) {\n    \n      errorlist += \"\\n Please enter FullName : it is too short.\";\n    } else {\n      const db = getDatabase();\n\n      //check if the user is already in database, \n      \n      bcrypt.hash(this.state.uPassword, 12).then((hashpassword) => {\n        set(ref(db, \"users/\" + this.state.uEuid), {\n          euid: this.state.uEuid,\n          fullName: this.state.uFullName,\n          dateofbirth: this.state.uDateOfBirth,\n          password: hashpassword,\n        })\n          .then(() => {\n          \n            this.props.history.push(\"/\",{ state: 'pass'});\n          })\n          .catch((error) => {\n            console.log(\"Data failed!\" + error);\n          });\n      });\n    }\n    var error = document.getElementById(\"errorMessage\");\n    error.textContent = errorlist;\n  };\n  handleUserInput = (e) => {\n    const name = e.target.name;\n\n    const value = e.target.value;\n    // console.log(\"name\" +name + value);\n    this.setState({ [name]: value }, () => {\n      this.validateField(name, value);\n    });\n  };\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let dbValid = this.state.uDateOfBirth;\n    let passwordValid = this.state.uPassword;\n    let fullNameValid = this.state.uFullName;\n    let euidValid = this.state.uEuid;\n\n    switch (fieldName) {\n      case \"uDateOfBirth\":\n        dbValid = value.match(\n          /^(((19|20)\\d\\d))-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$/\n        );\n\n        fieldValidationErrors.dateOfBirth = dbValid ? \"\" : \" is invalid\";\n\n        this.setState({\n          dateOfBirthValid: fieldValidationErrors.dateOfBirth.length === 0,\n        });\n        console.log(\"dateOfBirthValid :\" + this.state.dateOfBirthValid);\n        break;\n      case \"uCPassword\":\n        passwordValid = this.state.uPassword === value;\n\n        fieldValidationErrors.passwordConfirm = passwordValid\n          ? \"\"\n          : \" password not match\";\n        this.setState({ passwordValid: passwordValid });\n        break;\n      case \"uPassword\":\n        passwordValid = value.length >= 6;\n        fieldValidationErrors.password = passwordValid ? \"\" : \" is too short\";\n        break;\n      case \"uFullName\":\n        fullNameValid = value.length > 0;\n\n        fieldValidationErrors.fullName = fullNameValid\n          ? \"\"\n          : \" can not be empty\";\n        break;\n      case \"uEuid\":\n        euidValid = value.length >= 6;\n       // console.log(\"euidValid\" + euidValid);\n        fieldValidationErrors.euid = euidValid ? \"\" : \" is too short\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors: fieldValidationErrors }, this.validateForm);\n  }\n  validateForm() {\n   // console.log( \"validate : \" + this.state.dateOfBirthValid && this.state.passwordValid );\n    this.setState({\n      formValid: this.state.dateOfBirthValid && this.state.passwordValid,\n    });\n  }\n  errorClass(error) {\n    // console.log(error);\n    return error.length === 0 ? \"\" : \"has-error\";\n  }\n\n  render() {\n    return (\n     <div>\n        <Container className=\"d-flex align-item-center justify-content-center\">\n          <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n            <img\n              src={logo}\n              className=\"logo mx-auto d-block mb-3 mt-3\"\n              alt=\"Portal logo\"\n            ></img>\n            <Card className=\"login\">\n              <Card.Body>\n                <div class=\"shadow p-2 mb-3 bg-primary text-center text-white\">\n                  <h1 Style=\"font-size:26px\">Register</h1>\n                </div>\n                <div className=\"body\">\n                <div className=\"w-100 text-center mt-2 text-danger\" id=\"errorMessage\" ></div>\n                  <Form>\n                    <Form.Group\n                      id=\"fullName\"\n                      className={`${this.errorClass(\n                        this.state.formErrors.fullName\n                      )}`}\n                    >\n                      <Form.Label for=\"uFullName\">Full Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        id=\"uFullName\"\n                        name=\"uFullName\"\n                        required\n                        onChange={this.handleUserInput}\n                      ></Form.Control>\n                    </Form.Group>\n                    <Form.Group\n                      id=\"euid\"\n                      className={`${this.errorClass(\n                        this.state.formErrors.euid\n                      )}`}\n                    >\n                      <Form.Label for=\"uEuid\">EUID</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        id=\"uEuid\"\n                        name=\"uEuid\"\n                        required\n                        onChange={this.handleUserInput}\n                      ></Form.Control>\n                    </Form.Group>\n                    <Form.Group\n                      id=\"date-of-birth\"\n                      className={`${this.errorClass(\n                        this.state.formErrors.dateOfBirth\n                      )}`}\n                    >\n                      <Form.Label for=\"uDateOfBirth\">Date of Birth</Form.Label>\n                      <Form.Control\n                        type=\"date\"\n                        id=\"uDateOfBirth\"\n                        name=\"uDateOfBirth\"\n                        required\n                        onChange={this.handleUserInput}\n                      ></Form.Control>\n                    </Form.Group>\n                    <Form.Group\n                      id=\"password\"\n                      className={`${this.errorClass(\n                        this.state.formErrors.password\n                      )}`}\n                    >\n                      <Form.Label for=\"uPassword\">Password</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        id=\"uPassword\"\n                        name=\"uPassword\"\n                        required\n                        onChange={this.handleUserInput}\n                      ></Form.Control>\n                    </Form.Group>\n                    <Form.Group\n                      id=\"password-confirm\"\n                      className={`${this.errorClass(\n                        this.state.formErrors.passwordConfirm\n                      )}`}\n                    >\n                      <Form.Label for=\"uCPassword\">Password Confirmation</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        id=\"uCPassword\"\n                        name=\"uCPassword\"\n                        required\n                        onChange={this.handleUserInput}\n                      ></Form.Control>\n                    </Form.Group>\n                    <Form.Group id=\"action\">\n                  \n                      <Button\n                        className=\"w-100 btn-secondary\"\n                        size=\"lm\"\n                        type=\"Button\"\n                        onClick={this.handleAddUser}\n                        disabled={!this.state.formValid}\n                      >\n                        Sign Up\n                      </Button>\n                    </Form.Group>\n                  </Form>\n                  <div className=\"w-100 text-center mt-2\">\n                    Already have an account?\n                    <Link to=\"/\"> Log In </Link>\n                  </div>\n                \n                </div>\n              </Card.Body>\n            </Card>\n          </div>\n        </Container>\n    </div>\n    );\n  }\n}\n","import { React, useState } from \"react\";\r\nimport { Form, Button, Card, Container } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { getDatabase, get, ref, child } from \"firebase/database\";\r\nimport logo from \"../img/logo001a.png\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport default function LogIn() {\r\n  const [uEuid, setuEuid] = useState(\"\");\r\n  const [uPassword, setuPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  function clearErrorMessage() {\r\n    var error = document.getElementById(\"errorMessage\");\r\n    error.textContent = \"\";\r\n  }\r\n\r\n  function invalidLoginMessage(){\r\n    var error = document.getElementById(\"errorMessage\");\r\n    error.textContent = \"Invalid Login\";\r\n    console.log(\"Invalid Login\");\r\n  }\r\n  function handleLoginUser() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    get(child(dbRef, \"users/\" + uEuid))\r\n      .then((snapshot) => {\r\n        // checks if euid is in database\r\n        if (snapshot.exists()) {\r\n          // checks password match, if true then redirects to dashboard\r\n          bcrypt.compare(\r\n            uPassword,\r\n            snapshot.child(\"password\").val(),\r\n            function (err, result) {\r\n              if (result) {\r\n                const role = snapshot.child(\"role\").val();\r\n                const fName = snapshot.child(\"firstname\").val();\r\n                console.log(\"password same \" + result + role );\r\n                \r\n                // redirects to either student or teacher dashboard based on role\r\n                if (role == \"student\" )\r\n                {\r\n                  history.push(\"/Dashboard/\"+ uEuid);\r\n                }\r\n                else if (role == \"teacher\")\r\n                {\r\n                  history.push(\"DashboardTeacher/\" + uEuid);\r\n                }\r\n                \r\n              }// if(result)\r\n              // if password does not match, error messages displayed\r\n              else {\r\n                invalidLoginMessage();\r\n              }\r\n            }\r\n          );\r\n          if (snapshot.child(\"password\").val() === uPassword) {\r\n            history.push(\"/Dashboard\");\r\n            console.log(\"Correct password\");\r\n          }\r\n        }\r\n        // if euid is not found in database, error message is displayed\r\n        else {\r\n          invalidLoginMessage();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  } //function handleLoginUser()\r\n\r\n  return (\r\n    \r\n    <>\r\n    <noscript>Javascript must be enabled to run this app</noscript>\r\n    {}\r\n      <Container className=\"d-flex align-item-center justify-content-center\">\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <img\r\n            src={logo}\r\n            className=\"logo mx-auto d-block mb-3 mt-3\"\r\n            alt=\"Portal logo\"\r\n          ></img>\r\n\r\n          <Card className=\"login\">\r\n            <Card.Body>\r\n              <div class=\"shadow p-2 mb-3 bg-primary text-center text-white\">\r\n                <h1>Login</h1>\r\n              </div>\r\n              <div className=\"body\">\r\n                <Form.Group id=\"euid\">\r\n                  <Form.Label>EUID</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    required\r\n                    placeholder=\"EUID\"\r\n                    onChange={(e) => {\r\n                      setuEuid(e.target.value);\r\n                      clearErrorMessage();\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    required\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) => {\r\n                      setuPassword(e.target.value);\r\n                      clearErrorMessage();\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button\r\n                    className=\"w-75 mt-2\"\r\n                    type=\"Button\"\r\n                    onClick={handleLoginUser}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n\r\n                <div className=\"w-100 text-center mt-2\">\r\n                  Don't have an account?\r\n                  <Link to=\"/Register\"> Register </Link>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"w-100 text-center mt-2 text-danger\"\r\n                  id=\"errorMessage\"\r\n                ></div>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n                  }\r\n","var style = {\n    backgroundColor: \"#F8F8F8\",\n  \n    textAlign: \"center\",\n    padding: \"20px\",\n    position: \"fixed\",\n    left: \"0\",\n    bottom: \"0\",\n    height: \"60px\",\n    width: \"100%\",\n}\n\nvar phantom = {\n  display: 'block',\n  padding: '20px',\n  height: '60px',\n  width: '100%',\n}\n\nfunction Footer({ children }) {\n    return (\n        <div>\n            <div style={phantom} />\n            <div style={style}>\n              Copyright 2021\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","export default __webpack_public_path__ + \"static/media/logo-nav.2c59ed9d.png\";","import React, { Component } from 'react'\nimport { NavDropdown, Navbar, Container,Nav } from \"react-bootstrap\";\nimport   \"../firebase\";\nimport { getDatabase, ref,get,child } from \"firebase/database\";\nimport logo from \"../img/logo-nav.png\"\nimport {Link} from 'react-router-dom';\nexport default class Sidenav extends Component {\n   \n    constructor(props) {\n    \n        super(props);\n       \n        \n        this.state = {classList : [],assignmentList : [],dashboardlink :\"\",currentuser : this.props.euid}\n        }\n        componentDidMount() {\n            \n            const dbRef = ref(getDatabase());\n            let classList = [];\n            let assignmentList = [];\nlet dashboardlink =\"Dashboard\";\nlet currentuser =this.state.currentuser;\n            //get list of classes\n            get(child(dbRef, `classes`)).then((snapshot) => {\n              if (snapshot.exists()) {\n                snapshot.forEach(function(item) {\n                    var itemVal = item.val();\n                    classList.push(itemVal);\n               \n                if(itemVal.teacherID == currentuser)\n                {\n                  dashboardlink = \"DashboardTeacher\";\n                }\n               \n                   console.log(itemVal.classID);\n                });\n               \n                this.setState({ dashboardlink:dashboardlink });\n               this.setState({ classList:classList });\n    \n              } else {\n                console.log(\"No data available\");\n              }\n            }, {\n                onlyOnce: true\n              }).catch((error) => {\n              console.error(error);\n            }); \n          \n\n              //get list of assignments\n              get(child(dbRef, `assignments`)).then((snapshot) => {\n                if (snapshot.exists()) {\n                  snapshot.forEach(function(item) {\n                      var itemVal = item.val();\n                      assignmentList.push(itemVal);\n                     console.log(itemVal.title);\n                  });\n                 \n                 \n                 this.setState({ assignmentList:assignmentList });\n              \n                } else {\n                  console.log(\"No data available\");\n                }\n              }, {\n                  onlyOnce: true\n                }).catch((error) => {\n                console.error(error);\n              }); \n            \n        }\n    render() {\n        \n        //create nav nodes for classes\n        const listclasses = this.state.classList.map((class_item) =>\n        \n        <NavDropdown.Item key={class_item.classID}>\n       \n          {<Link to={`/classDetails/${class_item.classID}/${class_item.teacherID}`}>\n          {class_item.name} Section {class_item.section} - {class_item.courseName}\n     </Link>}\n          \n          </NavDropdown.Item>\n    );  \n //create nav nodes for assignments\n const listassignments = this.state.assignmentList.map((assignment_item) =>\n <NavDropdown.Item href=\"#\">\n     {<Link className=\"dropdown-item\" to={`/assignmentDetails/${assignment_item.assignmentID}/${assignment_item.classID}/${assignment_item.teacher}`}>\n       {assignment_item.title} -- Section {assignment_item.className} {assignment_item.section} - {assignment_item.courseName}\n     </Link>}\n </NavDropdown.Item>\n \n);\n        return (\n         \n             \n       \n<div id=\"slide-out\" className=\"side-nav fixed\">\n<Navbar bg=\"light\" expand=\"lg\" className=\"nav-portal\">\n  <Container>\n    \n    <Navbar.Brand href=\"#\"><img src={logo} alt=\"portal logo\" className=\"nav-logo\"></img></Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"me-auto\">\n       \n       <Link to={`/`+this.state.dashboardlink+`/`+this.props.euid} className=\"nav-link-selected\">\n   Dashboard\n </Link>\n    \n        \n         \n        \n         \n     \n       \n        <NavDropdown title=\"Classes\" id=\"basic-nav-dropdown\">\n           {listclasses} \n        </NavDropdown>\n        <NavDropdown title=\"Assignments\" id=\"basic-nav-dropdown2\">\n           {listassignments} \n        </NavDropdown>\n    \n     <Link to={`/`}  className=\"nav-link\">\n     Attendance\n   </Link>\n       <Link to={`/`}  className=\"nav-link-logout\">\n   Logout\n </Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Container>\n</Navbar>\n</div>\n\n           \n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Nav} from \"react-bootstrap\";\nimport   \"../../firebase\";\nimport {Link} from 'react-router-dom';\n\n\nexport default class ClassNav extends Component {\n\n    render() {\n  \n        return (\n        \n            <Nav defaultActiveKey=\"/\" className=\"class-nav flex-column\">\n        \n            <Nav.Link> <Link to={\"/classDetails/\"+ this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive === 1) ?\"active\": \"\"}>Modules </Link></Nav.Link>\n            <Nav.Link> <Link to={\"/Grades/\"+ this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive ==2) ?\"active\": \"\"}>Grades </Link></Nav.Link>\n            <Nav.Link> <Link to={`/assignmentListsByClass/`+this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive == 3) ?\"active\": \"\"}>Assignments </Link></Nav.Link>\n            <Nav.Link>  <Link to={\"/attendances/\"+ this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive == 4) ?\"active\": \"\"}>Attendance </Link></Nav.Link>\n            <Nav.Link> <Link to={\"/people/\"+ this.props.classId+\"/\"+this.props.euid}  className={(this.props.isActive ==5) ?\"active\": \"\"}>People </Link></Nav.Link>\n          </Nav>\n\n\n            );\n        \n    }\n}\n","import React, { Component } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport { Container, Row, Col, Breadcrumb } from \"react-bootstrap\";\nimport Footer from \"../../Footer\";\nimport Sidenav from \"../../Sidenav\";\nimport ClassNav from \"../../Classes/ClassNav\";\nimport \"../../../firebase\";\n//import \"font-awesome/css/font-awesome.min.css\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport { Link } from \"react-router-dom\";\n\nexport default class RessourceDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { description: \"\", title: \"\" };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n\n    let title = \"\";\n    let description = \"\";\n    //get list of ressources\n    get(child(dbRef, `ressources`))\n      .then(\n        (snapshot) => {\n          let ressourceID = this.props.match.params.ressourceId;\n          console.log(\"searching for ressources\" + ressourceID);\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              //  console.log(\"ressource \"+ressourceID);\n              if (itemVal.ressourceID == ressourceID) {\n                description = itemVal.description;\n                title = itemVal.title;\n              }\n            });\n            this.setState({ description: description });\n            this.setState({ title: title });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div >\n   \n       <Sidenav euid={this.props.match.params.euid} />\n        <Container>\n          <Row className=\"theme_body\">\n            <Col xs lg=\"2\">\n              <ClassNav  euid={this.props.match.params.euid} classId={this.props.match.params.classId}  isActive=\"1\"></ClassNav>\n            </Col>\n            <Col>\n              <div className=\"ressources\">\n                <Breadcrumb>\n               \n                  <Breadcrumb.Item>\n                    <Link\n                      to={`/classDetails/${this.props.match.params.classId}/${this.props.match.params.euid}`}\n                    >\n                      Class\n                    </Link>\n                  </Breadcrumb.Item>\n                  <Breadcrumb.Item>\n                    <Link\n                      to={`/classDetails/${this.props.match.params.classId}/${this.props.match.params.euid}`}\n                    >\n                      Module {this.props.match.params.moduleId}\n                    </Link>\n                  </Breadcrumb.Item>\n                  <Breadcrumb.Item active>{this.state.title}</Breadcrumb.Item>\n                </Breadcrumb>\n\n                <Accordion defaultActiveKey=\"0\" flush>\n                  <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>{this.state.title}</Accordion.Header>\n                    <Accordion.Body>{this.state.description}</Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Button, Card} from \"react-bootstrap\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport {Link} from 'react-router-dom';\n\nexport default class ClassItem extends Component {\n    constructor(props) {\n    \n        super(props);\n      \n        \n        this.state = {classList : []}\n        }\n        componentDidMount() {\n            \n            const dbRef = ref(getDatabase());\n            let classList = [];\n           \n\n    //get list of classes\n    get(child(dbRef, `classes`)).then((snapshot) => {\n      let euid = this.props.euid;\n      console.log(`object list`,   this.props.euid);\n      if (snapshot.exists()) {\n        snapshot.forEach(function (item) {\n          var itemVal = item.val();\n          console.log(\" euid:\"+ euid +  itemVal.students+ itemVal.students.includes(euid));\n          if(itemVal.teacherID == euid || itemVal.students.includes(euid)){\n          classList.push(itemVal);\n         \n          }\n        });\n        this.setState({ classList: classList });\n      } else {\n        console.log(\"No data available\");\n      }\n    }, {\n      onlyOnce: true\n    }).catch((error) => {\n      console.error(error);\n    });\n  }\n\n            \n        \n    render() {\n        \n       \n        return (\n            \n            this.state.classList.map((class_item) =>\n                   <div>\n                \n                <Card style={{ width: '18rem','marginRight': '20px' }}>\n                  \n  <Card.Img variant=\"top\" alt=\"Class\" className=\"class_img\" Style={\"Background-color:\"+class_item.classColor}  />\n  <Card.Body>\n    <Card.Title>{class_item.name}</Card.Title>\n    <Card.Text>\n    {class_item.description}\n    </Card.Text>\n    <Button variant=\"primary class-more-btn\"><Link to={`/classDetails/${class_item.classID}/${this.props.euid}`}>\n    <i class=\"fa fa-angle-double-right\"></i>  Access\n          </Link></Button>         \n  </Card.Body>\n</Card>\n            </div>\n               ));\n        \n    }\n}\n","import React, { Component } from 'react'\nimport { CardGroup} from \"react-bootstrap\";\nimport   \"../../firebase\";\n\nimport ClassItem from './ClassItem';\n\nexport default class ListClasses extends Component {\n\n    render() {\n        \n       \n        return (\n            <CardGroup>\n       \n                <ClassItem role={this.props.role} euid={this.props.euid}></ClassItem>\n            </CardGroup>\n\n\n            );\n        \n    }\n}\n","import React, { Component } from 'react';\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child } from \"firebase/database\"\nimport \"../../css/assignmentStyle.css\";\nimport { Link } from 'react-router-dom';\nimport { Badge, Button } from \"react-bootstrap\";\n\nexport default class Assignments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { assignmentsList: [] };\n    }\n\n    componentDidMount() {\n        const dbRef = ref(getDatabase());\n        let assignmentList = [];\n\n        // Get list of assignments\n        get(child(dbRef, 'assignments'))\n            .then(assignment => {\n                if (assignment.exists()) {\n                    assignment.forEach(item => {\n                        let itemVal = item.val();\n                        assignmentList.push(itemVal);\n                        console.log(itemVal.title);\n                    });\n\n                    this.setState({ assignmentsList: assignmentList });\n                } else {\n                    console.log(\"No assignemnts found\");\n                }\n            }, {\n                onlyOnce: true\n            }).catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        // Creates assignemnts cards\n        return (\n            this.state.assignmentsList.map(item => \n                <div  id=\"card\">\n                    <h2 className=\"title card-title h5\">{item.title}</h2>\n                    <section>\n                    <p> <Badge pill  bg=\"success\">{item.className}</Badge> | \n                   <Badge pill  bg=\"danger\">{item.dueDate}</Badge>\n                    </p>\n                   <p> {item.summary} </p>\n                \n                      \n                    <Button variant=\"secondary class-more-btn\"><Link to={`/assignmentDetails/${item.assignmentID}/${item.classID}/${this.props.euid}`}>+ More</Link></Button>\n                    </section>\n                </div>\n            )\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport Footer from \"./Footer\";\nimport Sidenav from \"./Sidenav\";\nimport ListClasses from \"./Classes/ListClasses\";\nimport Assignments from \"./Assignments/Assignments\";\nexport default class Dashboard extends Component {\n  render() {\n    return (\n      <div>\n            <Sidenav role=\"student\" euid={this.props.match.params.euid}/>\n        <Container>\n        \n          \n        \n          <Row className=\"theme_body\">\n          <div className=\"big-title\">\n\t\t      <h3 className=\"big_title\">Classes</h3>\n     \n                <div> <ListClasses role=\"student\" euid= {this.props.match.params.euid}></ListClasses></div>\n</div>\n<div className=\"big-title\">\n\t\t      <h3 className=\"big_title\">Assignments</h3>\n\t\t\t\n                <div className=\"assignment-cards\"> <Assignments euid= {this.props.match.params.euid} /></div>\n</div>\n          </Row>\n          <Row>\n              <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ListGroup from \"react-bootstrap/Accordion\";\n\nimport \"../../../firebase\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport { Link } from \"react-router-dom\";\n\nexport default class RessourceItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ressourceList: [] };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let ressourceList = [];\n\n    //get list of ressources\n    get(child(dbRef, `ressources`))\n      .then(\n        (snapshot) => {\n          let moduleID = this.props.moduleID;\n          console.log(\"searching for ressources\" + moduleID);\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              // console.log(\"found 1\"+itemVal.moduleID);\n              if (itemVal.moduleID == moduleID) {\n                console.log(\"found :\" + moduleID);\n                ressourceList.push(itemVal);\n              }\n            });\n            this.setState({ ressourceList: ressourceList });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return this.state.ressourceList.map((ressource_item) => (\n      <div className=\"ressources\">\n        <ListGroup>\n          <ListGroup.Item>\n            {\" \"}\n            <i\n              className={`fa fa-${\n                ressource_item.typeID === 1 ? \"file\" : \"external-link\"\n              }`}\n            ></i>\n           {/*if the ressource type is file */}\n\n            {ressource_item.typeID === 1 ? (\n              <Link\n                to={`/ressourceDetails/${ressource_item.ressourceID}/${this.props.moduleID}/${this.props.classID}/${this.props.euid}`}\n              >\n                {ressource_item.title}{\" \"}\n              </Link>\n            ) : (\n                /*if the ressource type is external link */\n              <a href={ressource_item.description} target=\"_blank\" rel=\"noreferrer\">\n                {ressource_item.title}{\" \"}\n              </a>\n            )}\n          </ListGroup.Item>\n        </ListGroup>\n      </div>\n    ));\n  }\n}\n","import React, { Component } from 'react'\nimport   \"../../../firebase\";\n\nimport Ressourcetem from './RessourceItem';\n\nexport default class ListRessources extends Component {\n\n    render() {\n        \n       \n        return (\n           <div>\n\n                <Ressourcetem classID ={this.props.classID} moduleID={this.props.moduleID} euid={this.props.euid}></Ressourcetem>\n     \n           </div>\n          \n\n\n            );\n        \n    }\n}\n","import React, { Component } from 'react'\nimport Accordion from 'react-bootstrap/Accordion'\n\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\n\nimport ListRessources from './Ressources/ListRessources';\n\nexport default class ModuleItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {moduleList : [] };\n\n        }\n        componentDidMount() {\n            \n            const dbRef = ref(getDatabase());\n            let moduleList = [];\n           \n\n    //get list of modules\n    get(child(dbRef, `modules`)).then((snapshot) => {\n     \n      let classID = this.props.classID;\n      console.log(\"searching for modules\"+classID);\n      if (snapshot.exists()) {\n        snapshot.forEach(function (item) {\n        \n          var itemVal = item.val();\n         // console.log(\"found 1\"+itemVal.classID);\n          if(itemVal.classID == classID && itemVal.publishedID == 1)\n          {\n           \n            moduleList.push(itemVal);\n          }\n        \n         \n        });\n        this.setState({ moduleList: moduleList });\n      } else {\n        console.log(\"No data available\");\n      }\n    }, {\n      onlyOnce: true\n    }).catch((error) => {\n      console.error(error);\n    });\n  }\n\n            \n        \n    render() {\n        \n       \n        return (\n           \n            this.state.moduleList.map((module_item) =>\n              <div className=\"modules\">\n            <Accordion defaultActiveKey=\"0\" flush>\n            <Accordion.Item eventKey=\"0\">\n              <Accordion.Header>{module_item.title}</Accordion.Header>\n              <Accordion.Body>\n            <ListRessources  classID={this.props.classID} moduleID={module_item.moduleID} euid={this.props.euid}></ListRessources>\n              </Accordion.Body>\n            </Accordion.Item>\n            </Accordion>\n            </div>\n               ));\n        \n    }\n}\n","import React, { Component } from 'react'\n\nimport   \"../../firebase\";\n\nimport ModuleItem from './ModuleItem';\n\nexport default class ListModules extends Component {\n\n    render() {\n        \n       \n        return (\n           <>\n\n                <ModuleItem euid={this.props.euid} classID={this.props.classID}></ModuleItem>\n     \n           </>\n          \n\n\n            );\n        \n    }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ClassNav from \"./ClassNav\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport ListModules from \"../Modules/ListModules\";\nexport default class ClassDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { classTitle: \"\" ,classSection :\"\" };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n\n    //get  classe title\n\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n          \n            if (\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\n            ) {\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\n              this.setState({ classSection: snapshot.child(\"section\").val() });\n            }\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n    \n       <Sidenav   euid={this.props.match.params.euid} />\n        <Container>\n          <Row className=\"theme_body\">\n            <Col xs lg=\"2\">\n          \n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"1\"></ClassNav>\n            </Col>\n            <Col> <h3 className=\"big_title\">{this.state.classTitle} Section {this.state.classSection}</h3>\n           \n            <ListModules classID={this.props.match.params.classId} euid={this.props.match.params.euid}></ListModules>\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport {\n  Container,\n  Row,\n  Col,\n  Breadcrumb,\n  Badge,\n  Button,\n} from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ClassNav from \"../Classes/ClassNav\";\nimport \"../../firebase\";\n//import \"font-awesome/css/font-awesome.min.css\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport { Link } from \"react-router-dom\";\n\nexport default class AssignmentDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { description: \"\", title: \"\", dueDate: \"\", className: \"\" };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n\n    let title = \"\";\n    let description = \"\";\n    let dueDate = \"\";\n    let points = \"\";\n    let className = \"\";\n    //get list of ressources\n    get(child(dbRef, `assignments`))\n      .then(\n        (snapshot) => {\n          let assignmentID = this.props.match.params.assignmentID;\n          console.log(\"searching for assignments\" + assignmentID);\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              //  console.log(\"ressource \"+ressourceID);\n              if (itemVal.assignmentID == assignmentID) {\n                description = itemVal.description;\n                title = itemVal.title;\n                dueDate = itemVal.dueDate;\n                points = itemVal.points;\n                className = itemVal.className;\n              }\n            });\n            this.setState({ description: description });\n            this.setState({ title: title });\n            this.setState({ dueDate: dueDate });\n            this.setState({ points: points });\n            this.setState({ className: className });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Sidenav euid={this.props.match.params.euid} />\n        <Container>\n          <Row className=\"theme_body\">\n            <Col xs lg=\"2\">\n              <ClassNav\n                euid={this.props.match.params.euid}\n                classId={this.props.match.params.classId}\n                isActive=\"3\"\n              ></ClassNav>\n            </Col>\n            <Col>\n              <div className=\"assignment\">\n                <Breadcrumb>\n                  <Breadcrumb.Item>\n                    <Link\n                      to={`/classDetails/${this.props.match.params.classId}/${this.props.match.params.euid}`}\n                    >\n                      Class\n                    </Link>\n                  </Breadcrumb.Item>\n                  <Breadcrumb.Item>\n                    <Link\n                      to={`/assignmentListsByClass/${this.props.match.params.classId}/${this.props.match.params.euid}`}\n                    >\n                      Assignments {this.props.match.params.moduleId}\n                    </Link>\n                  </Breadcrumb.Item>\n                  <Breadcrumb.Item active>{this.state.title}</Breadcrumb.Item>\n                </Breadcrumb>\n\n                <Accordion defaultActiveKey=\"0\" flush>\n                  <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>{this.state.title}</Accordion.Header>\n                    <Accordion.Body>\n                      <Row>\n                        <Col>\n                          <span Style=\"font-weight: bold;color: red;\">\n                            {\" \"}\n                            <i className=\"fa fa-calendar-plus-o\"></i>Due Date :\n                          </span>{\" \"}\n                          <Badge bg=\"secondary\">{this.state.dueDate}</Badge> |    <Badge bg=\"info\">{this.state.className}</Badge>\n                        </Col>\n                      </Row>\n                    \n                      <Row>\n                        <p>{this.state.description}</p>\n                      </Row>\n                      <Button variant=\"primary\">Submit assignment</Button>\n                    </Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row, Col,Alert,Button } from \"react-bootstrap\";\nimport Footer from \"./Footer\";\nimport Sidenav from \"./Sidenav\";\nimport ListClasses from \"./Classes/ListClasses\";\nimport { Link } from \"react-router-dom\";\nexport default class DashboardTeacher extends Component {\n  render() {\n    return (\n      <div>\n             <Sidenav  role=\"teacher\" euid={this.props.match.params.euid} />\n        <Container>\n        \n        \n        \n          <Row className=\"theme_body\">\n            <div>\n            <Col className=\"welcome_box\">\n<Alert key=\"welcome\" variant=\"secondary\">\n<h1  Style=\"font-size:20px\">Welcome</h1>\n<p>\n\nAww yeah, you successfully read this important alert message.\n</p>\n<hr/>\n<div className=\"d-flex justify-content-end\">\n<Button variant=\"primary\"><Link to={`/rollCall/${this.props.match.params.euid}`}  className=\"white\">\n<i class=\"fa fa-hand-paper-o\"></i> Roll Call\n          </Link></Button> <Button variant=\"primary\"><Link className=\"white\" to={`/newClass/${this.props.match.params.euid}`}>\n          <i class=\"fa fa-plus-circle\" ></i> Manage Classes\n          </Link></Button>\n          <Button variant=\"primary\"><Link className=\"white\" to={`/manageAssignment/${this.props.match.params.euid}`}>\n          <i class=\"fa fa-plus-circle\" ></i> Manage Assignments\n          </Link></Button>\n        </div>\n\n  </Alert>\n\n</Col>\n\n              </div>\n          <div className=\"big-title\">\n\t\t      <h1 className=\"big_title\">Classes</h1>\n\t\t\t\n                <div> <ListClasses role=\"teacher\" euid={this.props.match.params.euid}></ListClasses></div>\n</div>\n\n          </Row>\n          <Row>\n              <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class ColorPicker extends Component {\n    constructor(props) {\n        super(props);\n       \n    this.state = { selectedColour :\"\"\n    };\n    this.props.onSelectcolor(this.state.selectedColour);\n}\n    setSelectedColour(colour) {\n\t\tthis.setState({ selectedColour: colour });\n\t}\n    render() {\n        const defaultColours = [\n            '#FF1654',\n            '#247BA0',\n            '#70C1B3',\n            '#92b300',\n            '#CBB1DB',\n            '#C1BF70',\n            '#add8e6',\n            '#ffc1cb',\n            '#67d8f3',\n            '#f3af67'\n        ];\n        \n        return (\n           \n         \n            <ul className=\"icons\">\n                {defaultColours.map((colour, index) => {\n                    return (\n                        <li key={index} onClick={() =>{ this.setSelectedColour(colour);   this.props.onSelectcolor(colour);}}>\n                            <span className={`dot color border-radius ${this.state.selectedColour === colour ? 'selected' : ''}`} style={{ backgroundColor: colour}}></span>\n                        </li>\n                    );\n                })}\n            </ul>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport {\n  Table,\n  DropdownButton,\n  Dropdown,\n  Button,\n  Modal,\n  Form,\n  Alert,\n} from \"react-bootstrap\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child, set, remove } from \"firebase/database\";\nimport ColorPicker from \"../Tools/ColorPicker\";\nimport {Link} from 'react-router-dom';\n\nexport default class ManageClasses extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      classList: [],\n      show: false,\n      openedDialog: -1,\n      nb_classes: 0,\n      actionType: \"\",\n      classColor: \"\",\n      showHide: false,\n      studentList: [],\n      studentListUI: [],\n      studentsID: [],\n      nbclasses: 0,\n      classID: \"\",\n      description: \"\",\n      meetingDates: \"\",\n      title: \"\",\n      published: 0,\n      roomNumber: \"\",\n      seats: 0,\n      section: \"\",\n      session: 2,\n      students: [],\n      teacherID: this.props.teacherID,\n      hidefeedback: \"none\",\n    };\n  }\n\n  openModal = (classid, actionType) => {\n    this.setState({\n      openedDialog: classid,\n      actionType: actionType,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      openedDialog: null,\n    });\n  };\n  handleColorCode = (colorValue) => {\n    this.setState({ classColor: colorValue });\n  };\n  //method to update the state variables with the user inputs\n  handleClassInput = (e) => {\n    const name = e.target.name;\n\n    const value = e.target.value;\n\n    this.setState({ [name]: value });\n    console.log(\"Name: \" + name + \"value:\" + value);\n  };\n  //handle popup\n  handleModalShowHide() {\n    this.setState({ showHide: !this.state.showHide });\n  }\n\n  //method to remove class to the database\n  handleRemoveClass = (classID) => {\n    const db = getDatabase();\n    ///\n\n    if (window.confirm(\"Are you sure you wish to delete this item?\")) {\n      remove(ref(db, \"classes/\" + classID))\n        .then(() => {\n          window.location.reload(false);\n          document.getElementById(\"feedback\").style.display = \"block\";\n          document.getElementById(\"feedback\").innerText =\n            \"Class \" + classID + \" remove successfully!\";\n        })\n        .catch((error) => {\n          console.log(\n            \"Failed to remove class :\" + classID + \" error :\" + error\n          );\n        });\n    }\n\n    ///\n  };\n  //method to update class to the database\n  handleUpdateClass = (classID) => {\n    const db = getDatabase();\n    set(ref(db, \"classes/\" + classID), {\n      classID: classID,\n      description: document.getElementById(\"description_val\").value,\n      meetingDates: document.getElementById(\"meetingDates_val\").value,\n      name: document.getElementById(\"name_val\").value,\n      published: 1,\n      roomNumber: document.getElementById(\"roomNumber_val\").value,\n      seats: document.getElementById(\"seats_val\").value,\n      section: document.getElementById(\"section_val\").value,\n      session: document.getElementById(\"session_val\").value,\n      students: document.getElementById(\"studentIDs_val\").value.split(\",\"),\n      teacherID: this.props.teacherID,\n      classColor: this.state.classColor,\n    })\n      .then(() => {\n        window.location.reload(false);\n      })\n      .catch((error) => {\n        console.log(\"Failed to save data new class!\" + error);\n      });\n  };\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let classList = [];\n    let teacher = this.props.teacherID;\n\n    //get list of classes\n    get(child(dbRef, `classes`))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              console.log(\"Teacher ID\" + itemVal.teacherID + \"---\" + teacher);\n              if (itemVal.teacherID == teacher) {\n                console.log(\"Teacher ID\" + itemVal.teacherID);\n                classList.push(itemVal);\n              }\n            });\n            // this.setState({nb_classes: nb_classes});\n            this.setState({ classList: classList });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Alert\n          key=\"feedback\"\n          id=\"feedback\"\n          variant=\"\"\n          Style=\"display :\"\n          {...this.state.hidefeedback}\n        ></Alert>\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Class</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.classList.map((class_item) => (\n              <tr>\n                <td>{class_item.classID}</td>\n                <td>{class_item.name}</td>\n                <td width=\"37%\">\n                  {\" \"}\n                  <Button\n                    variant=\"primary class-more-btn\"\n                    onClick={() =>\n                      this.openModal(class_item.classID, \"details\")\n                    }\n                  >\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\n                    Details\n                  </Button>{\" \"}\n                  <DropdownButton title=\"Manage\" id=\"bg-nested-dropdown\">\n                    <Dropdown.Item\n                      eventKey=\"1\"\n                      onClick={() =>\n                        this.openModal(class_item.classID, \"update\")\n                      }\n                    >\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\n                      Update\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\">\n                      <i class=\"fa fa-address-book\" aria-hidden=\"true\"></i> Add\n                      Student\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"3\">\n                      <i class=\"fa fa-address-book\" aria-hidden=\"true\"></i>\n                      <Link to={`/manageModules/`+class_item.classID+`/`+this.props.teacherID}>\n                      Manage Modules\n </Link> \n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      eventKey=\"2\"\n                      onClick={() => this.handleRemoveClass(class_item.classID)}\n                    >\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\n                    </Dropdown.Item>\n                  </DropdownButton>\n                </td>\n                <Modal\n                  show={this.state.openedDialog === class_item.classID}\n                  onHide={this.closeModal}\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>{class_item.name}</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                    <Form\n                      onSubmit={() =>\n                        this.handleUpdateClass(class_item.classID)\n                      }\n                    >\n                      <Form.Group id=\"name\">\n                        <Form.Label>Name</Form.Label>\n\n                        <Form.Control\n                          type=\"text\"\n                          id=\"name_val\"\n                          defaultValue={class_item.name}\n                          required\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Form.Group id=\"description\">\n                        <Form.Label>Description</Form.Label>\n\n                        <Form.Control\n                          type=\"text\"\n                          id=\"description_val\"\n                          defaultValue={class_item.description}\n                          maxLength =\"124\"\n                          required\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Form.Group id=\"section\">\n                        <Form.Label>Section</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          id=\"section_val\"\n                          defaultValue={class_item.section}\n                          required\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Form.Group id=\"session\">\n                        <Form.Label>Session</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          id=\"session_val\"\n                          required\n                          defaultValue={class_item.session}\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Form.Group id=\"roomNumber\">\n                        <Form.Label>Room Number</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          id=\"roomNumber_val\"\n                          required\n                          defaultValue={class_item.roomNumber}\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Form.Group id=\"seats\">\n                        <Form.Label>Seats</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          id=\"seats_val\"\n                          required\n                          defaultValue={class_item.seats}\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <Form.Group id=\"meetingDates\">\n                        <Form.Label>Meeting Day</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          id=\"meetingDates_val\"\n                          required\n                          defaultValue={class_item.meetingDates}\n                          readOnly={\n                            this.state.actionType === \"update\" ? false : true\n                          }\n                        ></Form.Control>\n                      </Form.Group>\n                      <input\n                        type=\"hidden\"\n                        id=\"studentIDs_val\"\n                        defaultValue={class_item.students}\n                      ></input>\n                      <Form.Group\n                        id=\"class-color\"\n                        Style={\n                          this.state.actionType === \"update\"\n                            ? \"display:block\"\n                            : \"display:none\"\n                        }\n                      >\n                        <Form.Label>Pick a color</Form.Label>\n\n                        <ColorPicker\n                          onSelectcolor={this.handleColorCode}\n                        ></ColorPicker>\n                      </Form.Group>\n                      <Button\n                        variant=\"primary\"\n                        disabled={\n                          this.state.actionType === \"update\" ? false : true\n                        }\n                        type=\"submit\"\n                      >\n                        Save Changes\n                      </Button>\n                    </Form>\n                  </Modal.Body>\n                </Modal>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Container,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ListGroup,\n} from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ManageClasses from \"./ManageClasses\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child, set, } from \"firebase/database\";\nimport ColorPicker from \"../Tools/ColorPicker\";\n\nexport default class ClassNew extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      studentList: [],\n      studentListUI: [],\n      studentsID: [],\n      classList: [],\n      showHide: false,\n      openedDialog: -1,\n      nbclasses:0,\n      classID: \"\",\n      description: \"\",\n      meetingDates: \"\",\n      title: \"\",\n      published: 0,\n      roomNumber: \"\",\n      seats: 0,\n      section: \"\",\n      session: 2,\n      classColor:\"\",\n      students: [],\n      teacherID: this.props.match.params.euid,\n    };\n  }\n\n  //handle the student list popup\n  handleModalShowHide() {\n    this.setState({ showHide: !this.state.showHide });\n  }\n  //if student is selected, add it to the studentsID array\n  handleCheckboxChange = (event) => {\n    let newArray = [...this.state.studentsID, event.target.id];\n\n    if (this.state.studentsID.includes(event.target.id)) {\n      newArray = newArray.filter((day) => day !== event.target.id);\n    }\n    this.setState({\n      studentsID: newArray,\n    });\n  };\n\n  //method to update the state variables with the user inputs\n  handleClassInput = (e) => {\n    const name = e.target.name;\n\n    const value = e.target.value;\n\n    this.setState({ [name]: value });\n    console.log(\"Name: \" + name + \"value:\" + value);\n  };\n  //method to add class to the database\n  handleAddClass= () => {\n    const db = getDatabase();\n    set(ref(db, \"classes/\"+this.state.classID), {\n      classID: this.state.classID,\n      description: this.state.description,\n      meetingDates: this.state.meetingDates,\n      name: this.state.title,\n      published: this.state.published,\n      roomNumber: this.state.roomNumber,\n      seats: this.state.seats,\n      section: this.state.section,\n      session: this.state.session,\n      students: this.state.studentsID,\n      teacherID: this.props.match.params.euid,\n      classColor:this.state.classColor\n    }).then(() => {\n          \n      window.location.reload(false);\n    }).catch((error) => {\n      console.log(\"Failed to save data new class!\" + error);\n    });\n  }\n  handleColorCode =(colorValue)  =>{\n    this.setState({classColor: colorValue});\n}\n  //get List of students\n\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let studentList = [];\n\n    //get list of students\n    get(child(dbRef, `users`))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              studentList.push(itemVal);\n            });\n            this.setState({ studentList: studentList });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n      \n  }\n  \n  render() {\n    //create UI to list list of students\n    const studentListUI = this.state.studentList.map((student_item) => (\n      <ListGroup.Item as=\"li\">\n        <Form.Check\n          inline\n          type=\"checkbox\"\n          onChange={this.handleCheckboxChange}\n          id={student_item.euid}\n          checked={this.state.studentsID.includes(student_item.euid)}\n        />\n        {student_item.firstname} -- {student_item.euid}\n      </ListGroup.Item>\n    ));\n    //\n    return (\n      <div>\n        <Sidenav role=\"teacher\"  euid={this.props.match.params.euid}/>\n        <Container>\n          <Row className=\"theme_body\">\n            <Col>\n              {\" \"}\n              <div className=\"big-title\">\n                <h3 className=\"big_title\">Classes</h3>\n\n                <div>\n               \n                  <ManageClasses teacherID={this.state.teacherID}></ManageClasses>\n                </div>\n              </div>\n            </Col>\n            <Col Style=\"Background:#eee\">\n              {\" \"}\n              <div className=\"big-title\">\n                <h3 className=\"big_title\">New Classes</h3>\n              \n                <Form    onSubmit={this.handleAddClass}>\n                <Form.Group id=\"classID\">\n                    <Form.Label>Class Code</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"classID\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"title\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"title\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                       as=\"textarea\"\n                    \n                       style={{ height: '70px' }}\n                      name=\"description\"\n                      maxLength= \"124\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"section\">\n                    <Form.Label>Section</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"section\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"session\">\n                    <Form.Label>Session</Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      name=\"session\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"roomNumber\">\n                    <Form.Label>Room Number</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"roomNumber\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"seats\">\n                    <Form.Label>Seats</Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      name=\"seats\"\n                      required\n                      onChange={this.handleClassInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"meetingDates\">\n                    <Form.Label>Meeting Day</Form.Label>\n                 \n                    <Form.Select   name=\"meetingDay\" defaultValue=\"\"  required\n                      onChange={this.handleClassInput}>\n        <option>Choose...</option>\n        <option value=\"MWF\">MWF</option>\n        <option value=\"TTH\">TTH</option>\n      </Form.Select>\n                  </Form.Group>\n                  <Form.Group id=\"class-color\">\n                    <Form.Label>Pick a color</Form.Label>\n                \n                   <ColorPicker onSelectcolor={this.handleColorCode}></ColorPicker>\n              \n                   <Button\n                      variant=\"outline-secondary\" className=\"add-student-btn\"\n                      onClick={() => this.handleModalShowHide()}\n                    >\n                      Add Students\n                    </Button>\n                  </Form.Group>\n                  <Form.Group id=\"action\"  Style=\"padding-left: 15px\">                   \n                    <Button\n                      className=\"w-100 btn-secondary\"\n                      size=\"lm\"\n                      type=\"submit\"\n                   \n                    >\n                      Save\n                    </Button>\n                  </Form.Group>\n                </Form>\n              </div>\n            </Col>\n            <Modal show={this.state.showHide}>\n              <Modal.Header\n                closeButton\n                onClick={() => this.handleModalShowHide()}\n              >\n                <Modal.Title>Students</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>{studentListUI}</Modal.Body>\n              <Modal.Footer>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => this.handleModalShowHide()}\n                >\n                  Close\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={() => this.handleModalShowHide()}\n                >\n                  Save Changes\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import { React, useState, Component }  from \"react\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport Footer from \"../Footer\";\r\nimport ClassNav from \"../Classes/ClassNav\";\r\nimport { Container, Row, Col , Table, Card, ProgressBar} from \"react-bootstrap\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport \"../../firebase\";\r\nimport \"../../css/style.css\";\r\n\r\n\r\nexport default class Grades extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { classTitle: \"\" ,classSection :\"\" };\r\n        this.state = { gradesList : [] };\r\n      }\r\n      componentDidMount() {\r\n        const dbRef = ref(getDatabase());\r\n        let gradesList = [];\r\n    \r\n        //get  class title\r\n        get(child(dbRef, \"classes/\" + this.props.match.params.classId))\r\n          .then(\r\n            (snapshot) => {\r\n              if (snapshot.exists()) {\r\n              \r\n                if (\r\n                  this.props.match.params.classId == snapshot.child(\"classID\").val()\r\n                ) {\r\n                  this.setState({ classTitle: snapshot.child(\"name\").val() });\r\n                  this.setState({ classSection: snapshot.child(\"section\").val() });\r\n                }\r\n              } else {\r\n                console.log(\"No data available\");\r\n              }\r\n            },\r\n            {\r\n              onlyOnce: true,\r\n            }\r\n          )\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n          // get assignments\r\n          get(child(dbRef, \"grades/\" + this.props.match.params.classId + \"/\" + this.props.match.params.euid))\r\n          .then(\r\n            (snapshot) => {\r\n              if (snapshot.exists()) {\r\n                console.log(\"success\");            \r\n\r\n              } else {\r\n                console.log(this.props.match.params.classId + this.props.match.params.euid);\r\n                console.log(\"No grades available\");\r\n              }\r\n            },\r\n            {\r\n              onlyOnce: true,\r\n            }\r\n          )\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      }\r\n\r\n    render() {\r\n    return(\r\n        <>\r\n        <Sidenav euid={this.props.match.params.euid} isActive=\"2\"/>\r\n\r\n        <Container>\r\n\r\n          <Row className=\"theme_body\">\r\n\r\n            <Col xs lg=\"2\">\r\n            <ClassNav   euid={this.props.match.params.euid} classId={this.props.match.params.classId} isActive=\"2\"></ClassNav>\r\n            </Col>\r\n\r\n            <Col>\r\n            <h3 className=\"big_title\">{this.state.classTitle} Section {this.state.classSection}</h3>\r\n            <Row>\r\n            <Col lg= {6} md ={12}>\r\n                <Table striped hover size =\"sm\" className=\"gradesTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Assignment Name</th>\r\n                            <th>Due Date</th>\r\n                            <th>Score</th>\r\n                            <th>Out of</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>One</td>\r\n                            <td>12/12/1212</td>\r\n                            <td>1</td>\r\n                            <td>1</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Two</td>\r\n                            <td>temp</td>\r\n                            <td>1</td>\r\n                            <td>1</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Three</td>\r\n                            <td>temp</td>\r\n                            <td>1</td>\r\n                            <td>1</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n            <Col lg={{ span: 4 , offset: 1 }} md={12}>\r\n                <Card>\r\n                <h4 className=\"mb-2 mt-2\">Grade Distribution</h4>\r\n                  <h5>A</h5>\r\n                  <ProgressBar now={60} label=\"5\" className=\"mb-2\"/>\r\n                  <h5>B</h5>\r\n                  <ProgressBar now={70} label=\"8\" className=\"mb-2\"/>\r\n                  <h5>C</h5>\r\n                  <ProgressBar now={30} label=\"3\" className=\"mb-2\"/>\r\n                  <h5>F</h5>\r\n                  <ProgressBar now={10} label=\"1\" className=\"mb-4\"/>\r\n                </Card>\r\n            </Col>\r\n            </Row>\r\n            \r\n            </Col>\r\n\r\n          </Row>\r\n\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n\r\n        </Container>\r\n        \r\n        </>\r\n    );\r\n    }\r\n}","import React, { Component } from 'react'\nimport \"font-awesome/css/font-awesome.min.css\";\nimport ListGroup from \"react-bootstrap/Accordion\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport { Link } from \"react-router-dom\";\n\nexport default class ListAssignmentByClass extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {assignmentList : [] };\n\n        }\n        componentDidMount() {\n            \n            const dbRef = ref(getDatabase());\n            let assignmentList = [];\n           \n\n    //get list of assignments\n    get(child(dbRef, `assignments`)).then((snapshot) => {\n     \n      let classID = this.props.classID;\n      console.log(\"searching for assignments\"+classID);\n      if (snapshot.exists()) {\n        snapshot.forEach(function (item) {\n        \n          var itemVal = item.val();\n         // console.log(\"found 1\"+itemVal.classID);\n         //itemVal.published == 1\n          if(itemVal.classID == classID )\n          {\n           \n            assignmentList.push(itemVal);\n          }\n        \n         \n        });\n        this.setState({ assignmentList: assignmentList });\n      } else {\n        console.log(\"No data available\");\n      }\n    }, {\n      onlyOnce: true\n    }).catch((error) => {\n      console.error(error);\n    });\n  }\n\n            \n        \n    render() {\n        \n       \n        return (\n           \n            this.state.assignmentList.map((assignment_item) =>\n              <div className=\"assignments-list\">\n       \n        <ListGroup>\n          <ListGroup.Item>\n          <i className=\"fa fa-pencil-square-o\"></i>\n              <Link\n                to={`/assignmentDetails/${assignment_item.assignmentID}/${this.props.classID}/${this.props.euid}`}\n              >\n                {assignment_item.title}\n         </Link>\n         <br/>\n         <i className=\"fa fa-calendar-plus-o\"></i> Due Date :  <span Style=\"color:red\">{assignment_item.dueDate}</span>|  Possible points :{assignment_item.points} \n          </ListGroup.Item>\n        </ListGroup>\n            </div>\n               ));\n        \n    }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ClassNav from \"../Classes/ClassNav\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\n\nimport ListAssignmentByClass from \"./ListAssignmentByClass\";\nexport default class AssignmentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { classTitle: \"\" ,classSection :\"\" };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n\n    //get  classe title\n\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n          \n            if (\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\n            ) {\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\n              this.setState({ classSection: snapshot.child(\"section\").val() });\n            }\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n    \n       <Sidenav euid={this.props.match.params.euid}/>\n        <Container>\n          <Row className=\"theme_body\">\n            <Col xs lg=\"2\">\n          \n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"3\"></ClassNav>\n            </Col>\n            <Col> <h3 className=\"big_title\">Assignments for {this.state.classTitle} Section {this.state.classSection}</h3>\n           \n            <ListAssignmentByClass classID={this.props.match.params.classId} euid={this.props.match.params.euid}></ListAssignmentByClass>\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ClassNav from \"../Classes/ClassNav\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\n\nexport default class PeopleByClass extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { classTitle: \"\" ,classSection :\"\" };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n\n    //get  classe title\n\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n          \n            if (\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\n            ) {\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\n              this.setState({ classSection: snapshot.child(\"section\").val() });\n            }\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n    \n       <Sidenav euid={this.props.match.params.euid}/>\n        <Container>\n          <Row className=\"theme_body\">\n            <Col xs lg=\"2\">\n          \n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"5\"></ClassNav>\n            </Col>\n            <Col> <h3 className=\"big_title\">People for {this.state.classTitle} Section {this.state.classSection}</h3>\n           \n         TODO\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ClassNav from \"../Classes/ClassNav\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\n\nexport default class AttendanceByClass extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { classTitle: \"\" ,classSection :\"\" };\n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n\n    //get  classe title\n\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n          \n            if (\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\n            ) {\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\n              this.setState({ classSection: snapshot.child(\"section\").val() });\n            }\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n    \n       <Sidenav euid={this.props.match.params.euid}/>\n        <Container>\n          <Row className=\"theme_body\">\n            <Col xs lg=\"2\">\n          \n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"4\"></ClassNav>\n            </Col>\n            <Col> <h3 className=\"big_title\">Attendances for {this.state.classTitle} Section {this.state.classSection}</h3>\n           \n            \n            <Col lg= {6} md ={12}>\n                <Table striped hover size =\"sm\" className=\"gradesTable\">\n                    <thead>\n                        <tr>\n                            <th>Date</th>\n                            <th>Status</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>12/12/1212</td>\n                            <td>Present</td>\n                        </tr>\n                        <tr>\n                            <td>Two</td>\n                            <td>temp</td>\n                        </tr>\n                        <tr>\n                            <td>Three</td>\n                            <td>temp</td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </Col>\n            </Col>\n          </Row>\n\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Table,\n  DropdownButton,\n  Dropdown,\n  Button,\n  Modal,\n  Form,\n} from \"react-bootstrap\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child, set, remove } from \"firebase/database\";\n\n\nexport default class ManageAssignment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      assignmentList : [],\n      showHide: false,\n      openedDialog: -1,\n      actionType: \"\",\n      assignmentID: \"\",\n      classID: \"\",\n      className: \"\",\n      description: \"\",\n      dueDate: \"\",\n      points: \"\",\n      published: 0,\n      summary: \"\",\n      title: \"\",\n      classList: [],\n      teacherID: this.props.teacherID,\n    };\n  }\n\n  openModal = (assignmentid, actionType) => {\n    this.setState({\n      openedDialog: assignmentid,\n      actionType: actionType,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      openedDialog: null,\n    });\n  };\n  handleColorCode = (colorValue) => {\n    this.setState({ classColor: colorValue });\n  };\n    //method to update the state variables with the user inputs\n    handleAssignmentInput = (e) => {\n      const name = e.target.name;\n  \n      const value = e.target.value;\n  \n      this.setState({ [name]: value });\n      console.log(\"Name: \" + name + \"value:\" + value);\n    };\n  //handle popup\n  handleModalShowHide() {\n    this.setState({ showHide: !this.state.showHide });\n  }\n\n   //method to remove class to the database\n   handleRemoveClass = (assignmentID) => {\n    const db = getDatabase();\n    ///\n\n    if (window.confirm(\"Are you sure you wish to delete this item?\")) {\n      remove(ref(db, \"assignments/\" + assignmentID))\n        .then(() => {\n          window.location.reload(false);\n          document.getElementById(\"feedback\").style.display = \"block\";\n          document.getElementById(\"feedback\").innerText =\n            \"Assignment \" + assignmentID + \" remove successfully!\";\n        })\n        .catch((error) => {\n          console.log(\n            \"Failed to remove class :\" + assignmentID + \" error :\" + error\n          );\n        });\n    }\n\n    ///\n  };\n  //method to update assignment to the database\n  handleUpdateAssignment = (assignmentid) => {\n   //alert(document.getElementById('duedate_Val').value);\n    const db = getDatabase();\n    set(ref(db, \"assignments/\" + assignmentid), {\n      assignmentID:assignmentid,\n      description: document.getElementById('description_Val').value,\n      dueDate:document.getElementById('duedate_Val').value,\n      title:document.getElementById('title_Val').value,\n      published:1,\n      points: document.getElementById('points_Val').value,\n      summary: document.getElementById('summary_Val').value,\n      classID: document.getElementById('classID_Val').value,\n      teacher: this.props.teacherID\n    })\n      .then(() => {\n       // window.location.reload(false);\n      })\n      .catch((error) => {\n        console.log(\"Failed to save data new class!\" + error);\n      });\n  };\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let classList = [];\n    let assignmentList = [];\n    let teacher = this.props.teacherID;\n   \n    //get list of classes\n    get(child(dbRef, `classes`))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n          \n              var itemVal = item.val();\n              console.log(\"Teacher ID\" + itemVal.teacherID + \"---\" + teacher);\n              if (itemVal.teacherID == teacher) {\n                console.log(\"Teacher ID\" + itemVal.teacherID);\n                classList.push(itemVal);\n              }\n            });\n            // this.setState({nb_classes: nb_classes});\n            this.setState({ classList: classList });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n\n     //get list of assignments\n     get(child(dbRef, `assignments`))\n     .then(\n       (snapshot) => {\n         if (snapshot.exists()) {\n           snapshot.forEach(function (item) {\n         \n             var itemVal = item.val();\n            \n             if (itemVal.teacher == teacher) {\n            \n               assignmentList.push(itemVal);\n             }\n           });\n           // this.setState({nb_classes: nb_classes});\n           this.setState({ assignmentList: assignmentList });\n         } else {\n           console.log(\"No data available\");\n         }\n       },\n       {\n         onlyOnce: true,\n       }\n     )\n     .catch((error) => {\n       console.error(error);\n     });\n\n  \n  }\n\n  render() {\n  \n    return (\n      <div>\n      \n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Class</th>\n              <th>Assignment</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.assignmentList.map((assignment_item) => (\n              <tr>\n                 \n                <td>{assignment_item.assignmentID}</td>\n                <td>{assignment_item.classID}</td>\n                <td>{assignment_item.title}</td>\n                <td width=\"37%\">\n                  {\" \"}\n                  <Button\n                    variant=\"secondary class-more-btn\"\n                    onClick={() =>\n                      this.openModal(assignment_item.assignmentID, \"details\")\n                    }\n                  >\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\n                    Details\n                  </Button>{\" \"}\n                  <DropdownButton title=\"Manage\" >\n                    <Dropdown.Item\n                      eventKey=\"1\"\n                      onClick={() =>\n                        this.openModal(assignment_item.assignmentID, \"update\")\n                      }\n                    >\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\n                      Update\n                    </Dropdown.Item>\n                   \n                    <Dropdown.Item eventKey=\"2\"    onClick={() => this.handleRemoveClass(assignment_item.assignmentID)}>\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\n                    </Dropdown.Item>\n                  </DropdownButton>\n                </td>\n                <Modal\n                  show={this.state.openedDialog === assignment_item.assignmentID}\n                  onHide={this.closeModal}\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>{assignment_item.title}</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                  <Form  onSubmit={() => this.handleUpdateAssignment(assignment_item.assignmentID)}>\n                <Form.Group id=\"classID\" >\n                  \n                  <Form.Label for=\"classID-Val\">Class Name</Form.Label>\n                  <Form.Control\n                      type=\"text\"\n                      name=\"classID_Val\"\n                      id= \"classID_Val\"\n                      defaultValue= {assignment_item.classID}\n                      required\n                      onChange={this.handleAssignmentInput}\n                      readOnly=\"true\"\n                    ></Form.Control>                  \n                    </Form.Group>\n           \n                  <Form.Group id=\"title\">\n                    <Form.Label for=\"title_Val\">Title</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"title_Val\"\n                      id= \"title_Val\"\n                      defaultValue= {assignment_item.title}\n                      required\n                      onChange={this.handleAssignmentInput}\n                      readOnly={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"description\">\n                    <Form.Label for=\"description_Val\">Description</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"description\"\n                      id= \"description_Val\"\n                      defaultValue= {assignment_item.description}\n                      required\n                      onChange={this.handleAssignmentInput}\n                      readOnly={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"summary\">\n                    <Form.Label for=\"summary_Val\">Summary</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      name=\"summary\"\n                      id= \"summary_Val\"\n                      style={{ height: '100px' }}\n                      defaultValue= {assignment_item.summary}\n                      required\n                      onChange={this.handleAssignmentInput}\n                      readOnly={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"duedate\">\n                    <Form.Label for=\"duedate_Val\">Due Date</Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      name=\"duedate\"\n                      id= \"duedate_Val\"\n                      defaultValue= {assignment_item.dueDate}\n                      required\n                      onChange={this.handleAssignmentInput}\n                      readOnly={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"points\">\n                    <Form.Label for=\"points_Val\">Pointss</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"points\"\n                      id= \"points_Val\"\n                      defaultValue= {assignment_item.points}\n                      required\n                      onChange={this.handleAssignmentInput}\n                      readOnly={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                    ></Form.Control>\n                  </Form.Group>\n<Form.Group id=\"published\">\n\n<Form.Check\n        type=\"checkbox\"\n        id= \"published\"\n        className=\"mb-2\"\n        label=\"Published\"\n      />\n  </Form.Group>\n  <Form.Group>\n  <Button    disabled={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                      variant=\"primary\"\n                     type = \"submit\"\n                    >\n                      Save Changes\n                    </Button>\n  </Form.Group>\n                \n                </Form>\n                  </Modal.Body>\n                \n                </Modal>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Container,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ListGroup,\n} from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ManageAssignments from \"./ManageAssignment\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\n\nexport default class AssignmentNew extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showHide: false,\n      openedDialog: -1,\n      assignmentID: \"\",\n      classID: \"\",\n      className: \"\",\n      description: \"\",\n      duedate: \"\",\n      points: \"\",\n      published: 0,\n      summary: \"\",\n      title: \"\",\n      classList: [],\n      teacherID: this.props.match.params.euid,\n    };\n  }\n\n  //handle the student list popup\n  handleModalShowHide() {\n    this.setState({ showHide: !this.state.showHide });\n  }\n\n  //method to update the state variables with the user inputs\n  handleAssignmentInput = (e) => {\n    const name = e.target.name;\n\n    const value = e.target.value;\n\n    this.setState({ [name]: value });\n    // console.log(\"Name: \" + name + \"value:\" + value);\n  };\n  //method to add Assignment to the database\n  handleAddAssignment = (event) => {\n    const db = getDatabase();\n    set(ref(db, \"assignments/\" + this.state.assignmentID), {\n      assignmentID: this.state.assignmentID,\n      description: this.state.description,\n      title: this.state.title,\n      classID: this.state.classID,\n      dueDate: this.state.duedate,\n      published: this.state.published,\n      points: this.state.points,\n      summary: this.state.summary,\n      teacher: this.props.match.params.euid,\n    })\n      .then(() => {\n        window.location.reload(false);\n      })\n      .catch((error) => {\n        console.log(\"Failed to save data new Assignment!\" + error);\n      });\n    event.preventDefault();\n  };\n\n  //get List of classes\n\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let classList = [];\n\n    //get list of classes\n    get(child(dbRef, `classes`))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              classList.push(itemVal);\n            });\n            this.setState({ classList: classList });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    //create nav nodes for classes\n    const listclasses = this.state.classList.map((class_item) =>\n\n      <option value={class_item.classID}>\n        {class_item.classID} -- {class_item.name} </option>\n    );\n    return (\n      <div>\n        <Sidenav role=\"teacher\" euid={this.props.match.params.euid} />\n        <Container>\n          <Row className=\"theme_body\">\n            <Col>\n              {\" \"}\n              <div className=\"big-title\">\n                <h3 className=\"big_title\">Assignments</h3>\n\n                <div>\n                  <ManageAssignments\n                    teacherID={this.state.teacherID}\n                  ></ManageAssignments>\n                </div>\n              </div>\n            </Col>\n            <Col Style=\"Background:#eee\">\n              {\" \"}\n              <div className=\"big-title\">\n                <h3 className=\"big_title\">New Assignments</h3>\n\n                <Form onSubmit={this.handleAddAssignment}>\n                  <Form.Group id=\"classID\">\n\n                    <Form.Label>Class Name</Form.Label>\n                    <Form.Select name=\"classID\" aria-label=\"dropdown list of classes\" onChange={this.handleAssignmentInput} required>\n                      <option value=\"\">\n                        Select Class</option>\n                      {listclasses}\n                    </Form.Select>\n                  </Form.Group>\n                  <Form.Group id=\"assignmentID\">\n\n                    <Form.Label for=\"assignmentID\">Assignment Code</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"assignmentID\"\n                      id=\"assignmentID\"\n                      required\n                      onChange={this.handleAssignmentInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"title\">\n                    <Form.Label for=\"title\">Title</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"title\"\n                      id=\"title\"\n                      required\n                      onChange={this.handleAssignmentInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"description\">\n                    <Form.Label for=\"description\">Description</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"description\"\n                      id=\"description\"\n                      required\n                      onChange={this.handleAssignmentInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"summary\">\n                    <Form.Label for=\"summary\">Summary</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      name=\"summary\"\n                      id=\"summary\"\n                      style={{ height: '100px' }}\n                      required\n                      onChange={this.handleAssignmentInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"duedate\">\n                    <Form.Label for=\"duedate\">Due Date</Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      name=\"duedate\"\n                      id=\"duedate\"\n                      required\n                      onChange={this.handleAssignmentInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"points\">\n                    <Form.Label for=\"points\">Points</Form.Label>\n                    <Form.Control\n                      type=\"number\"\n                      name=\"points\"\n                      id=\"points\"\n                      required\n                      onChange={this.handleAssignmentInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"published\">\n\n                    <Form.Check\n                      type=\"checkbox\"\n                      id=\"published\"\n                      className=\"mb-2\"\n                      label=\"Published\"\n                    />\n                  </Form.Group>\n                  <Form.Group id=\"action\" Style=\"padding-left: 15px\">\n                    <Button\n                      className=\"w-100 btn-secondary\"\n                      size=\"lm\"\n                      type=\"submit\"\n                    >\n                      Save\n                    </Button>\n                  </Form.Group>\n                </Form>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Table,\n  DropdownButton,\n  Dropdown,\n  Button,\n  Modal,\n  Form,\n} from \"react-bootstrap\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\n\n\nexport default class ManageModules extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      moduleList : [],\n      showHide: false,\n      openedDialog: -1,\n      actionType: \"\",\n      moduleID: \"\",\n      classID: \"\",\n      description: \"\",\n      published: 0,\n      title: \"\",\n      ressourcesList: [],\n      teacherID: this.props.teacherID,\n      sel_moduleID : \"\"\n    };\n  }\n\n  openModal = (moduleid, actionType) => {\n    this.setState({\n      openedDialog: moduleid,\n      actionType: actionType\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      openedDialog: null,\n    });\n  };\n  handleColorCode = (colorValue) => {\n    this.setState({ classColor: colorValue });\n  };\n    //method to update the state variables with the user inputs\n    handleModuleInput = (e) => {\n      const name = e.target.name;\n  \n      const value = e.target.value;\n  \n      this.setState({ [name]: value });\n      console.log(\"Name: \" + name + \"value:\" + value);\n    };\n  //handle popup\n  handleModalShowHide() {\n    this.setState({ showHide: !this.state.showHide });\n  }\n  //method to update module to the database\n  handleUpdateModule = (moduleid) => {\n    const db = getDatabase();\n    set(ref(db, \"modules/\" + moduleid), {\n      moduleID:moduleid,\n      description: document.getElementById('description_Val'+moduleid).value,\n    \n      title:document.getElementById('title_Val'+moduleid).value,\n      published:1,\n      classID:this.props.classID\n    })\n      .then(() => {\n        window.location.reload(false);\n      })\n      .catch((error) => {\n        console.log(\"Failed to save data new class!\" + error);\n      });\n  };\n  //method to get list of ressources by module\n  getRessources= (moduleid) => {\n    let ressourcesList = [];\n    const db = getDatabase();\n       //get list of ressources\n       get(ref(db, \"ressources/\" + moduleid))\n       .then(\n         (snapshot) => {\n           if (snapshot.exists()) {\n             snapshot.forEach(function (item) {\n               var itemVal = item.val();\n                ressourcesList.push(itemVal);\n             });\n           \n             this.setState({ ressourcesList: ressourcesList });\n           } else {\n             console.log(\"No data available\");\n           }\n         },\n         {\n           onlyOnce: true,\n         }\n       )\n       .catch((error) => {\n         console.error(error);\n       });\n \n  }\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let moduleList = [];\n    let classID = this.props.classID;\n   \n \n     //get list of modules\n     get(child(dbRef, `modules`))\n     .then(\n       (snapshot) => {\n         if (snapshot.exists()) {\n           snapshot.forEach(function (item) {\n         \n             var itemVal = item.val();\n            \n             if (itemVal.classID == classID) {\n            \n               moduleList.push(itemVal);\n             }\n           });\n           // this.setState({nb_classes: nb_classes});\n           this.setState({ moduleList: moduleList });\n         } else {\n           console.log(\"No data available\");\n         }\n       },\n       {\n         onlyOnce: true,\n       }\n     )\n     .catch((error) => {\n       console.error(error);\n     });\n\n  \n  }\n\n  render() {\n  \n    return (\n      <div>\n      \n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Class</th>\n              <th>Module</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.moduleList.map((module_item) => (\n              <tr>\n                 \n                <td>{module_item.moduleID}</td>\n                <td>{module_item.classID}</td>\n                <td>{module_item.title}</td>\n                <td width=\"37%\">\n                  {\" \"}\n                  <Button\n                    variant=\"secondary class-more-btn\"\n                    onClick={() =>\n                      this.openModal(module_item.moduleID, \"details\")\n                    }\n                  >\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\n                    Details\n                  </Button>{\" \"}\n                  <DropdownButton title=\"Manage\" >\n                    <Dropdown.Item\n                      eventKey=\"1\"\n                      onClick={() =>\n                        this.openModal(module_item.moduleID, \"update\")\n                      }\n                    >\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\n                      Update\n                    </Dropdown.Item>\n                   \n                    <Dropdown.Item eventKey=\"2\">\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      eventKey=\"3\"\n                      \n                    >\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\n                      Add new ressource\n                    </Dropdown.Item>\n                   \n                  </DropdownButton>\n                </td>\n                <Modal\n                  show={this.state.openedDialog === module_item.moduleID}\n                  onHide={this.closeModal}\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>{module_item.title}</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                  <Form  onSubmit={() => this.handleUpdateModule(module_item.moduleID)}>\n                <Form.Group id=\"moduleID\">\n                  \n                  <Form.Label>Module Code</Form.Label>\n                  <Form.Control\n                      type=\"text\"\n                      name=\"moduleID\"\n                      id= \"moduleID_Val\"{...module_item.moduleID}\n                      value= {module_item.moduleID}\n                      required\n                      onChange={this.handleModuleInput}\n                      readOnly=\"true\"\n                    ></Form.Control>                  \n                    </Form.Group>\n           \n                  <Form.Group id=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"title\"\n                      id= \"title_Val\"{...module_item.moduleID}\n                      value= {module_item.title}\n                      required\n                      onChange={this.handleModuleInput}\n                      readOnly={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"description\"\n                      id= \"description_Val\"{...module_item.moduleID}\n                      value= {module_item.description}\n                      required\n                      onChange={this.handleModuleInput}\n                      readOnly={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                    ></Form.Control>\n                  </Form.Group>\n               \n<Form.Group id=\"published\">\n\n<Form.Check\n        type=\"checkbox\"\n        id= \"published\"{...module_item.moduleID}\n        className=\"mb-2\"\n        label=\"Published\"\n      />\n  </Form.Group>\n                \n                </Form>\n                  </Modal.Body>\n                  <Modal.Footer>\n                    <Button    disabled={\n                        this.state.actionType === \"update\" ? false : true\n                      }\n                      variant=\"primary\"\n                     type = \"submit\"\n                    >\n                      Save Changes\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n\n\n        <Modal\n                  show={this.state.openedDialog === this.state.sel_moduleID}\n                  onHide={this.closeModal}\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>New Ressources</Modal.Title>\n                  </Modal.Header>\n\n                  <Modal.Body>\n                  <Form  onSubmit={() => this.handleAddRessource(this.state.moduleID)}>\n                <Form.Group id=\"ressourceID\">\n                  \n                  <Form.Label>Ressource Code</Form.Label>\n                  <Form.Control\n                      type=\"text\"\n                      name=\"ressourceID\"\n                      id= \"ressourceID_Val\"{...this.state.moduleID}\n                      required\n                      onChange={this.handleModuleInput}\n                   \n                    ></Form.Control>                  \n                    </Form.Group>\n           \n                  <Form.Group id=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"title\"\n                      id= \"title_Val_res\"{...this.state.moduleID}\n                      required\n                      onChange={this.handleModuleInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"description\"\n                      id= \"description_Val_res\"{...this.state.moduleID}\n                      required\n                      onChange={this.handleModuleInput}\n                   \n                    ></Form.Control>\n                  </Form.Group>\n               \n<Form.Group id=\"published\">\n\n<Form.Check\n        type=\"checkbox\"\n        id= \"published_res\"{...this.state.moduleID}\n        className=\"mb-2\"\n        label=\"Published\"\n      />\n  </Form.Group>\n                \n                </Form>\n                  </Modal.Body>\n                  <Modal.Footer>\n                    <Button   \n                      variant=\"primary\"\n                     type = \"submit\"\n                    >\n                      Save Changes\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Container,\n  Row,\n  Col,\n  Button,\n  Modal,\n  ListGroup,\n} from \"react-bootstrap\";\nimport Footer from \"../Footer\";\nimport Sidenav from \"../Sidenav\";\nimport ManageModules from \"./ManageModules\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\n\nexport default class ModuleNew extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showHide: false,\n      openedDialog: -1,\n      moduleID: \"\",\n      classID: \"\",\n      description: \"\",\n      published: 0,\n      title: \"\",\n      teacherID: this.props.match.params.teacherID,\n    };\n  }\n\n  //handle the student list popup\n  handleModalShowHide() {\n    this.setState({ showHide: !this.state.showHide });\n  }\n\n  //method to update the state variables with the user inputs\n  handleModuleInput = (e) => {\n    const name = e.target.name;\n\n    const value = e.target.value;\n\n    this.setState({ [name]: value });\n    // console.log(\"Name: \" + name + \"value:\" + value);\n  };\n  //method to add Module to the database\n  handleAddModule = (event) => {\n    const db = getDatabase();\n    set(ref(db, \"modules/\" + this.state.moduleID), {\n      moduleID: this.state.moduleID,\n      description: this.state.description,\n      title: this.state.title,\n      published: this.state.published,\n      classID: this.props.match.params.classID,\n    })\n      .then(() => {\n        window.location.reload(false);\n      })\n      .catch((error) => {\n        console.log(\"Failed to save data new Module!\" + error);\n      });\n    event.preventDefault();\n  };\n\n  //get List of classes\n\n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let classList = [];\n\n    //get list of classes\n    get(child(dbRef, `classes`))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              classList.push(itemVal);\n            });\n            this.setState({ classList: classList });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n\n        <Sidenav role=\"teacher\" euid={this.props.match.params.teacherID} />\n        <Container>\n          <Row className=\"theme_body\">\n            <Col>\n              {\" \"}\n              <div className=\"big-title\">\n                <h3 className=\"big_title\">Modules</h3>\n\n                <div>\n                  <ManageModules\n                    teacherID={this.props.match.params.teacherID}\n                    classID={this.props.match.params.classID}\n                  ></ManageModules>\n                </div>\n              </div>\n            </Col>\n            <Col>\n              {\" \"}\n              <div className=\"big-title\">\n                <h3 className=\"big_title\">New Modules</h3>\n                {this.state.description}\n                <Form onSubmit={this.handleAddModule}>\n                  <Form.Group id=\"moduleID\">\n                    <Form.Label>Module Code</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"moduleID\"\n                      required\n                      onChange={this.handleModuleInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"title\"\n                      required\n                      onChange={this.handleModuleInput}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group id=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"description\"\n                      required\n                      onChange={this.handleModuleInput}\n                    ></Form.Control>\n                  </Form.Group>\n\n                  <Form.Group id=\"published\">\n                    <Form.Check\n                      type=\"checkbox\"\n                      id=\"published\"\n                      className=\"mb-2\"\n                      label=\"Published\"\n                    />\n                  </Form.Group>\n                  <Form.Group id=\"action\">\n                    <Button\n                      className=\"w-100 btn-secondary\"\n                      size=\"lm\"\n                      type=\"submit\"\n                    >\n                      Save\n                    </Button>\n                  </Form.Group>\n                </Form>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Footer></Footer>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Table,\n  DropdownButton,\n  Dropdown,\n  Button,\n  Form,\n  Container,\n  Row,\n  Col\n} from \"react-bootstrap\";\nimport \"../../firebase\";\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\nimport Sidenav from \"../Sidenav\";\n\nexport default class RollCall extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      actionType: \"\",\n      studentList: [],\n      classID: \"\",\n      teacherID: this.props.match.params.teacherID,\n      hidefeedback: \"none\",\n      classList:[],\n      firstName :\"\"\n    };\n  }\n //method to update the state variables with the user selection\n getListofstudents = (e) => {\n \n\n  const classID = e.target.value;\n\n  this.setState({ classID: classID });\n  this.setState({studentList: [] });\nconsole.log(\"get student of  :\"+classID);\n  //get list of student of the selected class\n  const dbRef = ref(getDatabase());\n  let studentList = [];\n  get(child(dbRef, \"classes/\"+classID+\"/students\"))\n  .then(\n    (snapshot) => {\n      if (snapshot.exists()) {\n        snapshot.forEach(function (item) {\n          var itemVal = item.val();\n          studentList.push(itemVal);\n        });\n        this.setState({ studentList: studentList });\n      } else {\n        console.log(\"No data available\");\n      }\n    },\n    {\n      onlyOnce: true,\n    }\n  )\n  .catch((error) => {\n    console.error(error);\n  });\n // console.log(\"Name: \" + name + \"value:\" + value);\n};\n\ngetstudentFirstName = (euid,i) => {\n\n  const dbRef = ref(getDatabase());\n  let firstName = \"\";\n\n  get(child(dbRef, \"users/\"+euid))\n  .then(\n    (snapshot) => {\n      if (snapshot.exists()) {\n     \n        firstName = snapshot.child(\"firstname\").val();\ndocument.getElementsByName(\"firstnames\")[i].innerHTML = firstName;\n      console.log(firstName);\n      } else {\n        console.log(\"No data available\");\n      }\n    },\n    {\n      onlyOnce: false,\n    \n\n    },\n   \n  )\n  .catch((error) => {\n    console.error(error);\n  });\n\nreturn firstName;\n};\n  //method to roll call \n  handleRollCall = (studentID,status) => {\n    const db = getDatabase();\n    const date = new Date();\n    let today = date.getMonth() +\"-\" +date.getFullYear() + \"-\" +date.getDate()  ;\n    set(ref(db, \"attendances/\" + this.state.classID+ \"/\"+studentID + \"/\" + today), {\n    \n     \"status\": status,\n     \"teacherID\":this.state.teacherID,\n    \n    })\n      .then(() => {\n        window.location.reload(false);\n      })\n      .catch((error) => {\n        console.log(\"Failed to save data new class!\" + error);\n      });\n  };\n \n  componentDidMount() {\n    const dbRef = ref(getDatabase());\n    let classList = [];\n    let teacher = this.state.teacherID;\n\n    //get list of classes\n    get(child(dbRef, `classes`))\n      .then(\n        (snapshot) => {\n          if (snapshot.exists()) {\n            snapshot.forEach(function (item) {\n              var itemVal = item.val();\n              console.log(\"Teacher ID\" + itemVal.teacherID + \"---\" + teacher);\n              if (itemVal.teacherID == teacher) {\n                console.log(\"Teacher ID\" + itemVal.teacherID);\n                classList.push(itemVal);\n              }\n            });\n            // this.setState({nb_classes: nb_classes});\n            this.setState({ classList: classList });\n          } else {\n            console.log(\"No data available\");\n          }\n        },\n        {\n          onlyOnce: true,\n        }\n      )\n      .catch((error) => {\n        console.error(error);\n      });\n    \n  }\n\n  render() {\n    //create nav nodes for classes\n    const listclasses = this.state.classList.map((class_item) =>\n        \n    <option value={class_item.classID}>\n      {class_item.classID} -- {class_item.name} </option>\n         );\n    return (\n      <div>\n     \n      <Sidenav role=\"teacher\"  euid={this.props.match.params.teacherID}/>\n      <Container>\n        <Row className=\"theme_body\">\n          <Col>\n            {\" \"}\n            <div className=\"big-title\">\n              <h3 className=\"big_title\">Classes</h3>\n             \n\n      <div>\n        \n\n<Form.Group id=\"classID\" Style=\" margin-bottom: 14px;\">\n                  \n                \n                <Form.Select  name= \"classID\" aria-label=\"dropdown list of classes\"   onChange={this.getListofstudents} required>\n                <option value=\"\">\n         Select Class</option>\n                  {listclasses}\n                  </Form.Select>\n                  </Form.Group>\n                  \n               \n        <Table striped bordered hover size=\"sm\" >\n          <thead>\n            <tr>\n          \n              <th>Student ID</th>\n              <th>First Name</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.studentList.map((student_item,index) => (\n              <tr>\n                <td>{student_item}</td>\n                <td>{ this.getstudentFirstName(student_item,index)} <label name=\"firstnames\"></label></td>\n                <td width=\"37%\">\n                  {\" \"}\n                  <Button\n                    variant=\"success class-more-btn\"\n                    onClick={() =>\n                      this.handleRollCall(student_item, \"Present\")\n                    }\n                  >\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\n                    Present\n                  </Button>{\" \"}\n                  <Button\n                    variant=\"danger class-more-btn\"\n                    onClick={() =>\n                      this.handleRollCall(student_item, \"Absent\")\n                    }\n                  >\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\n                    Absent\n                  </Button>{\" \"}\n                  \n                </td>\n                            </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n      </div>\n      </Col>\n      </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React  from \"react\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport RessourceDetail from \"./Modules/Ressources/RessourceDetail\";\nimport {Switch, Route, HashRouter  as Router} from 'react-router-dom';\nimport Dashboard from \"./Dashboard\";\nimport ClassDetails from \"./Classes/ClassDetails\";\nimport AssignmentDetails from \"./Assignments/AssignmentDetails\";\nimport DashboardTeacher from \"./DashboardTeacher\";\nimport ClassNew from \"./Classes/ClassNew\";\nimport Grades from \"./Grades/Grades\";\nimport AssignmentList from \"./Assignments/AssignmentList\";\nimport PeopleByClass from \"./Attendances/PeopleByClass\";\nimport AttendanceByClass from \"./Attendances/AttendanceByClass\";\nimport AssignmentNew from \"./Assignments/AssignmentNew\";\nimport ModuleNew from \"./Modules/ModuleNew\";\nimport RollCall from \"./Attendances/RollCall\";\n\nfunction App() {\n  return (\n<main>\n    <div className=\"App\">\n      \n      <Router>\n <Switch>\n      <Route path=\"/\" component={Login} exact/>\n      <Route path=\"/Register\" component={Register}/>\n      <Route path=\"/Dashboard/:euid\" component={Dashboard}/>\n      <Route path=\"/DashboardTeacher/:euid\" component={DashboardTeacher}/>\n      <Route path=\"/ressourceDetails/:ressourceId/:moduleId/:classId/:euid\" component={RessourceDetail}/>\n      <Route path=\"/classDetails/:classId/:euid\" component={ClassDetails}/>\n      <Route path=\"/newClass/:euid/\" component={ClassNew}/>\n      <Route path=\"/manageAssignment/:euid/\" component={AssignmentNew}/>\n      <Route path=\"/manageModules/:classID/:teacherID/\" component={ModuleNew}/>\n      <Route path=\"/assignmentDetails/:assignmentID/:classId/:euid\" component={AssignmentDetails} />\n      <Route path=\"/assignmentListsByClass/:classId/:euid\" component={AssignmentList} />\n      <Route path=\"/attendances/:classId/:euid\" component={AttendanceByClass} />\n      <Route path=\"/people/:classId/:euid\" component={PeopleByClass} />\n      <Route path=\"/Grades/:classId/:euid\" component={Grades}/>\n      <Route path=\"/rollCall/:teacherID/\" component={RollCall}/>\n   \n    </Switch>\n</Router>\n    </div>\n    </main>\n \n    \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport App from './components/App';\nimport './css/style.css'; \nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\n\n\nReactDOM.render(\n  \n    <App />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}