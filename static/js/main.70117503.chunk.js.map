{"version":3,"sources":["firebase.js","img/logo001a.png","components/Register.js","components/Login.js","components/Footer.js","img/logo-nav.png","components/Sidenav.js","components/Classes/ClassNav.js","components/Modules/Ressources/RessourceDetail.js","components/Classes/ClassItem.js","components/Classes/ListClasses.js","components/Assignments/Assignments.js","components/Dashboard.js","components/Modules/Ressources/RessourceItem.js","components/Modules/Ressources/ListRessources.js","components/Modules/ModuleItem.js","components/Modules/ListModules.js","components/Classes/ClassDetails.js","components/Assignments/AssignmentDetails.js","components/DashboardTeacher.js","components/Tools/ColorPicker.js","components/Classes/ManageClasses.js","components/Classes/ClassNew.js","components/Grades/Grades.js","components/Assignments/ListAssignmentByClass.js","components/Assignments/AssignmentList.js","components/Attendances/PeopleByClass.js","components/Attendances/AttendanceByClass.js","components/Assignments/ManageAssignment.js","components/Assignments/AssignmentNew.js","components/Modules/ManageModules.js","components/Modules/ModuleNew.js","components/Attendances/RollCall.js","components/App.js","index.js"],"names":["initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Register","createBrowserHistory","props","handleAddUser","errorlist","state","uEuid","length","uFullName","db","getDatabase","bcrypt","hash","uPassword","then","hashpassword","set","ref","euid","fullName","dateofbirth","uDateOfBirth","password","history","push","catch","error","console","log","document","getElementById","textContent","handleUserInput","e","name","target","value","setState","validateField","uCPassword","formErrors","dateOfBirth","passwordConfirm","dateOfBirthValid","passwordValid","formValid","fieldName","fieldValidationErrors","this","dbValid","fullNameValid","euidValid","match","validateForm","Container","className","style","maxWidth","src","logo","alt","Card","Body","class","id","Form","Group","errorClass","Label","for","Control","type","required","onChange","Button","size","onClick","disabled","to","Component","LogIn","useState","setuEuid","setuPassword","useHistory","clearErrorMessage","invalidLoginMessage","dbRef","get","child","snapshot","exists","compare","val","err","result","role","backgroundColor","textAlign","padding","position","left","bottom","height","width","phantom","display","Footer","children","Sidenav","classList","assignmentList","dashboardlink","currentuser","forEach","item","itemVal","teacherID","classID","onlyOnce","title","listclasses","map","class_item","NavDropdown","Item","section","courseName","listassignments","assignment_item","assignmentID","teacher","Navbar","bg","expand","Brand","href","Toggle","Collapse","Nav","Link","ClassNav","defaultActiveKey","classId","isActive","RessourceDetail","description","ressourceID","params","ressourceId","Row","Col","xs","lg","Breadcrumb","moduleId","active","Accordion","flush","eventKey","Header","ClassItem","students","includes","Img","variant","Style","classColor","Title","Text","ListClasses","CardGroup","Assignments","assignmentsList","assignment","Badge","pill","dueDate","summary","Dashboard","RessourceItem","ressourceList","moduleID","ressource_item","typeID","rel","ListRessources","ModuleItem","moduleList","publishedID","module_item","ListModules","ClassDetails","classTitle","classSection","AssignmentDetails","points","DashboardTeacher","Alert","ColorPicker","selectedColour","onSelectcolor","colour","index","setSelectedColour","ManageClasses","openModal","classid","actionType","openedDialog","closeModal","handleColorCode","colorValue","handleClassInput","handleRemoveClass","window","confirm","remove","location","reload","innerText","handleUpdateClass","meetingDates","published","roomNumber","seats","session","split","show","nb_classes","showHide","studentList","studentListUI","studentsID","nbclasses","hidefeedback","Table","striped","bordered","hover","DropdownButton","Dropdown","Modal","onHide","closeButton","onSubmit","defaultValue","readOnly","maxLength","ClassNew","handleCheckboxChange","event","newArray","filter","day","handleAddClass","student_item","ListGroup","as","Check","inline","checked","firstname","Select","handleModalShowHide","Grades","md","span","offset","ListAssignmentByClass","AssignmentList","PeopleByClass","AttendanceByClass","ManageAssignment","assignmentid","handleAssignmentInput","handleUpdateAssignment","label","AssignmentNew","handleAddAssignment","duedate","preventDefault","ManageModules","moduleid","handleModuleInput","handleUpdateModule","getRessources","ressourcesList","sel_moduleID","handleAddRessource","ModuleNew","handleAddModule","RollCall","getListofstudents","getstudentFirstName","i","firstName","getElementsByName","innerHTML","handleRollCall","studentID","status","date","Date","today","getMonth","getFullYear","getDate","App","path","component","Login","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.70117503.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\r\n\r\n\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyBKrmU5GrPvh5OgcwUkU3dY-tz6na-SFFQ\",\r\n    authDomain: \"studentportal-d9b8c.firebaseapp.com\",\r\n    databaseURL: \"https://studentportal-d9b8c-default-rtdb.firebaseio.com\",\r\n    projectId: \"studentportal-d9b8c\",\r\n    storageBucket: \"studentportal-d9b8c.appspot.com\",\r\n    messagingSenderId: \"544699300970\",\r\n    appId: \"1:544699300970:web:ad86be64ecde5faf915e13\"\r\n  };\r\n  \r\n\r\n\r\n  const app = initializeApp(firebaseConfig);\r\n\r\n\r\nexport default app;","export default __webpack_public_path__ + \"static/media/logo001a.cbd003c7.png\";","import { React, Component } from \"react\";\r\nimport { Form, Button, Card, Container } from \"react-bootstrap\";\r\nimport \"../firebase\";\r\nimport { getDatabase, set, ref } from \"firebase/database\";\r\nimport { Link } from 'react-router-dom';\r\nimport logo from \"../img/logo001a.png\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { createBrowserHistory } from 'history';\r\nconst history = createBrowserHistory();\r\nexport default class Register extends Component {\r\n  \r\n  //Props\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      uFullName: \"\",\r\n      uEuid: \"\",\r\n      uDateOfBirth: \"\",\r\n      uPassword: \"\",\r\n      uCPassword: \"\",\r\n      formErrors: {\r\n        dateOfBirth: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        fullName: \"\",\r\n        euid: \"\",\r\n      },\r\n      dateOfBirthValid: false,\r\n      passwordValid: false,\r\n      formValid: false,\r\n    };\r\n  }\r\n\r\n  handleAddUser = () => {\r\n let errorlist =\"\";\r\n    //validate\r\n    if (this.state.uEuid.length < 6) {\r\n     \r\n      errorlist += \"\\n Please enter euid : it is too short.\";\r\n     \r\n    }\r\n    if (this.state.uFullName.length === 0) {\r\n    \r\n      errorlist += \"\\n Please enter FullName : it is too short.\";\r\n    } else {\r\n      const db = getDatabase();\r\n\r\n      //check if the user is already in database, \r\n      \r\n      bcrypt.hash(this.state.uPassword, 12).then((hashpassword) => {\r\n        set(ref(db, \"users/\" + this.state.uEuid), {\r\n          euid: this.state.uEuid,\r\n          fullName: this.state.uFullName,\r\n          dateofbirth: this.state.uDateOfBirth,\r\n          password: hashpassword,\r\n        })\r\n          .then(() => {\r\n          \r\n            this.props.history.push(\"/\",{ state: 'pass'});\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"Data failed!\" + error);\r\n          });\r\n      });\r\n    }\r\n    var error = document.getElementById(\"errorMessage\");\r\n    error.textContent = errorlist;\r\n  };\r\n  handleUserInput = (e) => {\r\n    const name = e.target.name;\r\n\r\n    const value = e.target.value;\r\n    // console.log(\"name\" +name + value);\r\n    this.setState({ [name]: value }, () => {\r\n      this.validateField(name, value);\r\n    });\r\n  };\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    let dbValid = this.state.uDateOfBirth;\r\n    let passwordValid = this.state.uPassword;\r\n    let fullNameValid = this.state.uFullName;\r\n    let euidValid = this.state.uEuid;\r\n\r\n    switch (fieldName) {\r\n      case \"uDateOfBirth\":\r\n        dbValid = value.match(\r\n          /^(((19|20)\\d\\d))-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$/\r\n        );\r\n\r\n        fieldValidationErrors.dateOfBirth = dbValid ? \"\" : \" is invalid\";\r\n\r\n        this.setState({\r\n          dateOfBirthValid: fieldValidationErrors.dateOfBirth.length === 0,\r\n        });\r\n        console.log(\"dateOfBirthValid :\" + this.state.dateOfBirthValid);\r\n        break;\r\n      case \"uCPassword\":\r\n        passwordValid = this.state.uPassword === value;\r\n\r\n        fieldValidationErrors.passwordConfirm = passwordValid\r\n          ? \"\"\r\n          : \" password not match\";\r\n        this.setState({ passwordValid: passwordValid });\r\n        break;\r\n      case \"uPassword\":\r\n        passwordValid = value.length >= 6;\r\n        fieldValidationErrors.password = passwordValid ? \"\" : \" is too short\";\r\n        break;\r\n      case \"uFullName\":\r\n        fullNameValid = value.length > 0;\r\n\r\n        fieldValidationErrors.fullName = fullNameValid\r\n          ? \"\"\r\n          : \" can not be empty\";\r\n        break;\r\n      case \"uEuid\":\r\n        euidValid = value.length >= 6;\r\n       // console.log(\"euidValid\" + euidValid);\r\n        fieldValidationErrors.euid = euidValid ? \"\" : \" is too short\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ formErrors: fieldValidationErrors }, this.validateForm);\r\n  }\r\n  validateForm() {\r\n   // console.log( \"validate : \" + this.state.dateOfBirthValid && this.state.passwordValid );\r\n    this.setState({\r\n      formValid: this.state.dateOfBirthValid && this.state.passwordValid,\r\n    });\r\n  }\r\n  errorClass(error) {\r\n    // console.log(error);\r\n    return error.length === 0 ? \"\" : \"has-error\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     <div>\r\n        <Container className=\"d-flex align-item-center justify-content-center\">\r\n          <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n            <img\r\n              src={logo}\r\n              className=\"logo mx-auto d-block mb-3 mt-3\"\r\n              alt=\"Portal logo\"\r\n            ></img>\r\n            <Card className=\"login\">\r\n              <Card.Body>\r\n                <div class=\"shadow p-2 mb-3 bg-primary text-center text-white\">\r\n                  <h1>Register</h1>\r\n                </div>\r\n                <div className=\"body\">\r\n                <div className=\"w-100 text-center mt-2 text-danger\" id=\"errorMessage\" ></div>\r\n                  <Form>\r\n                    <Form.Group\r\n                      id=\"fullName\"\r\n                      className={`${this.errorClass(\r\n                        this.state.formErrors.fullName\r\n                      )}`}\r\n                    >\r\n                      <Form.Label for=\"uFullName\">Full Name</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        id=\"uFullName\"\r\n                        name=\"uFullName\"\r\n                        required\r\n                        onChange={this.handleUserInput}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                      id=\"euid\"\r\n                      className={`${this.errorClass(\r\n                        this.state.formErrors.euid\r\n                      )}`}\r\n                    >\r\n                      <Form.Label for=\"uEuid\">EUID</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        id=\"uEuid\"\r\n                        name=\"uEuid\"\r\n                        required\r\n                        onChange={this.handleUserInput}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                      id=\"date-of-birth\"\r\n                      className={`${this.errorClass(\r\n                        this.state.formErrors.dateOfBirth\r\n                      )}`}\r\n                    >\r\n                      <Form.Label for=\"uDateOfBirth\">Date of Birth</Form.Label>\r\n                      <Form.Control\r\n                        type=\"date\"\r\n                        id=\"uDateOfBirth\"\r\n                        name=\"uDateOfBirth\"\r\n                        required\r\n                        onChange={this.handleUserInput}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                      id=\"password\"\r\n                      className={`${this.errorClass(\r\n                        this.state.formErrors.password\r\n                      )}`}\r\n                    >\r\n                      <Form.Label for=\"uPassword\">Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        id=\"uPassword\"\r\n                        name=\"uPassword\"\r\n                        required\r\n                        onChange={this.handleUserInput}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group\r\n                      id=\"password-confirm\"\r\n                      className={`${this.errorClass(\r\n                        this.state.formErrors.passwordConfirm\r\n                      )}`}\r\n                    >\r\n                      <Form.Label for=\"uCPassword\">Password Confirmation</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        id=\"uCPassword\"\r\n                        name=\"uCPassword\"\r\n                        required\r\n                        onChange={this.handleUserInput}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"action\">\r\n                  \r\n                      <Button\r\n                        className=\"w-100 btn-secondary\"\r\n                        size=\"lm\"\r\n                        type=\"Button\"\r\n                        onClick={this.handleAddUser}\r\n                        disabled={!this.state.formValid}\r\n                      >\r\n                        Sign Up\r\n                      </Button>\r\n                    </Form.Group>\r\n                  </Form>\r\n                  <div className=\"w-100 text-center mt-2\">\r\n                    Already have an account?\r\n                    <Link to=\"/\"> Log In </Link>\r\n                  </div>\r\n                \r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </Container>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n","import { React, useState } from \"react\";\r\nimport { Form, Button, Card, Container } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { getDatabase, get, ref, child } from \"firebase/database\";\r\nimport logo from \"../img/logo001a.png\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport default function LogIn() {\r\n  const [uEuid, setuEuid] = useState(\"\");\r\n  const [uPassword, setuPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  function clearErrorMessage() {\r\n    var error = document.getElementById(\"errorMessage\");\r\n    error.textContent = \"\";\r\n  }\r\n\r\n  function invalidLoginMessage(){\r\n    var error = document.getElementById(\"errorMessage\");\r\n    error.textContent = \"Invalid Login\";\r\n    console.log(\"Invalid Login\");\r\n  }\r\n  function handleLoginUser() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    get(child(dbRef, \"users/\" + uEuid))\r\n      .then((snapshot) => {\r\n        // checks if euid is in database\r\n        if (snapshot.exists()) {\r\n          // checks password match, if true then redirects to dashboard\r\n          bcrypt.compare(\r\n            uPassword,\r\n            snapshot.child(\"password\").val(),\r\n            function (err, result) {\r\n              if (result) {\r\n                const role = snapshot.child(\"role\").val();\r\n                const fName = snapshot.child(\"firstname\").val();\r\n                console.log(\"password same \" + result + role );\r\n                \r\n                // redirects to either student or teacher dashboard based on role\r\n                if (role == \"student\" )\r\n                {\r\n                  history.push(\"/Dashboard/\"+ uEuid);\r\n                }\r\n                else if (role == \"teacher\")\r\n                {\r\n                  history.push(\"DashboardTeacher/\" + uEuid);\r\n                }\r\n                \r\n              }// if(result)\r\n              // if password does not match, error messages displayed\r\n              else {\r\n                invalidLoginMessage();\r\n              }\r\n            }\r\n          );\r\n          if (snapshot.child(\"password\").val() === uPassword) {\r\n            history.push(\"/Dashboard\");\r\n            console.log(\"Correct password\");\r\n          }\r\n        }\r\n        // if euid is not found in database, error message is displayed\r\n        else {\r\n          invalidLoginMessage();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  } //function handleLoginUser()\r\n\r\n  return (\r\n\r\n    <>\r\n    {}\r\n      <Container className=\"d-flex align-item-center justify-content-center\">\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <img\r\n            src={logo}\r\n            className=\"logo mx-auto d-block mb-3 mt-3\"\r\n            alt=\"Portal logo\"\r\n          ></img>\r\n\r\n          <Card className=\"login\">\r\n            <Card.Body>\r\n              <div class=\"shadow p-2 mb-3 bg-primary text-center text-white\">\r\n                <h2>Login</h2>\r\n              </div>\r\n              <div className=\"body\">\r\n                <Form.Group id=\"euid\">\r\n                  <Form.Label>EUID</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    required\r\n                    onChange={(e) => {\r\n                      setuEuid(e.target.value);\r\n                      clearErrorMessage();\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    required\r\n                    onChange={(e) => {\r\n                      setuPassword(e.target.value);\r\n                      clearErrorMessage();\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <Button\r\n                    className=\"w-75 mt-2\"\r\n                    type=\"Button\"\r\n                    onClick={handleLoginUser}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n\r\n                <div className=\"w-100 text-center mt-2\">\r\n                  Don't have an account?\r\n                  <Link to=\"/Register\"> Register </Link>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"w-100 text-center mt-2 text-danger\"\r\n                  id=\"errorMessage\"\r\n                ></div>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n                  }\r\n","var style = {\r\n    backgroundColor: \"#F8F8F8\",\r\n  \r\n    textAlign: \"center\",\r\n    padding: \"20px\",\r\n    position: \"fixed\",\r\n    left: \"0\",\r\n    bottom: \"0\",\r\n    height: \"60px\",\r\n    width: \"100%\",\r\n}\r\n\r\nvar phantom = {\r\n  display: 'block',\r\n  padding: '20px',\r\n  height: '60px',\r\n  width: '100%',\r\n}\r\n\r\nfunction Footer({ children }) {\r\n    return (\r\n        <div>\r\n            <div style={phantom} />\r\n            <div style={style}>\r\n              Copyright 2021\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","export default __webpack_public_path__ + \"static/media/logo-nav.2c59ed9d.png\";","import React, { Component } from 'react'\r\nimport { NavDropdown, Navbar, Container,Nav } from \"react-bootstrap\";\r\nimport   \"../firebase\";\r\nimport { getDatabase, ref,get,child } from \"firebase/database\";\r\nimport logo from \"../img/logo-nav.png\"\r\nimport {Link} from 'react-router-dom';\r\nexport default class Sidenav extends Component {\r\n   \r\n    constructor(props) {\r\n    \r\n        super(props);\r\n       \r\n        \r\n        this.state = {classList : [],assignmentList : [],dashboardlink :\"\",currentuser : this.props.euid}\r\n        }\r\n        componentDidMount() {\r\n            \r\n            const dbRef = ref(getDatabase());\r\n            let classList = [];\r\n            let assignmentList = [];\r\nlet dashboardlink =\"Dashboard\";\r\nlet currentuser =this.state.currentuser;\r\n            //get list of classes\r\n            get(child(dbRef, `classes`)).then((snapshot) => {\r\n              if (snapshot.exists()) {\r\n                snapshot.forEach(function(item) {\r\n                    var itemVal = item.val();\r\n                    classList.push(itemVal);\r\n               \r\n                if(itemVal.teacherID == currentuser)\r\n                {\r\n                  dashboardlink = \"DashboardTeacher\";\r\n                }\r\n               \r\n                   console.log(itemVal.classID);\r\n                });\r\n               \r\n                this.setState({ dashboardlink:dashboardlink });\r\n               this.setState({ classList:classList });\r\n    \r\n              } else {\r\n                console.log(\"No data available\");\r\n              }\r\n            }, {\r\n                onlyOnce: true\r\n              }).catch((error) => {\r\n              console.error(error);\r\n            }); \r\n          \r\n\r\n              //get list of assignments\r\n              get(child(dbRef, `assignments`)).then((snapshot) => {\r\n                if (snapshot.exists()) {\r\n                  snapshot.forEach(function(item) {\r\n                      var itemVal = item.val();\r\n                      assignmentList.push(itemVal);\r\n                     console.log(itemVal.title);\r\n                  });\r\n                 \r\n                 \r\n                 this.setState({ assignmentList:assignmentList });\r\n              \r\n                } else {\r\n                  console.log(\"No data available\");\r\n                }\r\n              }, {\r\n                  onlyOnce: true\r\n                }).catch((error) => {\r\n                console.error(error);\r\n              }); \r\n            \r\n        }\r\n    render() {\r\n        \r\n        //create nav nodes for classes\r\n        const listclasses = this.state.classList.map((class_item) =>\r\n        \r\n        <NavDropdown.Item key={class_item.classID}>\r\n       \r\n          {<Link to={`/classDetails/${class_item.classID}/${class_item.teacherID}`}>\r\n          {class_item.name} Section {class_item.section} - {class_item.courseName}\r\n     </Link>}\r\n          \r\n          </NavDropdown.Item>\r\n    );  \r\n //create nav nodes for assignments\r\n const listassignments = this.state.assignmentList.map((assignment_item) =>\r\n <NavDropdown.Item \r\n \r\n   key={assignment_item.assignmentID}>\r\n     {<Link to={`/assignmentDetails/${assignment_item.assignmentID}/${assignment_item.classID}/${assignment_item.teacher}`}>\r\n       {assignment_item.title} -- Section {assignment_item.className} {assignment_item.section} - {assignment_item.courseName}\r\n     </Link>}\r\n </NavDropdown.Item>\r\n \r\n);\r\n        return (\r\n         \r\n             \r\n       \r\n<div id=\"slide-out\" className=\"side-nav fixed\">\r\n<Navbar bg=\"light\" expand=\"lg\" className=\"nav-portal\">\r\n  <Container>\r\n    \r\n    <Navbar.Brand href=\"#\"><img src={logo} alt=\"logo\" className=\"nav-logo\"></img></Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"me-auto\">\r\n       \r\n        <Nav.Link href=\"#\"><Link to={`/`+this.state.dashboardlink+`/`+this.props.euid}>\r\n   Dashboard\r\n </Link></Nav.Link>\r\n    \r\n        \r\n         \r\n        \r\n         \r\n     \r\n       \r\n        <NavDropdown title=\"Classes\" id=\"basic-nav-dropdown\">\r\n           {listclasses} \r\n        </NavDropdown>\r\n        <NavDropdown title=\"Assignments\" id=\"basic-nav-dropdown\">\r\n           {listassignments} \r\n        </NavDropdown>\r\n        <Nav.Link href=\"#\">Attendance</Nav.Link>\r\n \r\n        <Nav.Link className=\"nav-link-logout\"><Link to={`/`}>\r\n   Logout\r\n </Link></Nav.Link>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>\r\n</div>\r\n\r\n           \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Nav} from \"react-bootstrap\";\r\nimport   \"../../firebase\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default class ClassNav extends Component {\r\n\r\n    render() {\r\n  \r\n        return (\r\n        \r\n            <Nav defaultActiveKey=\"/\" className=\"class-nav flex-column\">\r\n        \r\n            <Nav.Link> <Link to={\"/classDetails/\"+ this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive === 1) ?\"active\": \"\"}>Modules </Link></Nav.Link>\r\n            <Nav.Link> <Link to={\"/Grades/\"+ this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive ==2) ?\"active\": \"\"}>Grades </Link></Nav.Link>\r\n            <Nav.Link> <Link to={`/assignmentListsByClass/`+this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive == 3) ?\"active\": \"\"}>Assignments </Link></Nav.Link>\r\n            <Nav.Link>  <Link to={\"/attendances/\"+ this.props.classId+\"/\"+this.props.euid} className={(this.props.isActive == 4) ?\"active\": \"\"}>Attendance </Link></Nav.Link>\r\n            <Nav.Link> <Link to={\"/people/\"+ this.props.classId+\"/\"+this.props.euid}  className={(this.props.isActive ==5) ?\"active\": \"\"}>People </Link></Nav.Link>\r\n          </Nav>\r\n\r\n\r\n            );\r\n        \r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport { Container, Row, Col, Breadcrumb } from \"react-bootstrap\";\r\nimport Footer from \"../../Footer\";\r\nimport Sidenav from \"../../Sidenav\";\r\nimport ClassNav from \"../../Classes/ClassNav\";\r\nimport \"../../../firebase\";\r\n//import \"font-awesome/css/font-awesome.min.css\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class RessourceDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { description: \"\", title: \"\" };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    let title = \"\";\r\n    let description = \"\";\r\n    //get list of ressources\r\n    get(child(dbRef, `ressources`))\r\n      .then(\r\n        (snapshot) => {\r\n          let ressourceID = this.props.match.params.ressourceId;\r\n          console.log(\"searching for ressources\" + ressourceID);\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              //  console.log(\"ressource \"+ressourceID);\r\n              if (itemVal.ressourceID == ressourceID) {\r\n                description = itemVal.description;\r\n                title = itemVal.title;\r\n              }\r\n            });\r\n            this.setState({ description: description });\r\n            this.setState({ title: title });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n   \r\n       <Sidenav euid={this.props.match.params.euid} />\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col xs lg=\"2\">\r\n              <ClassNav  euid={this.props.match.params.euid} classId={this.props.match.params.classId}  isActive=\"1\"></ClassNav>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"ressources\">\r\n                <Breadcrumb>\r\n               \r\n                  <Breadcrumb.Item>\r\n                    <Link\r\n                      to={`/classDetails/${this.props.match.params.classId}/${this.props.match.params.euid}`}\r\n                    >\r\n                      Class\r\n                    </Link>\r\n                  </Breadcrumb.Item>\r\n                  <Breadcrumb.Item>\r\n                    <Link\r\n                      to={`/classDetails/${this.props.match.params.classId}/${this.props.match.params.euid}`}\r\n                    >\r\n                      Module {this.props.match.params.moduleId}\r\n                    </Link>\r\n                  </Breadcrumb.Item>\r\n                  <Breadcrumb.Item active>{this.state.title}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n\r\n                <Accordion defaultActiveKey=\"0\" flush>\r\n                  <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header>{this.state.title}</Accordion.Header>\r\n                    <Accordion.Body>{this.state.description}</Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Card} from \"react-bootstrap\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class ClassItem extends Component {\r\n    constructor(props) {\r\n    \r\n        super(props);\r\n      \r\n        \r\n        this.state = {classList : []}\r\n        }\r\n        componentDidMount() {\r\n            \r\n            const dbRef = ref(getDatabase());\r\n            let classList = [];\r\n           \r\n\r\n    //get list of classes\r\n    get(child(dbRef, `classes`)).then((snapshot) => {\r\n      let euid = this.props.euid;\r\n      console.log(`object list`,   this.props.euid);\r\n      if (snapshot.exists()) {\r\n        snapshot.forEach(function (item) {\r\n          var itemVal = item.val();\r\n          console.log(\" euid:\"+ euid +  itemVal.students+ itemVal.students.includes(euid));\r\n          if(itemVal.teacherID == euid || itemVal.students.includes(euid)){\r\n          classList.push(itemVal);\r\n         \r\n          }\r\n        });\r\n        this.setState({ classList: classList });\r\n      } else {\r\n        console.log(\"No data available\");\r\n      }\r\n    }, {\r\n      onlyOnce: true\r\n    }).catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n            \r\n        \r\n    render() {\r\n        \r\n       \r\n        return (\r\n            \r\n            this.state.classList.map((class_item) =>\r\n                   <div>\r\n                \r\n                <Card style={{ width: '18rem','marginRight': '20px' }}>\r\n                  \r\n  <Card.Img variant=\"top\" className=\"class_img\" Style={\"Background-color:\"+class_item.classColor}  />\r\n  <Card.Body>\r\n    <Card.Title>{class_item.name}</Card.Title>\r\n    <Card.Text>\r\n    {class_item.description}\r\n    </Card.Text>\r\n    <Button variant=\"primary class-more-btn\"><Link to={`/classDetails/${class_item.classID}/${this.props.euid}`}>\r\n    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>  Access\r\n          </Link></Button>         \r\n  </Card.Body>\r\n</Card>\r\n            </div>\r\n               ));\r\n        \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { CardGroup} from \"react-bootstrap\";\r\nimport   \"../../firebase\";\r\n\r\nimport ClassItem from './ClassItem';\r\n\r\nexport default class ListClasses extends Component {\r\n\r\n    render() {\r\n        \r\n       \r\n        return (\r\n            <CardGroup>\r\n       \r\n                <ClassItem role={this.props.role} euid={this.props.euid}></ClassItem>\r\n            </CardGroup>\r\n\r\n\r\n            );\r\n        \r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\"\r\nimport \"../../css/assignmentStyle.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, Button } from \"react-bootstrap\";\r\n\r\nexport default class Assignments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { assignmentsList: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const dbRef = ref(getDatabase());\r\n        let assignmentList = [];\r\n\r\n        // Get list of assignments\r\n        get(child(dbRef, 'assignments'))\r\n            .then(assignment => {\r\n                if (assignment.exists()) {\r\n                    assignment.forEach(item => {\r\n                        let itemVal = item.val();\r\n                        assignmentList.push(itemVal);\r\n                        console.log(itemVal.title);\r\n                    });\r\n\r\n                    this.setState({ assignmentsList: assignmentList });\r\n                } else {\r\n                    console.log(\"No assignemnts found\");\r\n                }\r\n            }, {\r\n                onlyOnce: true\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        // Creates assignemnts cards\r\n        return (\r\n            this.state.assignmentsList.map(item => \r\n                <div  id=\"card\">\r\n                    <h2 className=\"title card-title h5\">{item.title}</h2>\r\n                    <section>\r\n                    <p> <Badge pill  bg=\"success\">{item.className}</Badge> | \r\n                   <Badge pill  bg=\"danger\">{item.dueDate}</Badge>\r\n                    </p>\r\n                   <p> {item.summary} </p>\r\n                \r\n                      \r\n                    <Button variant=\"secondary class-more-btn\"><Link to={`/assignmentDetails/${item.assignmentID}/${item.classID}/${this.props.euid}`}>+ More</Link></Button>\r\n                    </section>\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport Footer from \"./Footer\";\r\nimport Sidenav from \"./Sidenav\";\r\nimport ListClasses from \"./Classes/ListClasses\";\r\nimport Assignments from \"./Assignments/Assignments\";\r\nexport default class Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n            <Sidenav role=\"student\" euid={this.props.match.params.euid}/>\r\n        <Container>\r\n        \r\n          \r\n        \r\n          <Row className=\"theme_body\">\r\n          <div className=\"big-title\">\r\n\t\t      <h3 className=\"big_title\">Classes</h3>\r\n     \r\n                <div> <ListClasses role=\"student\" euid= {this.props.match.params.euid}></ListClasses></div>\r\n</div>\r\n<div className=\"big-title\">\r\n\t\t      <h3 className=\"big_title\">Assignments</h3>\r\n\t\t\t\r\n                <div className=\"assignment-cards\"> <Assignments euid= {this.props.match.params.euid} /></div>\r\n</div>\r\n          </Row>\r\n          <Row>\r\n              <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ListGroup from \"react-bootstrap/Accordion\";\r\n\r\nimport \"../../../firebase\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class RessourceItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ressourceList: [] };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let ressourceList = [];\r\n\r\n    //get list of ressources\r\n    get(child(dbRef, `ressources`))\r\n      .then(\r\n        (snapshot) => {\r\n          let moduleID = this.props.moduleID;\r\n          console.log(\"searching for ressources\" + moduleID);\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              // console.log(\"found 1\"+itemVal.moduleID);\r\n              if (itemVal.moduleID == moduleID) {\r\n                console.log(\"found :\" + moduleID);\r\n                ressourceList.push(itemVal);\r\n              }\r\n            });\r\n            this.setState({ ressourceList: ressourceList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return this.state.ressourceList.map((ressource_item) => (\r\n      <div className=\"ressources\">\r\n        <ListGroup>\r\n          <ListGroup.Item>\r\n            {\" \"}\r\n            <i\r\n              className={`fa fa-${\r\n                ressource_item.typeID === 1 ? \"file\" : \"external-link\"\r\n              }`}\r\n            ></i>\r\n           {/*if the ressource type is file */}\r\n\r\n            {ressource_item.typeID === 1 ? (\r\n              <Link\r\n                to={`/ressourceDetails/${ressource_item.ressourceID}/${this.props.moduleID}/${this.props.classID}/${this.props.euid}`}\r\n              >\r\n                {ressource_item.title}{\" \"}\r\n              </Link>\r\n            ) : (\r\n                /*if the ressource type is external link */\r\n              <a href={ressource_item.description} target=\"_blank\" rel=\"noreferrer\">\r\n                {ressource_item.title}{\" \"}\r\n              </a>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport   \"../../../firebase\";\r\n\r\nimport Ressourcetem from './RessourceItem';\r\n\r\nexport default class ListRessources extends Component {\r\n\r\n    render() {\r\n        \r\n       \r\n        return (\r\n           <div>\r\n\r\n                <Ressourcetem classID ={this.props.classID} moduleID={this.props.moduleID} euid={this.props.euid}></Ressourcetem>\r\n     \r\n           </div>\r\n          \r\n\r\n\r\n            );\r\n        \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\n\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\n\r\nimport ListRessources from './Ressources/ListRessources';\r\n\r\nexport default class ModuleItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {moduleList : [] };\r\n\r\n        }\r\n        componentDidMount() {\r\n            \r\n            const dbRef = ref(getDatabase());\r\n            let moduleList = [];\r\n           \r\n\r\n    //get list of modules\r\n    get(child(dbRef, `modules`)).then((snapshot) => {\r\n     \r\n      let classID = this.props.classID;\r\n      console.log(\"searching for modules\"+classID);\r\n      if (snapshot.exists()) {\r\n        snapshot.forEach(function (item) {\r\n        \r\n          var itemVal = item.val();\r\n         // console.log(\"found 1\"+itemVal.classID);\r\n          if(itemVal.classID == classID && itemVal.publishedID == 1)\r\n          {\r\n           \r\n            moduleList.push(itemVal);\r\n          }\r\n        \r\n         \r\n        });\r\n        this.setState({ moduleList: moduleList });\r\n      } else {\r\n        console.log(\"No data available\");\r\n      }\r\n    }, {\r\n      onlyOnce: true\r\n    }).catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n            \r\n        \r\n    render() {\r\n        \r\n       \r\n        return (\r\n           \r\n            this.state.moduleList.map((module_item) =>\r\n              <div className=\"modules\">\r\n            <Accordion defaultActiveKey=\"0\" flush>\r\n            <Accordion.Item eventKey=\"0\">\r\n              <Accordion.Header>{module_item.title}</Accordion.Header>\r\n              <Accordion.Body>\r\n            <ListRessources  classID={this.props.classID} moduleID={module_item.moduleID} euid={this.props.euid}></ListRessources>\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n            </Accordion>\r\n            </div>\r\n               ));\r\n        \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport   \"../../firebase\";\r\n\r\nimport ModuleItem from './ModuleItem';\r\n\r\nexport default class ListModules extends Component {\r\n\r\n    render() {\r\n        \r\n       \r\n        return (\r\n           <>\r\n\r\n                <ModuleItem euid={this.props.euid} classID={this.props.classID}></ModuleItem>\r\n     \r\n           </>\r\n          \r\n\r\n\r\n            );\r\n        \r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ClassNav from \"./ClassNav\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport ListModules from \"../Modules/ListModules\";\r\nexport default class ClassDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { classTitle: \"\" ,classSection :\"\" };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    //get  classe title\r\n\r\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n          \r\n            if (\r\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\r\n            ) {\r\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\r\n              this.setState({ classSection: snapshot.child(\"section\").val() });\r\n            }\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n    \r\n       <Sidenav   euid={this.props.match.params.euid} />\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col xs lg=\"2\">\r\n          \r\n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"1\"></ClassNav>\r\n            </Col>\r\n            <Col> <h3 className=\"big_title\">{this.state.classTitle} Section {this.state.classSection}</h3>\r\n           \r\n            <ListModules classID={this.props.match.params.classId} euid={this.props.match.params.euid}></ListModules>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Breadcrumb,\r\n  Badge,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ClassNav from \"../Classes/ClassNav\";\r\nimport \"../../firebase\";\r\n//import \"font-awesome/css/font-awesome.min.css\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class AssignmentDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { description: \"\", title: \"\", dueDate: \"\", className: \"\" };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    let title = \"\";\r\n    let description = \"\";\r\n    let dueDate = \"\";\r\n    let points = \"\";\r\n    let className = \"\";\r\n    //get list of ressources\r\n    get(child(dbRef, `assignments`))\r\n      .then(\r\n        (snapshot) => {\r\n          let assignmentID = this.props.match.params.assignmentID;\r\n          console.log(\"searching for assignments\" + assignmentID);\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              //  console.log(\"ressource \"+ressourceID);\r\n              if (itemVal.assignmentID == assignmentID) {\r\n                description = itemVal.description;\r\n                title = itemVal.title;\r\n                dueDate = itemVal.dueDate;\r\n                points = itemVal.points;\r\n                className = itemVal.className;\r\n              }\r\n            });\r\n            this.setState({ description: description });\r\n            this.setState({ title: title });\r\n            this.setState({ dueDate: dueDate });\r\n            this.setState({ points: points });\r\n            this.setState({ className: className });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Sidenav euid={this.props.match.params.euid} />\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col xs lg=\"2\">\r\n              <ClassNav\r\n                euid={this.props.match.params.euid}\r\n                classId={this.props.match.params.classId}\r\n                isActive=\"3\"\r\n              ></ClassNav>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"assignment\">\r\n                <Breadcrumb>\r\n                  <Breadcrumb.Item>\r\n                    <Link\r\n                      to={`/classDetails/${this.props.match.params.classId}/${this.props.match.params.euid}`}\r\n                    >\r\n                      Class\r\n                    </Link>\r\n                  </Breadcrumb.Item>\r\n                  <Breadcrumb.Item>\r\n                    <Link\r\n                      to={`/assignmentListsByClass/${this.props.match.params.classId}/${this.props.match.params.euid}`}\r\n                    >\r\n                      Assignments {this.props.match.params.moduleId}\r\n                    </Link>\r\n                  </Breadcrumb.Item>\r\n                  <Breadcrumb.Item active>{this.state.title}</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n\r\n                <Accordion defaultActiveKey=\"0\" flush>\r\n                  <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header>{this.state.title}</Accordion.Header>\r\n                    <Accordion.Body>\r\n                      <Row>\r\n                        <Col>\r\n                          <span Style=\"font-weight: bold;color: red;\">\r\n                            {\" \"}\r\n                            <i className=\"fa fa-calendar-plus-o\"></i>Due Date :\r\n                          </span>{\" \"}\r\n                          <Badge bg=\"secondary\">{this.state.dueDate}</Badge> |    <Badge bg=\"info\">{this.state.className}</Badge>\r\n                        </Col>\r\n                      </Row>\r\n                    \r\n                      <Row>\r\n                        <p>{this.state.description}</p>\r\n                      </Row>\r\n                      <Button variant=\"primary\">Submit assignment</Button>\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                </Accordion>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col,Alert,Button } from \"react-bootstrap\";\r\nimport Footer from \"./Footer\";\r\nimport Sidenav from \"./Sidenav\";\r\nimport ListClasses from \"./Classes/ListClasses\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class DashboardTeacher extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n             <Sidenav  role=\"teacher\" euid={this.props.match.params.euid} />\r\n        <Container>\r\n        \r\n        \r\n        \r\n          <Row className=\"theme_body\">\r\n            <div>\r\n            <Col className=\"welcome_box\">\r\n<Alert key=\"welcome\" variant=\"secondary\">\r\n<h4>Welcome</h4>\r\n<p>\r\n\r\nAww yeah, you successfully read this important alert message.\r\n</p>\r\n<hr/>\r\n<div className=\"d-flex justify-content-end\">\r\n<Button variant=\"primary\"><Link to={`/rollCall/${this.props.match.params.euid}`}  className=\"white\">\r\n<i class=\"fa fa-hand-paper-o\" aria-hidden=\"true\"></i> Roll Call\r\n          </Link></Button> <Button variant=\"primary\"><Link className=\"white\" to={`/newClass/${this.props.match.params.euid}`}>\r\n          <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Manage Classes\r\n          </Link></Button>\r\n          <Button variant=\"primary\"><Link className=\"white\" to={`/manageAssignment/${this.props.match.params.euid}`}>\r\n          <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Manage Assignments\r\n          </Link></Button>\r\n        </div>\r\n\r\n  </Alert>\r\n\r\n</Col>\r\n\r\n              </div>\r\n          <div className=\"big-title\">\r\n\t\t      <h3 className=\"big_title\">Classes</h3>\r\n\t\t\t\r\n                <div> <ListClasses role=\"teacher\" euid={this.props.match.params.euid}></ListClasses></div>\r\n</div>\r\n\r\n          </Row>\r\n          <Row>\r\n              <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ColorPicker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n    this.state = { selectedColour :\"\"\r\n    };\r\n    this.props.onSelectcolor(this.state.selectedColour);\r\n}\r\n    setSelectedColour(colour) {\r\n\t\tthis.setState({ selectedColour: colour });\r\n\t}\r\n    render() {\r\n        const defaultColours = [\r\n            '#FF1654',\r\n            '#247BA0',\r\n            '#70C1B3',\r\n            '#92b300',\r\n            '#CBB1DB',\r\n            '#C1BF70',\r\n            '#add8e6',\r\n            '#ffc1cb',\r\n            '#67d8f3',\r\n            '#f3af67'\r\n        ];\r\n        \r\n        return (\r\n           \r\n         \r\n            <ul className=\"icons\">\r\n                {defaultColours.map((colour, index) => {\r\n                    return (\r\n                        <li key={index} onClick={() =>{ this.setSelectedColour(colour);   this.props.onSelectcolor(colour);}}>\r\n                            <span className={`dot color border-radius ${this.state.selectedColour === colour ? 'selected' : ''}`} style={{ backgroundColor: colour}}></span>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Table,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set, remove } from \"firebase/database\";\r\nimport ColorPicker from \"../Tools/ColorPicker\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class ManageClasses extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      classList: [],\r\n      show: false,\r\n      openedDialog: -1,\r\n      nb_classes: 0,\r\n      actionType: \"\",\r\n      classColor: \"\",\r\n      showHide: false,\r\n      studentList: [],\r\n      studentListUI: [],\r\n      studentsID: [],\r\n      nbclasses: 0,\r\n      classID: \"\",\r\n      description: \"\",\r\n      meetingDates: \"\",\r\n      title: \"\",\r\n      published: 0,\r\n      roomNumber: \"\",\r\n      seats: 0,\r\n      section: \"\",\r\n      session: 2,\r\n      students: [],\r\n      teacherID: this.props.teacherID,\r\n      hidefeedback: \"none\",\r\n    };\r\n  }\r\n\r\n  openModal = (classid, actionType) => {\r\n    this.setState({\r\n      openedDialog: classid,\r\n      actionType: actionType,\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      openedDialog: null,\r\n    });\r\n  };\r\n  handleColorCode = (colorValue) => {\r\n    this.setState({ classColor: colorValue });\r\n  };\r\n  //method to update the state variables with the user inputs\r\n  handleClassInput = (e) => {\r\n    const name = e.target.name;\r\n\r\n    const value = e.target.value;\r\n\r\n    this.setState({ [name]: value });\r\n    console.log(\"Name: \" + name + \"value:\" + value);\r\n  };\r\n  //handle popup\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n\r\n  //method to remove class to the database\r\n  handleRemoveClass = (classID) => {\r\n    const db = getDatabase();\r\n    ///\r\n\r\n    if (window.confirm(\"Are you sure you wish to delete this item?\")) {\r\n      remove(ref(db, \"classes/\" + classID))\r\n        .then(() => {\r\n          window.location.reload(false);\r\n          document.getElementById(\"feedback\").style.display = \"block\";\r\n          document.getElementById(\"feedback\").innerText =\r\n            \"Class \" + classID + \" remove successfully!\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Failed to remove class :\" + classID + \" error :\" + error\r\n          );\r\n        });\r\n    }\r\n\r\n    ///\r\n  };\r\n  //method to update class to the database\r\n  handleUpdateClass = (classID) => {\r\n    const db = getDatabase();\r\n    set(ref(db, \"classes/\" + classID), {\r\n      classID: classID,\r\n      description: document.getElementById(\"description_val\").value,\r\n      meetingDates: document.getElementById(\"meetingDates_val\").value,\r\n      name: document.getElementById(\"name_val\").value,\r\n      published: 1,\r\n      roomNumber: document.getElementById(\"roomNumber_val\").value,\r\n      seats: document.getElementById(\"seats_val\").value,\r\n      section: document.getElementById(\"section_val\").value,\r\n      session: document.getElementById(\"session_val\").value,\r\n      students: document.getElementById(\"studentIDs_val\").value.split(\",\"),\r\n      teacherID: this.props.teacherID,\r\n      classColor: this.state.classColor,\r\n    })\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to save data new class!\" + error);\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let classList = [];\r\n    let teacher = this.props.teacherID;\r\n\r\n    //get list of classes\r\n    get(child(dbRef, `classes`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              console.log(\"Teacher ID\" + itemVal.teacherID + \"---\" + teacher);\r\n              if (itemVal.teacherID == teacher) {\r\n                console.log(\"Teacher ID\" + itemVal.teacherID);\r\n                classList.push(itemVal);\r\n              }\r\n            });\r\n            // this.setState({nb_classes: nb_classes});\r\n            this.setState({ classList: classList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Alert\r\n          key=\"feedback\"\r\n          id=\"feedback\"\r\n          variant=\"\"\r\n          Style=\"display :\"\r\n          {...this.state.hidefeedback}\r\n        ></Alert>\r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Class</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.classList.map((class_item) => (\r\n              <tr>\r\n                <td>{class_item.classID}</td>\r\n                <td>{class_item.name}</td>\r\n                <td width=\"37%\">\r\n                  {\" \"}\r\n                  <Button\r\n                    variant=\"primary class-more-btn\"\r\n                    onClick={() =>\r\n                      this.openModal(class_item.classID, \"details\")\r\n                    }\r\n                  >\r\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\r\n                    Details\r\n                  </Button>{\" \"}\r\n                  <DropdownButton title=\"Manage\" id=\"bg-nested-dropdown\">\r\n                    <Dropdown.Item\r\n                      eventKey=\"1\"\r\n                      onClick={() =>\r\n                        this.openModal(class_item.classID, \"update\")\r\n                      }\r\n                    >\r\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\r\n                      Update\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">\r\n                      <i class=\"fa fa-address-book\" aria-hidden=\"true\"></i> Add\r\n                      Student\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">\r\n                      <i class=\"fa fa-address-book\" aria-hidden=\"true\"></i>\r\n                      <Link to={`/manageModules/`+class_item.classID+`/`+this.props.teacherID}>\r\n                      Manage Modules\r\n </Link> \r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      eventKey=\"2\"\r\n                      onClick={() => this.handleRemoveClass(class_item.classID)}\r\n                    >\r\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\r\n                    </Dropdown.Item>\r\n                  </DropdownButton>\r\n                </td>\r\n                <Modal\r\n                  show={this.state.openedDialog === class_item.classID}\r\n                  onHide={this.closeModal}\r\n                >\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>{class_item.name}</Modal.Title>\r\n                  </Modal.Header>\r\n\r\n                  <Modal.Body>\r\n                    <Form\r\n                      onSubmit={() =>\r\n                        this.handleUpdateClass(class_item.classID)\r\n                      }\r\n                    >\r\n                      <Form.Group id=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"name_val\"\r\n                          defaultValue={class_item.name}\r\n                          required\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"description\">\r\n                        <Form.Label>Description</Form.Label>\r\n\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"description_val\"\r\n                          defaultValue={class_item.description}\r\n                          maxLength =\"124\"\r\n                          required\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"section\">\r\n                        <Form.Label>Section</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"section_val\"\r\n                          defaultValue={class_item.section}\r\n                          required\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"session\">\r\n                        <Form.Label>Session</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"session_val\"\r\n                          required\r\n                          defaultValue={class_item.session}\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"roomNumber\">\r\n                        <Form.Label>Room Number</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"roomNumber_val\"\r\n                          required\r\n                          defaultValue={class_item.roomNumber}\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"seats\">\r\n                        <Form.Label>Seats</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"seats_val\"\r\n                          required\r\n                          defaultValue={class_item.seats}\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"meetingDates\">\r\n                        <Form.Label>Meeting Day</Form.Label>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          id=\"meetingDates_val\"\r\n                          required\r\n                          defaultValue={class_item.meetingDates}\r\n                          readOnly={\r\n                            this.state.actionType === \"update\" ? false : true\r\n                          }\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <input\r\n                        type=\"hidden\"\r\n                        id=\"studentIDs_val\"\r\n                        defaultValue={class_item.students}\r\n                      ></input>\r\n                      <Form.Group\r\n                        id=\"class-color\"\r\n                        Style={\r\n                          this.state.actionType === \"update\"\r\n                            ? \"display:block\"\r\n                            : \"display:none\"\r\n                        }\r\n                      >\r\n                        <Form.Label>Pick a color</Form.Label>\r\n\r\n                        <ColorPicker\r\n                          onSelectcolor={this.handleColorCode}\r\n                        ></ColorPicker>\r\n                      </Form.Group>\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        disabled={\r\n                          this.state.actionType === \"update\" ? false : true\r\n                        }\r\n                        type=\"submit\"\r\n                      >\r\n                        Save Changes\r\n                      </Button>\r\n                    </Form>\r\n                  </Modal.Body>\r\n                </Modal>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ManageClasses from \"./ManageClasses\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set, } from \"firebase/database\";\r\nimport ColorPicker from \"../Tools/ColorPicker\";\r\n\r\nexport default class ClassNew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      studentList: [],\r\n      studentListUI: [],\r\n      studentsID: [],\r\n      classList: [],\r\n      showHide: false,\r\n      openedDialog: -1,\r\n      nbclasses:0,\r\n      classID: \"\",\r\n      description: \"\",\r\n      meetingDates: \"\",\r\n      title: \"\",\r\n      published: 0,\r\n      roomNumber: \"\",\r\n      seats: 0,\r\n      section: \"\",\r\n      session: 2,\r\n      classColor:\"\",\r\n      students: [],\r\n      teacherID: this.props.match.params.euid,\r\n    };\r\n  }\r\n\r\n  //handle the student list popup\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n  //if student is selected, add it to the studentsID array\r\n  handleCheckboxChange = (event) => {\r\n    let newArray = [...this.state.studentsID, event.target.id];\r\n\r\n    if (this.state.studentsID.includes(event.target.id)) {\r\n      newArray = newArray.filter((day) => day !== event.target.id);\r\n    }\r\n    this.setState({\r\n      studentsID: newArray,\r\n    });\r\n  };\r\n\r\n  //method to update the state variables with the user inputs\r\n  handleClassInput = (e) => {\r\n    const name = e.target.name;\r\n\r\n    const value = e.target.value;\r\n\r\n    this.setState({ [name]: value });\r\n    console.log(\"Name: \" + name + \"value:\" + value);\r\n  };\r\n  //method to add class to the database\r\n  handleAddClass= () => {\r\n    const db = getDatabase();\r\n    set(ref(db, \"classes/\"+this.state.classID), {\r\n      classID: this.state.classID,\r\n      description: this.state.description,\r\n      meetingDates: this.state.meetingDates,\r\n      name: this.state.title,\r\n      published: this.state.published,\r\n      roomNumber: this.state.roomNumber,\r\n      seats: this.state.seats,\r\n      section: this.state.section,\r\n      session: this.state.session,\r\n      students: this.state.studentsID,\r\n      teacherID: this.props.match.params.euid,\r\n      classColor:this.state.classColor\r\n    }).then(() => {\r\n          \r\n      window.location.reload(false);\r\n    }).catch((error) => {\r\n      console.log(\"Failed to save data new class!\" + error);\r\n    });\r\n  }\r\n  handleColorCode =(colorValue)  =>{\r\n    this.setState({classColor: colorValue});\r\n}\r\n  //get List of students\r\n\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let studentList = [];\r\n\r\n    //get list of students\r\n    get(child(dbRef, `users`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              studentList.push(itemVal);\r\n            });\r\n            this.setState({ studentList: studentList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n      \r\n  }\r\n  \r\n  render() {\r\n    //create UI to list list of students\r\n    const studentListUI = this.state.studentList.map((student_item) => (\r\n      <ListGroup.Item as=\"li\">\r\n        <Form.Check\r\n          inline\r\n          type=\"checkbox\"\r\n          onChange={this.handleCheckboxChange}\r\n          id={student_item.euid}\r\n          checked={this.state.studentsID.includes(student_item.euid)}\r\n        />\r\n        {student_item.firstname} -- {student_item.euid}\r\n      </ListGroup.Item>\r\n    ));\r\n    //\r\n    return (\r\n      <div>\r\n        <Sidenav role=\"teacher\"  euid={this.props.match.params.euid}/>\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col>\r\n              {\" \"}\r\n              <div className=\"big-title\">\r\n                <h3 className=\"big_title\">Classes</h3>\r\n\r\n                <div>\r\n               \r\n                  <ManageClasses teacherID={this.state.teacherID}></ManageClasses>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col Style=\"Background:#eee\">\r\n              {\" \"}\r\n              <div className=\"big-title\">\r\n                <h3 className=\"big_title\">New Classes</h3>\r\n              \r\n                <Form    onSubmit={this.handleAddClass}>\r\n                <Form.Group id=\"classID\">\r\n                    <Form.Label>Class Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"classID\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"title\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                       as=\"textarea\"\r\n                    \r\n                       style={{ height: '70px' }}\r\n                      name=\"description\"\r\n                      maxLength= \"124\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"section\">\r\n                    <Form.Label>Section</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"section\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"session\">\r\n                    <Form.Label>Session</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      name=\"session\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"roomNumber\">\r\n                    <Form.Label>Room Number</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"roomNumber\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"seats\">\r\n                    <Form.Label>Seats</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      name=\"seats\"\r\n                      required\r\n                      onChange={this.handleClassInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"meetingDates\">\r\n                    <Form.Label>Meeting Day</Form.Label>\r\n                 \r\n                    <Form.Select   name=\"meetingDay\" defaultValue=\"\"  required\r\n                      onChange={this.handleClassInput}>\r\n        <option>Choose...</option>\r\n        <option value=\"MWF\">MWF</option>\r\n        <option value=\"TTH\">TTH</option>\r\n      </Form.Select>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"class-color\">\r\n                    <Form.Label>Pick a color</Form.Label>\r\n                \r\n                   <ColorPicker onSelectcolor={this.handleColorCode}></ColorPicker>\r\n              \r\n                   <Button\r\n                      variant=\"outline-secondary\" className=\"add-student-btn\"\r\n                      onClick={() => this.handleModalShowHide()}\r\n                    >\r\n                      Add Students\r\n                    </Button>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"action\"  Style=\"padding-left: 15px\">                   \r\n                    <Button\r\n                      className=\"w-100 btn-secondary\"\r\n                      size=\"lm\"\r\n                      type=\"submit\"\r\n                   \r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n            <Modal show={this.state.showHide}>\r\n              <Modal.Header\r\n                closeButton\r\n                onClick={() => this.handleModalShowHide()}\r\n              >\r\n                <Modal.Title>Students</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>{studentListUI}</Modal.Body>\r\n              <Modal.Footer>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => this.handleModalShowHide()}\r\n                >\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => this.handleModalShowHide()}\r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { React, useState, Component }  from \"react\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport Footer from \"../Footer\";\r\nimport ClassNav from \"../Classes/ClassNav\";\r\nimport { Container, Row, Col , Table, Card} from \"react-bootstrap\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\n//import { Link, useHistory } from \"react-router-dom\";\r\nimport \"../../css/style.css\";\r\n\r\n\r\nexport default class Grades extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { classTitle: \"\" ,classSection :\"\" };\r\n      }\r\n      componentDidMount() {\r\n        const dbRef = ref(getDatabase());\r\n    \r\n        //get  class title\r\n        get(child(dbRef, \"classes/\" + this.props.match.params.classId))\r\n          .then(\r\n            (snapshot) => {\r\n              if (snapshot.exists()) {\r\n              \r\n                if (\r\n                  this.props.match.params.classId == snapshot.child(\"classID\").val()\r\n                ) {\r\n                  this.setState({ classTitle: snapshot.child(\"name\").val() });\r\n                  this.setState({ classSection: snapshot.child(\"section\").val() });\r\n                }\r\n              } else {\r\n                console.log(\"No data available\");\r\n              }\r\n            },\r\n            {\r\n              onlyOnce: true,\r\n            }\r\n          )\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      }\r\n\r\n    render() {\r\n    return(\r\n        <>\r\n        <Sidenav euid={this.props.match.params.euid} isActive=\"2\"/>\r\n\r\n        <Container>\r\n\r\n          <Row className=\"theme_body\">\r\n\r\n            <Col xs lg=\"2\">\r\n            <ClassNav   euid={this.props.match.params.euid} classId={this.props.match.params.classId} isActive=\"2\"></ClassNav>\r\n            </Col>\r\n\r\n            <Col>\r\n            <h3 className=\"big_title\">{this.state.classTitle} Section {this.state.classSection}</h3>\r\n            <Row>\r\n            <Col lg= {6} md ={12}>\r\n                <Table striped hover size =\"sm\" className=\"gradesTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Assignment Name</th>\r\n                            <th>Due Date</th>\r\n                            <th>Score</th>\r\n                            <th>Out of</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>One</td>\r\n                            <td>12/12/1212</td>\r\n                            <td>1</td>\r\n                            <td>1</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Two</td>\r\n                            <td>temp</td>\r\n                            <td>1</td>\r\n                            <td>1</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Three</td>\r\n                            <td>temp</td>\r\n                            <td>1</td>\r\n                            <td>1</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n            <Col lg={{ span: 4 , offset: 1 }} md={12}>\r\n                <Card>\r\n                <h4>Grade Distribution</h4>\r\n                \r\n                </Card>\r\n            </Col>\r\n            </Row>\r\n            \r\n            </Col>\r\n\r\n          </Row>\r\n\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n\r\n        </Container>\r\n        \r\n        </>\r\n    );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport ListGroup from \"react-bootstrap/Accordion\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ListAssignmentByClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {assignmentList : [] };\r\n\r\n        }\r\n        componentDidMount() {\r\n            \r\n            const dbRef = ref(getDatabase());\r\n            let assignmentList = [];\r\n           \r\n\r\n    //get list of assignments\r\n    get(child(dbRef, `assignments`)).then((snapshot) => {\r\n     \r\n      let classID = this.props.classID;\r\n      console.log(\"searching for assignments\"+classID);\r\n      if (snapshot.exists()) {\r\n        snapshot.forEach(function (item) {\r\n        \r\n          var itemVal = item.val();\r\n         // console.log(\"found 1\"+itemVal.classID);\r\n         //itemVal.published == 1\r\n          if(itemVal.classID == classID )\r\n          {\r\n           \r\n            assignmentList.push(itemVal);\r\n          }\r\n        \r\n         \r\n        });\r\n        this.setState({ assignmentList: assignmentList });\r\n      } else {\r\n        console.log(\"No data available\");\r\n      }\r\n    }, {\r\n      onlyOnce: true\r\n    }).catch((error) => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n            \r\n        \r\n    render() {\r\n        \r\n       \r\n        return (\r\n           \r\n            this.state.assignmentList.map((assignment_item) =>\r\n              <div className=\"assignments-list\">\r\n       \r\n        <ListGroup>\r\n          <ListGroup.Item>\r\n          <i className=\"fa fa-pencil-square-o\"></i>\r\n              <Link\r\n                to={`/assignmentDetails/${assignment_item.assignmentID}/${this.props.classID}/${this.props.euid}`}\r\n              >\r\n                {assignment_item.title}\r\n         </Link>\r\n         <br/>\r\n         <i className=\"fa fa-calendar-plus-o\"></i> Due Date :  <span Style=\"color:red\">{assignment_item.dueDate}</span>|  Possible points :{assignment_item.points} \r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n            </div>\r\n               ));\r\n        \r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ClassNav from \"../Classes/ClassNav\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\n\r\nimport ListAssignmentByClass from \"./ListAssignmentByClass\";\r\nexport default class AssignmentList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { classTitle: \"\" ,classSection :\"\" };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    //get  classe title\r\n\r\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n          \r\n            if (\r\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\r\n            ) {\r\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\r\n              this.setState({ classSection: snapshot.child(\"section\").val() });\r\n            }\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n    \r\n       <Sidenav euid={this.props.match.params.euid}/>\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col xs lg=\"2\">\r\n          \r\n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"3\"></ClassNav>\r\n            </Col>\r\n            <Col> <h3 className=\"big_title\">Assignments for {this.state.classTitle} Section {this.state.classSection}</h3>\r\n           \r\n            <ListAssignmentByClass classID={this.props.match.params.classId} euid={this.props.match.params.euid}></ListAssignmentByClass>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ClassNav from \"../Classes/ClassNav\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\n\r\nexport default class PeopleByClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { classTitle: \"\" ,classSection :\"\" };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    //get  classe title\r\n\r\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n          \r\n            if (\r\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\r\n            ) {\r\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\r\n              this.setState({ classSection: snapshot.child(\"section\").val() });\r\n            }\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n    \r\n       <Sidenav euid={this.props.match.params.euid}/>\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col xs lg=\"2\">\r\n          \r\n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"5\"></ClassNav>\r\n            </Col>\r\n            <Col> <h3 className=\"big_title\">People for {this.state.classTitle} Section {this.state.classSection}</h3>\r\n           \r\n         TODO\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ClassNav from \"../Classes/ClassNav\";\r\nimport { getDatabase, ref, get, child } from \"firebase/database\";\r\n\r\nexport default class AttendanceByClass extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { classTitle: \"\" ,classSection :\"\" };\r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n\r\n    //get  classe title\r\n\r\n    get(child(dbRef, \"classes/\" + this.props.match.params.classId))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n          \r\n            if (\r\n              this.props.match.params.classId == snapshot.child(\"classID\").val()\r\n            ) {\r\n              this.setState({ classTitle: snapshot.child(\"name\").val() });\r\n              this.setState({ classSection: snapshot.child(\"section\").val() });\r\n            }\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n    \r\n       <Sidenav euid={this.props.match.params.euid}/>\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col xs lg=\"2\">\r\n          \r\n              <ClassNav classId={this.props.match.params.classId} euid={this.props.match.params.euid} isActive=\"4\"></ClassNav>\r\n            </Col>\r\n            <Col> <h3 className=\"big_title\">Attendances for {this.state.classTitle} Section {this.state.classSection}</h3>\r\n           \r\n         TODO\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Table,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set, remove } from \"firebase/database\";\r\n\r\n\r\nexport default class ManageAssignment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      assignmentList : [],\r\n      showHide: false,\r\n      openedDialog: -1,\r\n      actionType: \"\",\r\n      assignmentID: \"\",\r\n      classID: \"\",\r\n      className: \"\",\r\n      description: \"\",\r\n      dueDate: \"\",\r\n      points: \"\",\r\n      published: 0,\r\n      summary: \"\",\r\n      title: \"\",\r\n      classList: [],\r\n      teacherID: this.props.teacherID,\r\n    };\r\n  }\r\n\r\n  openModal = (assignmentid, actionType) => {\r\n    this.setState({\r\n      openedDialog: assignmentid,\r\n      actionType: actionType,\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      openedDialog: null,\r\n    });\r\n  };\r\n  handleColorCode = (colorValue) => {\r\n    this.setState({ classColor: colorValue });\r\n  };\r\n    //method to update the state variables with the user inputs\r\n    handleAssignmentInput = (e) => {\r\n      const name = e.target.name;\r\n  \r\n      const value = e.target.value;\r\n  \r\n      this.setState({ [name]: value });\r\n      console.log(\"Name: \" + name + \"value:\" + value);\r\n    };\r\n  //handle popup\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n\r\n   //method to remove class to the database\r\n   handleRemoveClass = (assignmentID) => {\r\n    const db = getDatabase();\r\n    ///\r\n\r\n    if (window.confirm(\"Are you sure you wish to delete this item?\")) {\r\n      remove(ref(db, \"assignments/\" + assignmentID))\r\n        .then(() => {\r\n          window.location.reload(false);\r\n          document.getElementById(\"feedback\").style.display = \"block\";\r\n          document.getElementById(\"feedback\").innerText =\r\n            \"Assignment \" + assignmentID + \" remove successfully!\";\r\n        })\r\n        .catch((error) => {\r\n          console.log(\r\n            \"Failed to remove class :\" + assignmentID + \" error :\" + error\r\n          );\r\n        });\r\n    }\r\n\r\n    ///\r\n  };\r\n  //method to update assignment to the database\r\n  handleUpdateAssignment = (assignmentid) => {\r\n   //alert(document.getElementById('duedate_Val').value);\r\n    const db = getDatabase();\r\n    set(ref(db, \"assignments/\" + assignmentid), {\r\n      assignmentID:assignmentid,\r\n      description: document.getElementById('description_Val').value,\r\n      dueDate:document.getElementById('duedate_Val').value,\r\n      title:document.getElementById('title_Val').value,\r\n      published:1,\r\n      points: document.getElementById('points_Val').value,\r\n      summary: document.getElementById('summary_Val').value,\r\n      classID: document.getElementById('classID_Val').value,\r\n      teacher: this.props.teacherID\r\n    })\r\n      .then(() => {\r\n       // window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to save data new class!\" + error);\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let classList = [];\r\n    let assignmentList = [];\r\n    let teacher = this.props.teacherID;\r\n   \r\n    //get list of classes\r\n    get(child(dbRef, `classes`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n          \r\n              var itemVal = item.val();\r\n              console.log(\"Teacher ID\" + itemVal.teacherID + \"---\" + teacher);\r\n              if (itemVal.teacherID == teacher) {\r\n                console.log(\"Teacher ID\" + itemVal.teacherID);\r\n                classList.push(itemVal);\r\n              }\r\n            });\r\n            // this.setState({nb_classes: nb_classes});\r\n            this.setState({ classList: classList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n     //get list of assignments\r\n     get(child(dbRef, `assignments`))\r\n     .then(\r\n       (snapshot) => {\r\n         if (snapshot.exists()) {\r\n           snapshot.forEach(function (item) {\r\n         \r\n             var itemVal = item.val();\r\n            \r\n             if (itemVal.teacher == teacher) {\r\n            \r\n               assignmentList.push(itemVal);\r\n             }\r\n           });\r\n           // this.setState({nb_classes: nb_classes});\r\n           this.setState({ assignmentList: assignmentList });\r\n         } else {\r\n           console.log(\"No data available\");\r\n         }\r\n       },\r\n       {\r\n         onlyOnce: true,\r\n       }\r\n     )\r\n     .catch((error) => {\r\n       console.error(error);\r\n     });\r\n\r\n  \r\n  }\r\n\r\n  render() {\r\n  \r\n    return (\r\n      <div>\r\n      \r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Class</th>\r\n              <th>Assignment</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.assignmentList.map((assignment_item) => (\r\n              <tr>\r\n                 \r\n                <td>{assignment_item.assignmentID}</td>\r\n                <td>{assignment_item.classID}</td>\r\n                <td>{assignment_item.title}</td>\r\n                <td width=\"37%\">\r\n                  {\" \"}\r\n                  <Button\r\n                    variant=\"secondary class-more-btn\"\r\n                    onClick={() =>\r\n                      this.openModal(assignment_item.assignmentID, \"details\")\r\n                    }\r\n                  >\r\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\r\n                    Details\r\n                  </Button>{\" \"}\r\n                  <DropdownButton title=\"Manage\" >\r\n                    <Dropdown.Item\r\n                      eventKey=\"1\"\r\n                      onClick={() =>\r\n                        this.openModal(assignment_item.assignmentID, \"update\")\r\n                      }\r\n                    >\r\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\r\n                      Update\r\n                    </Dropdown.Item>\r\n                   \r\n                    <Dropdown.Item eventKey=\"2\"    onClick={() => this.handleRemoveClass(assignment_item.assignmentID)}>\r\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\r\n                    </Dropdown.Item>\r\n                  </DropdownButton>\r\n                </td>\r\n                <Modal\r\n                  show={this.state.openedDialog === assignment_item.assignmentID}\r\n                  onHide={this.closeModal}\r\n                >\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>{assignment_item.title}</Modal.Title>\r\n                  </Modal.Header>\r\n\r\n                  <Modal.Body>\r\n                  <Form  onSubmit={() => this.handleUpdateAssignment(assignment_item.assignmentID)}>\r\n                <Form.Group id=\"classID\">\r\n                  \r\n                  <Form.Label>Class Name</Form.Label>\r\n                  <Form.Control\r\n                      type=\"text\"\r\n                      name=\"classID\"\r\n                      id= \"classID_Val\"\r\n                      defaultValue= {assignment_item.classID}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                      readOnly=\"true\"\r\n                    ></Form.Control>                  \r\n                    </Form.Group>\r\n           \r\n                  <Form.Group id=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      id= \"title_Val\"\r\n                      defaultValue= {assignment_item.title}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      id= \"description_Val\"\r\n                      defaultValue= {assignment_item.description}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"summary\">\r\n                    <Form.Label>Summary</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      name=\"summary\"\r\n                      id= \"summary_Val\"\r\n                      style={{ height: '100px' }}\r\n                      defaultValue= {assignment_item.summary}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"duedate\">\r\n                    <Form.Label>Due Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      name=\"duedate\"\r\n                      id= \"duedate_Val\"\r\n                      defaultValue= {assignment_item.dueDate}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"points\">\r\n                    <Form.Label>Points</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"points\"\r\n                      id= \"points_Val\"\r\n                      defaultValue= {assignment_item.points}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n<Form.Group id=\"published\">\r\n\r\n<Form.Check\r\n        type=\"checkbox\"\r\n        id= \"published\"\r\n        className=\"mb-2\"\r\n        label=\"Published\"\r\n      />\r\n  </Form.Group>\r\n  <Form.Group>\r\n  <Button    disabled={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                      variant=\"primary\"\r\n                     type = \"submit\"\r\n                    >\r\n                      Save Changes\r\n                    </Button>\r\n  </Form.Group>\r\n                \r\n                </Form>\r\n                  </Modal.Body>\r\n                \r\n                </Modal>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ManageAssignments from \"./ManageAssignment\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\r\n\r\nexport default class AssignmentNew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showHide: false,\r\n      openedDialog: -1,\r\n      assignmentID: \"\",\r\n      classID: \"\",\r\n      className: \"\",\r\n      description: \"\",\r\n      duedate: \"\",\r\n      points: \"\",\r\n      published: 0,\r\n      summary: \"\",\r\n      title: \"\",\r\n      classList: [],\r\n      teacherID: this.props.match.params.euid,\r\n    };\r\n  }\r\n\r\n  //handle the student list popup\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n  \r\n  //method to update the state variables with the user inputs\r\n  handleAssignmentInput = (e) => {\r\n    const name = e.target.name;\r\n\r\n    const value = e.target.value;\r\n\r\n    this.setState({ [name]: value });\r\n   // console.log(\"Name: \" + name + \"value:\" + value);\r\n  };\r\n  //method to add Assignment to the database\r\n  handleAddAssignment = (event) => {\r\n    const db = getDatabase();\r\n    set(ref(db, \"assignments/\" + this.state.assignmentID), {\r\n      assignmentID: this.state.assignmentID,\r\n      description: this.state.description,\r\n      title: this.state.title,\r\n      classID: this.state.classID,\r\n      dueDate: this.state.duedate,\r\n      published: this.state.published,\r\n      points: this.state.points,\r\n      summary: this.state.summary,\r\n      teacher: this.props.match.params.euid,\r\n    })\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to save data new Assignment!\" + error);\r\n      });\r\n      event.preventDefault();\r\n  };\r\n\r\n  //get List of classes\r\n\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let classList = [];\r\n\r\n    //get list of classes\r\n    get(child(dbRef, `classes`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              classList.push(itemVal);\r\n            });\r\n            this.setState({ classList: classList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n          //create nav nodes for classes\r\n          const listclasses = this.state.classList.map((class_item) =>\r\n        \r\n          <option value={class_item.classID}>\r\n            {class_item.classID} -- {class_item.name} </option>\r\n      );\r\n    return (\r\n      <div>\r\n        <Sidenav role=\"teacher\" euid={this.props.match.params.euid} />\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col>\r\n              {\" \"}\r\n              <div className=\"big-title\">\r\n                <h3 className=\"big_title\">Assignments</h3>\r\n\r\n                <div>\r\n                  <ManageAssignments\r\n                    teacherID={this.state.teacherID}\r\n                  ></ManageAssignments>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col Style=\"Background:#eee\">\r\n              {\" \"}\r\n              <div className=\"big-title\">\r\n                <h3 className=\"big_title\">New Assignments</h3>\r\n         \r\n                <Form  onSubmit={this.handleAddAssignment}>\r\n                <Form.Group id=\"classID\">\r\n                  \r\n                  <Form.Label>Class Name</Form.Label>\r\n                <Form.Select  name= \"classID\" aria-label=\"dropdown list of classes\"   onChange={this.handleAssignmentInput} required>\r\n                <option value=\"\">\r\n         Select Class</option>\r\n                  {listclasses}\r\n                  </Form.Select>\r\n                  </Form.Group>\r\n                <Form.Group id=\"assignmentID\">\r\n                  \r\n                    <Form.Label>Assignment Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"assignmentID\"\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"summary\">\r\n                    <Form.Label>Summary</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      name=\"summary\"\r\n                      style={{ height: '100px' }}\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"duedate\">\r\n                    <Form.Label>Due Date</Form.Label>\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      name=\"duedate\"\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"points\">\r\n                    <Form.Label>Points</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      name=\"points\"\r\n                      required\r\n                      onChange={this.handleAssignmentInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n<Form.Group id=\"published\">\r\n\r\n<Form.Check\r\n        type=\"checkbox\"\r\n        id=\"published\"\r\n        className=\"mb-2\"\r\n        label=\"Published\"\r\n      />\r\n  </Form.Group>\r\n                  <Form.Group id=\"action\" Style=\"padding-left: 15px\">\r\n                    <Button\r\n                      className=\"w-100 btn-secondary\"\r\n                      size=\"lm\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Table,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\r\n\r\n\r\nexport default class ManageModules extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      moduleList : [],\r\n      showHide: false,\r\n      openedDialog: -1,\r\n      actionType: \"\",\r\n      moduleID: \"\",\r\n      classID: \"\",\r\n      description: \"\",\r\n      published: 0,\r\n      title: \"\",\r\n      ressourcesList: [],\r\n      teacherID: this.props.teacherID,\r\n      sel_moduleID : \"\"\r\n    };\r\n  }\r\n\r\n  openModal = (moduleid, actionType) => {\r\n    this.setState({\r\n      openedDialog: moduleid,\r\n      actionType: actionType\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      openedDialog: null,\r\n    });\r\n  };\r\n  handleColorCode = (colorValue) => {\r\n    this.setState({ classColor: colorValue });\r\n  };\r\n    //method to update the state variables with the user inputs\r\n    handleModuleInput = (e) => {\r\n      const name = e.target.name;\r\n  \r\n      const value = e.target.value;\r\n  \r\n      this.setState({ [name]: value });\r\n      console.log(\"Name: \" + name + \"value:\" + value);\r\n    };\r\n  //handle popup\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n  //method to update module to the database\r\n  handleUpdateModule = (moduleid) => {\r\n    const db = getDatabase();\r\n    set(ref(db, \"modules/\" + moduleid), {\r\n      moduleID:moduleid,\r\n      description: document.getElementById('description_Val'+moduleid).value,\r\n    \r\n      title:document.getElementById('title_Val'+moduleid).value,\r\n      published:1,\r\n      classID:this.props.classID\r\n    })\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to save data new class!\" + error);\r\n      });\r\n  };\r\n  //method to get list of ressources by module\r\n  getRessources= (moduleid) => {\r\n    let ressourcesList = [];\r\n    const db = getDatabase();\r\n       //get list of ressources\r\n       get(ref(db, \"ressources/\" + moduleid))\r\n       .then(\r\n         (snapshot) => {\r\n           if (snapshot.exists()) {\r\n             snapshot.forEach(function (item) {\r\n               var itemVal = item.val();\r\n                ressourcesList.push(itemVal);\r\n             });\r\n           \r\n             this.setState({ ressourcesList: ressourcesList });\r\n           } else {\r\n             console.log(\"No data available\");\r\n           }\r\n         },\r\n         {\r\n           onlyOnce: true,\r\n         }\r\n       )\r\n       .catch((error) => {\r\n         console.error(error);\r\n       });\r\n \r\n  }\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let moduleList = [];\r\n    let classID = this.props.classID;\r\n   \r\n \r\n     //get list of modules\r\n     get(child(dbRef, `modules`))\r\n     .then(\r\n       (snapshot) => {\r\n         if (snapshot.exists()) {\r\n           snapshot.forEach(function (item) {\r\n         \r\n             var itemVal = item.val();\r\n            \r\n             if (itemVal.classID == classID) {\r\n            \r\n               moduleList.push(itemVal);\r\n             }\r\n           });\r\n           // this.setState({nb_classes: nb_classes});\r\n           this.setState({ moduleList: moduleList });\r\n         } else {\r\n           console.log(\"No data available\");\r\n         }\r\n       },\r\n       {\r\n         onlyOnce: true,\r\n       }\r\n     )\r\n     .catch((error) => {\r\n       console.error(error);\r\n     });\r\n\r\n  \r\n  }\r\n\r\n  render() {\r\n  \r\n    return (\r\n      <div>\r\n      \r\n        <Table striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Class</th>\r\n              <th>Module</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.moduleList.map((module_item) => (\r\n              <tr>\r\n                 \r\n                <td>{module_item.moduleID}</td>\r\n                <td>{module_item.classID}</td>\r\n                <td>{module_item.title}</td>\r\n                <td width=\"37%\">\r\n                  {\" \"}\r\n                  <Button\r\n                    variant=\"secondary class-more-btn\"\r\n                    onClick={() =>\r\n                      this.openModal(module_item.moduleID, \"details\")\r\n                    }\r\n                  >\r\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\r\n                    Details\r\n                  </Button>{\" \"}\r\n                  <DropdownButton title=\"Manage\" >\r\n                    <Dropdown.Item\r\n                      eventKey=\"1\"\r\n                      onClick={() =>\r\n                        this.openModal(module_item.moduleID, \"update\")\r\n                      }\r\n                    >\r\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\r\n                      Update\r\n                    </Dropdown.Item>\r\n                   \r\n                    <Dropdown.Item eventKey=\"2\">\r\n                      <i class=\"fa fa-trash\" aria-hidden=\"true\"></i> Delete\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item\r\n                      eventKey=\"3\"\r\n                      \r\n                    >\r\n                      <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>{\" \"}\r\n                      Add new ressource\r\n                    </Dropdown.Item>\r\n                   \r\n                  </DropdownButton>\r\n                </td>\r\n                <Modal\r\n                  show={this.state.openedDialog === module_item.moduleID}\r\n                  onHide={this.closeModal}\r\n                >\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>{module_item.title}</Modal.Title>\r\n                  </Modal.Header>\r\n\r\n                  <Modal.Body>\r\n                  <Form  onSubmit={() => this.handleUpdateModule(module_item.moduleID)}>\r\n                <Form.Group id=\"moduleID\">\r\n                  \r\n                  <Form.Label>Module Code</Form.Label>\r\n                  <Form.Control\r\n                      type=\"text\"\r\n                      name=\"moduleID\"\r\n                      id= \"moduleID_Val\"{...module_item.moduleID}\r\n                      value= {module_item.moduleID}\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                      readOnly=\"true\"\r\n                    ></Form.Control>                  \r\n                    </Form.Group>\r\n           \r\n                  <Form.Group id=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      id= \"title_Val\"{...module_item.moduleID}\r\n                      value= {module_item.title}\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      id= \"description_Val\"{...module_item.moduleID}\r\n                      value= {module_item.description}\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                      readOnly={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n               \r\n<Form.Group id=\"published\">\r\n\r\n<Form.Check\r\n        type=\"checkbox\"\r\n        id= \"published\"{...module_item.moduleID}\r\n        className=\"mb-2\"\r\n        label=\"Published\"\r\n      />\r\n  </Form.Group>\r\n                \r\n                </Form>\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <Button    disabled={\r\n                        this.state.actionType === \"update\" ? false : true\r\n                      }\r\n                      variant=\"primary\"\r\n                     type = \"submit\"\r\n                    >\r\n                      Save Changes\r\n                    </Button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n\r\n        <Modal\r\n                  show={this.state.openedDialog === this.state.sel_moduleID}\r\n                  onHide={this.closeModal}\r\n                >\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>New Ressources</Modal.Title>\r\n                  </Modal.Header>\r\n\r\n                  <Modal.Body>\r\n                  <Form  onSubmit={() => this.handleAddRessource(this.state.moduleID)}>\r\n                <Form.Group id=\"ressourceID\">\r\n                  \r\n                  <Form.Label>Ressource Code</Form.Label>\r\n                  <Form.Control\r\n                      type=\"text\"\r\n                      name=\"ressourceID\"\r\n                      id= \"ressourceID_Val\"{...this.state.moduleID}\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                   \r\n                    ></Form.Control>                  \r\n                    </Form.Group>\r\n           \r\n                  <Form.Group id=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      id= \"title_Val_res\"{...this.state.moduleID}\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      id= \"description_Val_res\"{...this.state.moduleID}\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                   \r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n               \r\n<Form.Group id=\"published\">\r\n\r\n<Form.Check\r\n        type=\"checkbox\"\r\n        id= \"published_res\"{...this.state.moduleID}\r\n        className=\"mb-2\"\r\n        label=\"Published\"\r\n      />\r\n  </Form.Group>\r\n                \r\n                </Form>\r\n                  </Modal.Body>\r\n                  <Modal.Footer>\r\n                    <Button   \r\n                      variant=\"primary\"\r\n                     type = \"submit\"\r\n                    >\r\n                      Save Changes\r\n                    </Button>\r\n                  </Modal.Footer>\r\n                </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Sidenav from \"../Sidenav\";\r\nimport ManageModules from \"./ManageModules\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\r\n\r\nexport default class ModuleNew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showHide: false,\r\n      openedDialog: -1,\r\n      moduleID: \"\",\r\n      classID: \"\",\r\n      description: \"\",\r\n      published: 0,\r\n      title: \"\",\r\n      teacherID: this.props.match.params.teacherID,\r\n    };\r\n  }\r\n\r\n  //handle the student list popup\r\n  handleModalShowHide() {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n\r\n  //method to update the state variables with the user inputs\r\n  handleModuleInput = (e) => {\r\n    const name = e.target.name;\r\n\r\n    const value = e.target.value;\r\n\r\n    this.setState({ [name]: value });\r\n    // console.log(\"Name: \" + name + \"value:\" + value);\r\n  };\r\n  //method to add Module to the database\r\n  handleAddModule = (event) => {\r\n    const db = getDatabase();\r\n    set(ref(db, \"modules/\" + this.state.moduleID), {\r\n      moduleID: this.state.moduleID,\r\n      description: this.state.description,\r\n      title: this.state.title,\r\n      published: this.state.published,\r\n      classID: this.props.match.params.classID,\r\n    })\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to save data new Module!\" + error);\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  //get List of classes\r\n\r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let classList = [];\r\n\r\n    //get list of classes\r\n    get(child(dbRef, `classes`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              classList.push(itemVal);\r\n            });\r\n            this.setState({ classList: classList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <Sidenav role=\"teacher\" euid={this.props.match.params.teacherID} />\r\n        <Container>\r\n          <Row className=\"theme_body\">\r\n            <Col>\r\n              {\" \"}\r\n              <div className=\"big-title\">\r\n                <h3 className=\"big_title\">Modules</h3>\r\n\r\n                <div>\r\n                  <ManageModules\r\n                    teacherID={this.props.match.params.teacherID}\r\n                    classID={this.props.match.params.classID}\r\n                  ></ManageModules>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              {\" \"}\r\n              <div className=\"big-title\">\r\n                <h3 className=\"big_title\">New Modules</h3>\r\n                {this.state.description}\r\n                <Form onSubmit={this.handleAddModule}>\r\n                  <Form.Group id=\"moduleID\">\r\n                    <Form.Label>Module Code</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"moduleID\"\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"description\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                      required\r\n                      onChange={this.handleModuleInput}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group id=\"published\">\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      id=\"published\"\r\n                      className=\"mb-2\"\r\n                      label=\"Published\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group id=\"action\">\r\n                    <Button\r\n                      className=\"w-100 btn-secondary\"\r\n                      size=\"lm\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Footer></Footer>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Table,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Button,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"react-bootstrap\";\r\nimport \"../../firebase\";\r\nimport { getDatabase, ref, get, child, set } from \"firebase/database\";\r\nimport Sidenav from \"../Sidenav\";\r\n\r\nexport default class RollCall extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      actionType: \"\",\r\n      studentList: [],\r\n      classID: \"\",\r\n      teacherID: this.props.match.params.teacherID,\r\n      hidefeedback: \"none\",\r\n      classList:[],\r\n      firstName :\"\"\r\n    };\r\n  }\r\n //method to update the state variables with the user selection\r\n getListofstudents = (e) => {\r\n \r\n\r\n  const classID = e.target.value;\r\n\r\n  this.setState({ classID: classID });\r\n  this.setState({studentList: [] });\r\nconsole.log(\"get student of  :\"+classID);\r\n  //get list of student of the selected class\r\n  const dbRef = ref(getDatabase());\r\n  let studentList = [];\r\n  get(child(dbRef, \"classes/\"+classID+\"/students\"))\r\n  .then(\r\n    (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        snapshot.forEach(function (item) {\r\n          var itemVal = item.val();\r\n          studentList.push(itemVal);\r\n        });\r\n        this.setState({ studentList: studentList });\r\n      } else {\r\n        console.log(\"No data available\");\r\n      }\r\n    },\r\n    {\r\n      onlyOnce: true,\r\n    }\r\n  )\r\n  .catch((error) => {\r\n    console.error(error);\r\n  });\r\n // console.log(\"Name: \" + name + \"value:\" + value);\r\n};\r\n\r\ngetstudentFirstName = (euid,i) => {\r\n\r\n  const dbRef = ref(getDatabase());\r\n  let firstName = \"\";\r\n\r\n  get(child(dbRef, \"users/\"+euid))\r\n  .then(\r\n    (snapshot) => {\r\n      if (snapshot.exists()) {\r\n     \r\n        firstName = snapshot.child(\"firstname\").val();\r\ndocument.getElementsByName(\"firstnames\")[i].innerHTML = firstName;\r\n      console.log(firstName);\r\n      } else {\r\n        console.log(\"No data available\");\r\n      }\r\n    },\r\n    {\r\n      onlyOnce: false,\r\n    \r\n\r\n    },\r\n   \r\n  )\r\n  .catch((error) => {\r\n    console.error(error);\r\n  });\r\n\r\nreturn firstName;\r\n};\r\n  //method to roll call \r\n  handleRollCall = (studentID,status) => {\r\n    const db = getDatabase();\r\n    const date = new Date();\r\n    let today = date.getMonth() +\"-\" +date.getFullYear() + \"-\" +date.getDate()  ;\r\n    set(ref(db, \"attendances/\" + this.state.classID+ \"/\"+studentID + \"/\" + today), {\r\n    \r\n     \"status\": status,\r\n     \"teacherID\":this.state.teacherID,\r\n    \r\n    })\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Failed to save data new class!\" + error);\r\n      });\r\n  };\r\n \r\n  componentDidMount() {\r\n    const dbRef = ref(getDatabase());\r\n    let classList = [];\r\n    let teacher = this.state.teacherID;\r\n\r\n    //get list of classes\r\n    get(child(dbRef, `classes`))\r\n      .then(\r\n        (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            snapshot.forEach(function (item) {\r\n              var itemVal = item.val();\r\n              console.log(\"Teacher ID\" + itemVal.teacherID + \"---\" + teacher);\r\n              if (itemVal.teacherID == teacher) {\r\n                console.log(\"Teacher ID\" + itemVal.teacherID);\r\n                classList.push(itemVal);\r\n              }\r\n            });\r\n            // this.setState({nb_classes: nb_classes});\r\n            this.setState({ classList: classList });\r\n          } else {\r\n            console.log(\"No data available\");\r\n          }\r\n        },\r\n        {\r\n          onlyOnce: true,\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    \r\n  }\r\n\r\n  render() {\r\n    //create nav nodes for classes\r\n    const listclasses = this.state.classList.map((class_item) =>\r\n        \r\n    <option value={class_item.classID}>\r\n      {class_item.classID} -- {class_item.name} </option>\r\n         );\r\n    return (\r\n      <div>\r\n     \r\n      <Sidenav role=\"teacher\"  euid={this.props.match.params.teacherID}/>\r\n      <Container>\r\n        <Row className=\"theme_body\">\r\n          <Col>\r\n            {\" \"}\r\n            <div className=\"big-title\">\r\n              <h3 className=\"big_title\">Classes</h3>\r\n             \r\n\r\n      <div>\r\n        \r\n\r\n<Form.Group id=\"classID\" Style=\" margin-bottom: 14px;\">\r\n                  \r\n                \r\n                <Form.Select  name= \"classID\" aria-label=\"dropdown list of classes\"   onChange={this.getListofstudents} required>\r\n                <option value=\"\">\r\n         Select Class</option>\r\n                  {listclasses}\r\n                  </Form.Select>\r\n                  </Form.Group>\r\n                  \r\n               \r\n        <Table striped bordered hover size=\"sm\" >\r\n          <thead>\r\n            <tr>\r\n          \r\n              <th>Student ID</th>\r\n              <th>First Name</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.studentList.map((student_item,index) => (\r\n              <tr>\r\n                <td>{student_item}</td>\r\n                <td>{ this.getstudentFirstName(student_item,index)} <label name=\"firstnames\"></label></td>\r\n                <td width=\"37%\">\r\n                  {\" \"}\r\n                  <Button\r\n                    variant=\"success class-more-btn\"\r\n                    onClick={() =>\r\n                      this.handleRollCall(student_item, \"Present\")\r\n                    }\r\n                  >\r\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\r\n                    Present\r\n                  </Button>{\" \"}\r\n                  <Button\r\n                    variant=\"danger class-more-btn\"\r\n                    onClick={() =>\r\n                      this.handleRollCall(student_item, \"Absent\")\r\n                    }\r\n                  >\r\n                    <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>{\" \"}\r\n                    Absent\r\n                  </Button>{\" \"}\r\n                  \r\n                </td>\r\n                            </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      </div>\r\n      </Col>\r\n      </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React  from \"react\";\r\nimport Register from \"./Register\";\r\nimport Login from \"./Login\";\r\nimport RessourceDetail from \"./Modules/Ressources/RessourceDetail\";\r\nimport {Switch, Route, HashRouter  as Router} from 'react-router-dom';\r\nimport Dashboard from \"./Dashboard\";\r\nimport ClassDetails from \"./Classes/ClassDetails\";\r\nimport AssignmentDetails from \"./Assignments/AssignmentDetails\";\r\nimport DashboardTeacher from \"./DashboardTeacher\";\r\nimport ClassNew from \"./Classes/ClassNew\";\r\nimport Grades from \"./Grades/Grades\";\r\nimport AssignmentList from \"./Assignments/AssignmentList\";\r\nimport PeopleByClass from \"./Attendances/PeopleByClass\";\r\nimport AttendanceByClass from \"./Attendances/AttendanceByClass\";\r\nimport AssignmentNew from \"./Assignments/AssignmentNew\";\r\nimport ModuleNew from \"./Modules/ModuleNew\";\r\nimport RollCall from \"./Attendances/RollCall\";\r\n\r\nfunction App() {\r\n  return (\r\n<main>\r\n    <div className=\"App\">\r\n      \r\n      <Router>\r\n <Switch>\r\n      <Route path=\"/\" component={Login} exact/>\r\n      <Route path=\"/Register\" component={Register}/>\r\n      <Route path=\"/Dashboard/:euid\" component={Dashboard}/>\r\n      <Route path=\"/DashboardTeacher/:euid\" component={DashboardTeacher}/>\r\n      <Route path=\"/ressourceDetails/:ressourceId/:moduleId/:classId/:euid\" component={RessourceDetail}/>\r\n      <Route path=\"/classDetails/:classId/:euid\" component={ClassDetails}/>\r\n      <Route path=\"/newClass/:euid/\" component={ClassNew}/>\r\n      <Route path=\"/manageAssignment/:euid/\" component={AssignmentNew}/>\r\n      <Route path=\"/manageModules/:classID/:teacherID/\" component={ModuleNew}/>\r\n      <Route path=\"/assignmentDetails/:assignmentID/:classId/:euid\" component={AssignmentDetails} />\r\n      <Route path=\"/assignmentListsByClass/:classId/:euid\" component={AssignmentList} />\r\n      <Route path=\"/attendances/:classId/:euid\" component={AttendanceByClass} />\r\n      <Route path=\"/people/:classId/:euid\" component={PeopleByClass} />\r\n      <Route path=\"/Grades/:classId/:euid\" component={Grades}/>\r\n      <Route path=\"/rollCall/:teacherID/\" component={RollCall}/>\r\n   \r\n    </Switch>\r\n</Router>\r\n    </div>\r\n    </main>\r\n \r\n    \r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport App from './components/App';\r\nimport './css/style.css'; \r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  \r\n    <App />,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}